%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Dewes_Figure3.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: adewes
%%CreationDate: 09/01/2012, 16:13:18
%%BoundingBox: -138 137 443 580
%%HiResBoundingBox: -137.2060 137.2061 442.2172 579.4233
%%CropBox: -137.2060 137.2061 442.2172 579.4233
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1095 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Acrobat Distiller 10.0.1 (Windows)"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2011-09-20T18:23:32+02:00"
   xmp:CreateDate="2011-09-20T18:22:58+02:00"
   xmp:MetadataDate="2011-09-20T18:23:32+02:00"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:41725cbf-d9b5-4743-94f7-a2a3deb3c441"
   xmpMM:InstanceID="uuid:067769ab-5283-4277-a671-00b07ff1284f">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - CHSH.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>dv</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -579.423 translate
pgsv
[0 1 -1 0 442.217 0 ]ct
gsave
np
gsave
0 0 mo
0 579.423 li
442.217 579.423 li
442.217 0 li
cp
clp
[1 0 0 1 -51.3288 0 ]ct
gsave
567.48 602.315 mo
27.48 602.315 li
27.48 -117.685 li
567.48 -117.685 li
cp
eclp
27.48 602.315 mo
567.48 602.315 li
567.48 -117.685 li
27.48 -117.685 li
cp
false sop
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
27.48 602.366 mo
532.26 602.366 li
532.26 -43.945 li
27.48 -43.945 li
cp
f
grestore
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c79660ef78fec000068a40003e76268656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f63610e6169320000284800001a2c6d6178700b470ca80000
4274000000206e616d65c0f2653b0000429400001b0d7072657052fec4e9
00005da400000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d00000001000000030000e6e8baea5f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a000000d60000017e00000320000005a60000
074e000009380000097e000009fe00000aa400000b8400000bec00000c64
00000caa00000ce600000d5600000f1200000fee00001218000013f20000
15520000170c000018e20000198e00001c2200001e5600001eb200001f70
00001ff200002062000020e8000021da000023da000025840000271c0000
28560000299e00002a6200002b1800002ca800002dae00002e9200002f7a
000031b00000323a000035640000370e000038420000394800003b3c0000
3da800004052000041000000422400004398000045d6000048e200004a88
00004bc800004c3200004c9c00004d0000004d8800004dbc00004e380000
510a000052e80000549c000056500000580e0000596200005b5200005cf6
00005dea00005f020000619a00006296000064c60000668c0000684e0000
6a1200006ba800006cae000070560000717a0000731800007536000079a0
00007bc400007e1c00008004000081020000814e00008250000082f00000
833c00008370000083ac000083ee000084540000849a000084ce00008504
0000853a0000858a000085cc0000861e00008656000086a8000086de0000
871e000087600000879e000087e800008828000088560000888e000088de
00008914000089540000898e000089d200008a1c00008a5800008a880000
8acc00008b0400008b9400008c1a00008e2800008fbc0000916c000091b8
0000924c00009470000096c4000098b4000099a000009a2200009a8c0000
9baa00009d0600009f4e0000a0b00000a13e0000a1e80000a2ac0000a3f4
0000a59e0000a68c0000a7520000a7b60000a8240000a94e0000aa720000
ab020000ace40000af3e0000b2900000b3860000b42c0000b47c0000b532
0000b6520000b7f00000b88a0000b94e0000ba0e0000ba760000bab20000
bb0a0000bb580000bd700000bfb60000bfee0000c0200000c14a0000c276
0000c3240000c3c80000c46a0000c53c0000c5900000c5c60000c61e0000
c7700000c7e20000c83c0000c9b40000cb200000cc000000cc320000ccce
0000cdf20000d0680000d0a20000d0e60000d1220000d1840000d1c60000
d20c0000d2580000d28a0000d2de0000d31c0000d34c0000d38a0000d3d0
0000d4120000d4500000d4d20000d5400000d6260000d6620000d6e20000
d7160000d7b80000d8400000d8ac0000d9380000d9a40000da900000db82
0000dbb60000dbea0000dc1a0000dc5e0000dcd60000de500000e06a0000
e09c0000e0d60000e1d00000e35e0000e3940000e4f80000e5740000e654
0000e74a0000e8da0000ea440000ec320000ed2e0000ed740000eda80000
edea0000ee240000ee780000eec00000ef0a0000ef3a0000ef6a0000f152
0000f1900000f1ca0000f1fa0000f22e0000f25e0000f28a0000f2d20000
f4880000f6020000f62e0000f6700000f6b40000f6e40000f7140000f76a
0000f8480000f95a0000f99e0000f9d40000fa2e0000fa6c0000faa00000
fad00000fb0c0000fb4c0000fb8a0000fbc60000fc080000fc3e0000fc7a
0000fcba0000fdc80000ff340000ff84000100e0000101360001016a0001
01b800010204000102460001027e000102b4000102fc0001039e0001053a
000107020001088400010a7600010bc800010d4c00010e2e00010fc80001
10320001105a000110f80001137a000113ba000113fa0001143a00011478
000114d600011534000115a2000115c2000116ac0001174c000117820001
17d00001181a00011864000118800001189c000118bc000118dc000118fc
0001191c00011942000119680001198e000119b4000119e400011a0c0001
1a3400011a6000011a8c00011ac000011aea00011b1600011b4c00011b76
00011ba200011bd800011c0200011c2c00011c6000011c9000011cc40001
1d0800011d3800011d6c00011dae00011de200011e1400011e5600011e8a
00011eba00011efc00011f4000011f8600011fe200011ffe0001201a0001
2036000120520001206e000121dc000124ac0001271c0001273800012752
0001276e0001278a000127a6000127c20001281e00012858000128c20001
298c00012a2c00012b0200012b8200012c0a00012c7a00012d1000012d6e
00012db400012e1200012e7400012f2c00012fea00013016000130720001
30b60001322200013316000133400001335c00013388000133c00001340c
0001344c00013480000134b0000134e00001351000013554000135840001
35b4000135f4000136240001365400013684000136c4000136f400013724
000137540001378200013986000139b6000139e600013b3600013cec0001
3d1c00013d4a00013d7a00013da800013dd800013e0600013f3400014062
00014092000142020001423a0001426a000143fc0001442a000144580001
4486000144ae0001460c000147a4000147dc0001481c0001485800014888
000148b6000148d2000149020001493200014a2200014b8a00014bba0001
4bf400014c3400014c6400014c9400014cd600014e760001505600015096
000150d6000151060001514600015230000152b000015394000153c40001
53f4000154240001545400015490000154c2000154f40001552400015554
0001559a000155cc000155fc00015632000156a4000156d8000158a60001
59a800015b3800015d6800015fb80001614a000161ae0001623800016248
000162d6000164d4000166000001676c0001685c000169e000016bfa0001
6e2600016f1800016f2800016f3800017050000170600001707000017080
00017090000170a0000171be000171ce000171de00017252000172620001
73320001734200017454000174640001747400017484000175e2000177c0
00017802000178380001786e0001789e000178ce000179220001794a0001
7ad400017c1c00017d7000017ed80001805c000180c0000182520001836e
0001837e0001838e00018514000185240001868a000187e4000189180001
8a7600018be400018daa00018dea00018e2200018e5800018e7e00018eae
00018ed40001904a0001907a000191b0000191c0000191d0000192120001
9222000193b600019562000196ec0001971400019744000198a0000198b0
000199e8000199f800019a9200019bf200019c0200019e6800019ff20001
a15a0001a18a0001a3000001a4320001a4420001a4520001a4620001a53c
0001a54c0001a55c0001a56c0001a6640001a7de0001a7ee0001a9160001
aa4a0001ab9c0001ad300001ae4e0001afda0001b0ec0001b1220001b358
0001b3f80001b4080001b59e0001b7400001b7c40001b9460001b9560001
bbbe0001bd3e0001bebe0001beee0001c08e0001c2140001c3d80001c504
0001c5140001c6440001c6540001c6640001c7240001c7340001c91a0001
c92a0001ca600001cb6e0001cd1a0001ced00001d0120001d1820001d2ca
0001d31c0001d4fe0001d67a0001d6b80001d85e0001d8820001d9c20001
d9d20001d9e20001da1a0001da2a0001dbb60001dd240001de980001debc
0001deec0001e05a0001e10c0001e1ca0001e1f80001e3ae0001e4a60001
e5340001e6600001e7140001e7ee0001e8380001e8b60001e97c0001e9a4
0001e9ee0001ea440001eb300001eb7a0001ebae0001ebd60001ebfe0001
ec320001ec760001ecba0001ecf80001ee360001eeee0001f00e0001f084
0001f1520001f1a40001f2360001f2e60001f3da0001f42e0001f4c40001
f5820001f66c0001f71e0001f83e0001f8900001f93a0001fa700001fb48
0001fc2e0001fd340001fe1a0001fefc0001fff00002008e000201940002
028e000203060002037e000203f40002042a000204860002054e000205da
000206120002065800020688000206f2000207b2000207e6000208160002
084a0002087a000208aa000208da00020a7a00020ab200020af200020b2a
00020b6200020bfe00020cf800020d2800020dcc00020dfa00020e3a0002
0e8a00020eba00020f060002109e0002120400021364000213aa000213fe
00021436000215a8000215de00021670000216ae000216dc0002171a0002
184a00021872000219ae00021a3e00021ae800021b6a00021c2600021d3e
00021e4c00021e8000021f0600022062000220e40002212e000222380002
2280000223840002240000022458000224dc000225c6000226dc000227d8
000228820002297200022a4400022b2e00022c1600022cc600022d480002
2fa600022fd000022ffa000230b2000230dc0002321e000233240002340e
00023438000234620002348c000234b6000234e0000236600002368a0002
36b4000236de00023708000237320002375c00023786000237b0000237e4
0002380e0002383800023862000239dc000239ec00023b0600023b160002
3b4000023b6a00023b9400023bbe00023d6800023f84000240b2000240c2
0002423e0002424e000243940002456000024666000247e6000249860002
4baa00024d0400024ee60002502a0002515800025182000251ac000251d6
000252000002522a000252540002527e000252a8000252d2000252fc0002
5326000253500002537a000253a4000253ce000253f800025634000257b0
000258f400025adc00025c2400025c4e00025c7800025ca800025cd80002
5d2800025d7800025db800025e2a00025e7e00025edc00025f3200025f68
00025faa00025ff00002603a0002606a000260a2000260d20002620a0002
65500002657a000265a4000265ce000265f8000266220002664c00026676
000266a0000266ca000266f40002671e00026748000267720002679c0002
67c6000267f00002681a000268440002686e00026898000268c2000268ec
00026916000269400002696a00026994000269be000269e800026a860002
6a9c00026ac600026da600026db600026ed000026ff20002713000027272
00027418000274280002756a000276ba000278aa00027a7e00027b960002
7ba600027c2800027cb600027db600027dc600027e6600027e7600027f8c
000280de0002820e0002821e000282ec000282fc00028472000284820002
8596000285a6000286da000288700002892c0002893c00028a3a00028b94
00028c2000028c3000028d5a00028ee600028fa200028fb20002904e0002
905e0002912c0002913c00029214000292240002932c0002933c00029502
000295120002966a0002967a000298e4000298f400029aee00029afe0002
9c6800029c7800029d6800029d7800029f1000029f200002a03e0002a04e
0002a18e0002a19e0002a1ae0002a1be0002a3360002a3460002a3560002
a3660002a4b80002a6060002a6d40002a7b80002a9380002aaba0002abba
0002acce0002ae120002ae220002af100002afea0002b1860002b1960002
b2b40002b3ba0002b5b80002b5c80002b5d80002b5e80002b7320002b742
0002b7fa0002b80a0002b9180002b9280002ba140002ba240002bb420002
bb520002bbf00002bc000002bc100002bcfe0002be720002bf9e0002c098
0002c0a80002c0b80002c0c80002c2660002c4200002c4ee0002c4fe0002
c75e0002c9a40002cc2a0002ce8e0002d1120002d3840002d5540002d70a
0002d7340002d75e0002d76e0002d77e0002d7a80002d7d20002d7fc0002
d80c0002d81c0002d8460002d8700002d8800002d8900002d8ba0002d8e4
0002d90e0002d91e0002d92e0002d93e0002d94e0002d95e0002d96e0002
d9980002d9a80002d9b80002d9e20002da0c0002da360002da600002da8a
0002dab40002dade0002db080002db320002db5c0002db860002dbb00002
dbda0002dc040002dc2e0002dc580002dc820002dcac0002dcd60002dd00
0002dd2a0002dd540002dd7e0002dda80002ddd20002ddfc0002de260002
de500002de7a0002dea40002dece0002def80002df220002df4c0002df76
0002dfa00002dfca0002dff40002e01e0002e0480002e0720002e09c0002
e0c60002e0f00002e11a0002e1440002e16e0002e1980002e1c20002e1ec
0002e2160002e2400002e26a0002e2940002e3340002e3780002e3ee0002
e4180002e4420002e46c0002e4960002e4c00002e4ea0002e5140002e53e
0002e5680002e5920002e5bc0002e5e60002e6100002e63a0002e6640002
e68e0002e6b80002e6e20002e70c0002e7360002e7600002e78a0002e7b4
0002e7de0002e8120002e8460002e87a0002ea0c0002eba80002ed440002
eed00002ef160002ef5c0002efca0002f0260002f0780002f0e80002f1c0
0002f28c0002f3640002f4300002f4d00002f5ea0002f69e0002f7200002
f77a0002f7ba0002f8d80002fa220002fbba0002fc160002fc740002fcd0
0002fd2c0002fde00002fe960002ff420002ffee0003009a000301520003
020a000302c2000302d4000302e6000302f80003030a0003031c0003038a
000303f8000304b0000304c2000304d4000304e6000304f6000305080003
051a0003052c0003053e000305500003056200030610000306bc0003076a
00030816000308ae000308e8000309120003093c00030990000309e20003
0a5e00030aa800030b2400030b7800030bfc00030c4e00030cc400030d1c
00030d8200030dd800030e3200030eb000030efc00030f5a00030fbe0003
100c0003105a000310b2000310fa000311240003115200031178000311ac
000311dc0003120c0003125e000312cc0003132200031396000313ea0003
145e000314a40003150c00031552000315ae000315de000316180003163e
0003166e00031694000316ba000316ec0003171c0003176e000317d40003
182a00031890000318e40003195200031994000319f400031a3600031a82
00031abc00031af800031b3200031b6e00031ba200031bd400031c040003
1c3400031c5e00031c8400031cae00031cdc00031d0600031d5200031d96
00031dcc00031e0800031e3c00031e6a00031ea800031ed800031f120003
1f3c00031f6a00031f9000031fb600031fe20003203e0003206e0003209e
000320ce000321060003213a0003216800032198000321c8000321f80003
22280003225c000322b2000322e6000323460003237a000323d200032406
0003246200032500000325ce000326ee000327b600032846000328dc0003
2ac800032cc400032e3c00032fb80003316200033314000333fc00033532
0003362a0003373c0003385a0003399000033afa00033c6800033dfe0003
3f7a0003408a0003409a000341c60003430200034444000345c8000346a2
00034718000347ce00034874000349e400034a1c00034a9600034b580003
4c1200034c7a00034d8000034eb600034f84000350e20003515c000351d6
0003529e000353580003540c00035468000354c20003550a0003557a0003
55f6000356400003567a000356c00003570400035756000357a80003582a
000358ac000358ee0003592e000359640003599a000359c8000359f60003
5a2a00035a5e00035aa000035ae200035b1e00035b5a00035b9400035bce
00035c0000035c3200035c6400035c9600035cd000035d0a00035d4c0003
5d8e00035dd000035e1200035e6000035eae00035ef000035f3200035f72
00035fb200035fec0003602600036072000360be000360fc0003613c0003
6182000361c8000362040003625a00036296000362d20003631200036352
0003638e000363ca0003640a0003644a0003648e000364d2000365260003
65b4000365f600036638000366a0000367080003673a0003676c000367a4
000367dc0003687200036908000369520003699c000369d800036a140003
6a6a00036ac000036b0a00036b5400036bac00036c0400036c4400036c84
00036cbc00036cf400036d3e00036d8800036dc600036e0400036e460003
6e8800036edc00036f3000036f7600036fbc00037002000370480003709e
000370f40003714a000371a0000371ec0003723800037284000372d00003
7344000373b80003742c000374a0000374de0003751c0003755a00037598
000375d600037614000376580003769c000376e800037734000377940003
77e00003781e0003786c0003797c000379cc00037a1c00037a5400037a8c
00037ae200037b3800037bac00037c1000037c5200037c9400037cea0003
7d3800037d8400037dd000037e1000037e5000037e9800037ee000037f4c
00037fa600037fde000380160003805600038096000381b0000382f60003
83e6000384f60003854c000385a2000385f400038648000386ac00038710
00038766000387bc00038832000388a8000388ea0003892c0003896e0003
89b0000389f200038a3400038a8a00038ae000038b3200038b8600038c0e
00038c9000038d3000038dd200038e1000038e4e00038e8c00038ec80003
8f0600038f4400038f8200038fbe000390a20003918e000392a4000393c0
0003948a000395540003964e00039748000398460003994400039a620003
9b8000039ca600039dcc00039ece00039fd00003a0620003a0f40003a132
0003a1700003a1ca0003a2240003a25c0003a2940003a3a40003a3b40003
a3fc0003a4440003a49c0003a4f40003a5260003a5580003a59a0003a5dc
0003a6160003a6500003a6940003a6d80003a7500003a7ca0003a85a0003
a89e0003a8de0003a9600003a9e20003ab3a0003ab4a0003ab980003abe6
0003ac220003ac5e0003aca40003acea0003ad380003ad860003add60003
ae260003ae820003aede0003b0540003b1bc0003b1f40003b22e0003b27a
0003b2c60003b3180003b36a0003b3bc0003b4120003b44e0003b48a0003
b4e00003b5340003b66c0003b70c0003b75a0003b79a0003b7d40003b96a
0003bbd20003bc960003be2c0003bf8a0003c0580003c1fe0003c4520003
c68a0003c6d00003c7020003c7ac0003c8d00003c8f40003c98e0003ca9a
0003cbaa0003ccba0003cdc80003cf4e0003cf800003d0220003d04a0003
d0ac0003d10e0003d1700003d1d20003d2100003d24e0003d2880003d2c2
0003d2ee0003d33a0003d3740003d3ae0003d50a0003d65e0003d66e0003
d72c0003d8620003d8c00003d9d80003db660003dc0c0003dd520003dd90
0003ddce0003de0c0003de600003de880003dee20003df460003df8e0003
dff00003e0500003e0c20003e13e0003e1ba0003e23c0003e2c80003e354
0003e3de0003e45e0003e4980003e4d40003e6380003e7020003e7320003
e76200010000068a0100003f0076000700020010002f00560000040d0aff
0003000200000046034e000000030000000000fe00000000000300000001
000a013e0000000300000002000e05de0000000300000003005e05c00000
000300000004000a013e0000000300000005001805ee0000000300000006
000e061e000000030000000700c4062c00000003000000080026077c0000
000300000009008a0da4000000030000000a04c200fe000000030000000b
00620e2e000000030000000c00660e90000000030000000d06b406f00000
00030000000e005c0ef60001000000000000007f0f520001000000000001
00050ff10001000000000002000712410001000000000003002f12320001
00000000000400050ff10001000000000005000c12490001000000000006
000712610001000000000007006212680001000000000008001313100001
00000000000900451624000100000000000a02610fd1000100000000000b
00311669000100000000000c0033169a000100000000000d035a12ca0001
00000000000e002e16cd0003000104030002000c16fb0003000104050002
0010170b0003000104060002000c171b0003000104070002001017270003
00010408000200101737000300010409000000fe00000003000104090001
000a013e0003000104090002000e05de0003000104090003005e05c00003
000104090004000a013e0003000104090005001805ee0003000104090006
000e061e000300010409000700c4062c00030001040900080026077c0003
000104090009008a0da4000300010409000a04c200fe000300010409000b
00620e2e000300010409000c00660e90000300010409000d06b406f00003
00010409000e005c0ef600030001040a0002000c16fb00030001040b0002
0010174700030001040c0002000c16fb00030001040e0002000c17570003
000104100002000e17670003000104130002001217750003000104140002
000c16fb0003000104150002001016fb0003000104160002000c16fb0003
000104190002000e178700030001041b00020010175700030001041d0002
000c16fb00030001041f0002000c16fb0003000104240002000e17950003
0001042a0002000e17a300030001042d0002000e17b100030001080a0002
000c16fb0003000108160002000c16fb000300010c0a0002000c16fb0003
00010c0c0002000c16fb00540079007000650066006100630065002000a9
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200070006c0063002e
00200044006100740061002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002f005400790070006500200053006f006c
007500740069006f006e007300200049006e0063002e0020003100390039
0030002d0031003900390032002e00200041006c006c0020005200690067
0068007400730020005200650073006500720076006500640043006f006e
00740065006d0070006f0072006100720079002000730061006e00730020
00730065007200690066002000640065007300690067006e002c00200041
007200690061006c00200063006f006e007400610069006e00730020006d
006f00720065002000680075006d0061006e006900730074002000630068
006100720061006300740065007200690073007400690063007300200074
00680061006e0020006d0061006e00790020006f00660020006900740073
0020007000720065006400650063006500730073006f0072007300200061
006e0064002000610073002000730075006300680020006900730020006d
006f0072006500200069006e002000740075006e00650020007700690074
006800200074006800650020006d006f006f00640020006f006600200074
006800650020006c00610073007400200064006500630061006400650073
0020006f006600200074006800650020007400770065006e007400690065
00740068002000630065006e0074007500720079002e0020002000540068
00650020006f0076006500720061006c006c002000740072006500610074
006d0065006e00740020006f006600200063007500720076006500730020
0069007300200073006f006600740065007200200061006e006400200066
0075006c006c006500720020007400680061006e00200069006e0020006d
006f0073007400200069006e0064007500730074007200690061006c0020
007300740079006c0065002000730061006e007300200073006500720069
0066002000660061006300650073002e00200020005400650072006d0069
006e0061006c0020007300740072006f006b006500730020006100720065
00200063007500740020006f006e00200074006800650020006400690061
0067006f006e0061006c002000770068006900630068002000680065006c
0070007300200074006f0020006700690076006500200074006800650020
0066006100630065002000610020006c0065007300730020006d00650063
00680061006e006900630061006c00200061007000700065006100720061
006e00630065002e002000200041007200690061006c0020006900730020
0061006e002000650078007400720065006d0065006c0079002000760065
00720073006100740069006c0065002000660061006d0069006c00790020
006f00660020007400790070006500660061006300650073002000770068
006900630068002000630061006e00200062006500200075007300650064
0020007700690074006800200065007100750061006c0020007300750063
006300650073007300200066006f00720020007400650078007400200073
0065007400740069006e006700200069006e0020007200650070006f0072
00740073002c002000700072006500730065006e0074006100740069006f
006e0073002c0020006d006100670061007a0069006e0065007300200065
00740063002c00200061006e006400200066006f00720020006400690073
0070006c00610079002000750073006500200069006e0020006e00650077
0073007000610070006500720073002c0020006100640076006500720074
006900730069006e006700200061006e0064002000700072006f006d006f
00740069006f006e0073002e004d006f006e006f0074007900700065003a
0041007200690061006c00200052006500670075006c00610072003a0056
0065007200730069006f006e00200033002e0030003000200028004d0069
00630072006f0073006f0066007400290041007200690061006c004d0054
0041007200690061006c00ae002000540072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0070006c0063002000720065006700690073007400650072006500640020
0069006e0020007400680065002000550053002000500061007400200026
00200054004d0020004f00660066002e00200061006e006400200065006c
0073006500770068006500720065002e004e004f00540049004600490043
004100540049004f004e0020004f00460020004c004900430045004e0053
0045002000410047005200450045004d0045004e0054000d000a000d000a
005400680069007300200074007900700065006600610063006500200069
00730020007400680065002000700072006f007000650072007400790020
006f00660020004d006f006e006f00740079007000650020005400790070
006f00670072006100700068007900200061006e00640020006900740073
002000750073006500200062007900200079006f00750020006900730020
0063006f0076006500720065006400200075006e00640065007200200074
006800650020007400650072006d00730020006f0066002000610020006c
006900630065006e00730065002000610067007200650065006d0065006e
0074002e00200059006f0075002000680061007600650020006f00620074
00610069006e006500640020007400680069007300200074007900700065
006600610063006500200073006f00660074007700610072006500200065
006900740068006500720020006400690072006500630074006c00790020
00660072006f006d0020004d006f006e006f00740079007000650020006f
007200200074006f00670065007400680065007200200077006900740068
00200073006f006600740077006100720065002000640069007300740072
0069006200750074006500640020006200790020006f006e00650020006f
00660020004d006f006e006f0074007900700065002700730020006c0069
00630065006e0073006500650073002e000d000a000d000a005400680069
007300200073006f00660074007700610072006500200069007300200061
002000760061006c007500610062006c0065002000610073007300650074
0020006f00660020004d006f006e006f0074007900700065002e00200055
006e006c00650073007300200079006f0075002000680061007600650020
0065006e0074006500720065006400200069006e0074006f002000610020
007300700065006300690066006900630020006c006900630065006e0073
0065002000610067007200650065006d0065006e00740020006700720061
006e00740069006e006700200079006f0075002000610064006400690074
0069006f006e0061006c0020007200690067006800740073002c00200079
006f0075007200200075007300650020006f006600200074006800690073
00200073006f0066007400770061007200650020006900730020006c0069
006d006900740065006400200074006f00200079006f0075007200200077
006f0072006b00730074006100740069006f006e00200066006f00720020
0079006f007500720020006f0077006e0020007000750062006c00690073
00680069006e00670020007500730065002e00200059006f00750020006d
006100790020006e006f007400200063006f007000790020006f00720020
006400690073007400720069006200750074006500200074006800690073
00200073006f006600740077006100720065002e000d000a000d000a0049
006600200079006f00750020006800610076006500200061006e00790020
007100750065007300740069006f006e00200063006f006e006300650072
006e0069006e006700200079006f00750072002000720069006700680074
007300200079006f0075002000730068006f0075006c0064002000720065
007600690065007700200074006800650020006c006900630065006e0073
0065002000610067007200650065006d0065006e007400200079006f0075
002000720065006300650069007600650064002000770069007400680020
00740068006500200073006f0066007400770061007200650020006f0072
00200063006f006e00740061006300740020004d006f006e006f00740079
0070006500200066006f00720020006100200063006f007000790020006f
006600200074006800650020006c006900630065006e0073006500200061
0067007200650065006d0065006e0074002e000d000a000d000a004d006f
006e006f0074007900700065002000630061006e00200062006500200063
006f006e007400610063007400650064002000610074003a000d000a000d
000a0055005300410020002d002000280038003400370029002000370031
0038002d0030003400300030000900090055004b0020002d002000300031
003100340034002000300031003700330037002000370036003500390035
0039000d000a0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d004d006f006e006f
007400790070006500200054007900700065002000440072006100770069
006e00670020004f006600660069006300650020002d00200052006f0062
0069006e0020004e006900630068006f006c00610073002c002000500061
0074007200690063006900610020005300610075006e0064006500720073
002000310039003800320068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f006d0074006e0061006d0065002f006d0073005f0061
007200690061006c002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f006d0074006e0061006d0065002f
006d0073005f00770065006c0063006f006d0065002e00680074006d006c
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d002f00680074006d006c002f0074
007900700065002f006c006900630065006e00730065002e00680074006d
006c547970656661636520a920546865204d6f6e6f7479706520436f7270
6f726174696f6e20706c632e204461746120a920546865204d6f6e6f7479
706520436f72706f726174696f6e20706c632f5479706520536f6c757469
6f6e7320496e632e20313939302d313939322e20416c6c20526967687473
205265736572766564436f6e74656d706f726172792073616e7320736572
69662064657369676e2c20417269616c20636f6e7461696e73206d6f7265
2068756d616e69737420636861726163746572697374696373207468616e
206d616e79206f6620697473207072656465636573736f727320616e6420
61732073756368206973206d6f726520696e2074756e6520776974682074
6865206d6f6f64206f6620746865206c6173742064656361646573206f66
20746865207477656e74696574682063656e747572792e2020546865206f
766572616c6c2074726561746d656e74206f662063757276657320697320
736f6674657220616e642066756c6c6572207468616e20696e206d6f7374
20696e647573747269616c207374796c652073616e732073657269662066
616365732e20205465726d696e616c207374726f6b657320617265206375
74206f6e2074686520646961676f6e616c2077686963682068656c707320
746f20676976652074686520666163652061206c657373206d656368616e
6963616c20617070656172616e63652e2020417269616c20697320616e20
65787472656d656c7920766572736174696c652066616d696c79206f6620
7479706566616365732077686963682063616e2062652075736564207769
746820657175616c207375636365737320666f7220746578742073657474
696e6720696e207265706f7274732c2070726573656e746174696f6e732c
206d6167617a696e6573206574632c20616e6420666f7220646973706c61
792075736520696e206e6577737061706572732c20616476657274697369
6e6720616e642070726f6d6f74696f6e732e4d6f6e6f747970653a417269
616c20526567756c61723a56657273696f6e20332e303020284d6963726f
736f667429417269616c4d54417269616ca82054726164656d61726b206f
6620546865204d6f6e6f7479706520436f72706f726174696f6e20706c63
207265676973746572656420696e2074686520555320506174202620544d
204f66662e20616e6420656c736577686572652e4e4f5449464943415449
4f4e204f46204c4943454e53452041475245454d454e540d0a0d0a546869
73207479706566616365206973207468652070726f7065727479206f6620
4d6f6e6f74797065205479706f67726170687920616e6420697473207573
6520627920796f7520697320636f766572656420756e6465722074686520
7465726d73206f662061206c6963656e73652061677265656d656e742e20
596f752068617665206f627461696e656420746869732074797065666163
6520736f66747761726520656974686572206469726563746c792066726f
6d204d6f6e6f74797065206f7220746f676574686572207769746820736f
667477617265206469737472696275746564206279206f6e65206f66204d
6f6e6f747970652773206c6963656e736565732e0d0a0d0a546869732073
6f66747761726520697320612076616c7561626c65206173736574206f66
204d6f6e6f747970652e20556e6c65737320796f75206861766520656e74
6572656420696e746f2061207370656369666963206c6963656e73652061
677265656d656e74206772616e74696e6720796f75206164646974696f6e
616c207269676874732c20796f757220757365206f66207468697320736f
667477617265206973206c696d6974656420746f20796f757220776f726b
73746174696f6e20666f7220796f7572206f776e207075626c697368696e
67207573652e20596f75206d6179206e6f7420636f7079206f7220646973
74726962757465207468697320736f6674776172652e0d0a0d0a49662079
6f75206861766520616e79207175657374696f6e20636f6e6365726e696e
6720796f75722072696768747320796f752073686f756c64207265766965
7720746865206c6963656e73652061677265656d656e7420796f75207265
63656976656420776974682074686520736f667477617265206f7220636f
6e74616374204d6f6e6f7479706520666f72206120636f7079206f662074
6865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e6f74
7970652063616e20626520636f6e7461637465642061743a0d0a0d0a5553
41202d202838343729203731382d303430300909554b202d203031313434
203031373337203736353935390d0a687474703a2f2f7777772e6d6f6e6f
747970652e636f6d4d6f6e6f7479706520547970652044726177696e6720
4f6666696365202d20526f62696e204e6963686f6c61732c205061747269
636961205361756e646572732031393832687474703a2f2f7777772e6d6f
6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f61726961
6c2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f
68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c687474
703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f74797065
2f6c6963656e73652e68746d6c004e006f0072006d0061006c006e007900
6f00620079010d0065006a006e00e9006e006f0072006d0061006c005300
740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac00
4e006f0072006d00610061006c0069004e006f0072006d00e1006c006e00
65004e006f0072006d0061006c0065005300740061006e00640061006100
720064041e0431044b0447043d044b0439004e0061007600610064006e00
6f0074006801b001a10300006e00670041007200720075006e0074006100
0000b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[15785 15901 16277 16373 15369 15665 16261 15773 16185 15861 14953 15997 15693
15621 16237 17907 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 3172 16 <0001004101b8026a026d0003002c401970027003024d014d020201230002
1a05700001001904708d182b4e10e45d10e6002f4ded31300071015d1335
211541022901b8b5b500>ArialMT AddT42Char 
1 3414 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>ArialMT AddT42Char 
1 3858 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>ArialMT AddT42Char 
1 4078 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>ArialMT AddT42Char 
1 4632 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>ArialMT AddT42Char 
1 5106 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>ArialMT AddT42Char 
1 5458 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>ArialMT AddT42Char 
1 5900 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>ArialMT AddT42Char 
1 6370 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>ArialMT AddT42Char 
1 6542 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>ArialMT AddT42Char 
1 7202 28 <00020055ffe7041905c0001e002a01aeb10602435458b70b1f1801002511
18b8fff6b40f0f065518b8fff4b40d0d065518b8fff040280c0c06551811
0c0d0d065511100c0c06551118112c2b0b281e0f0e1f0e4f0e030e0e1400
50010101b8ffc0400d1011065501041e1c0d221e1405003fed3fedc42b5d
3212392f5ded3201111239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb1
0202435458b70b1f180100251118b8ffeab40f0f025518b8ffea402a0d0d
025518110c0c0c02551118112c2b0b281e0f0e1f0e4f0e030e0e14005001
0101041e1c0d221e1405003fed3fedc45d3212392f5ded3201111239392f
2b2f2b2b10cdd4cd10ddc531301b40343a1a4c1640235b16572366036c16
6d1a67237a1a7d1e8c1a8b1e9a16a91abc1aea16e620f620133d169e16ad
16033a2964060227baffe00023ffe0401821200620281e4f0e5f0e020e0e
1c221e140501d350000100b80268b4041e1c0d1fba0139000b0138401118
40212334301801001810180218902c01b80138b400b5257311b8ffc0400e
212334201140110211902bc78b182b10f65d2bedf4ed10f65d712beded00
3fedfd5de43fed12392f5ded31300138383838005d71015d595913371616
33323e023534270606232202353400333216121110020623222601342623
220615141633323670ad167c61537d50360136bb6db6fc0107c68fed7b7a
f1a2acda02cba57478b2a97c7da10153107a6e4c7fd8700c18566b0108d8
df01109afee3fef2fee7feb3aebf03349bb6c49c8cafaf00>ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/hyphen 16 def
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/four 23 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
end
ArialMT /Encoding get
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
end
%ADOEndSubsetFont
/OIDHLO+ArialMT /ArialMT findfont ct_VMDictPut
/OIDHLO+ArialMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
OIDHLO+ArialMT nf
OIDHLO+ArialMT*1 [0 -19.8232 -19.8232 0 0 0 ]msf
458.52 521.075 mo
(04590135180225270315360)
[-56.5179 -10.9761 -50.9377 -10.9761 -45.1176 -10.9721 -10.9722 -39.9576 -10.9721 -10.9722 -40.0171 -10.9721 
-10.9722 -40.0171 -10.9166 -10.9722 -39.7772 -10.9721 -10.9721 -39.9576 -10.9721 -10.9722 0 ]ysh
386.04 541.115 mo
(-2)
[-6.66046 0 ]ysh
320.281 541.115 mo
(-1)
[-6.66046 0 ]ysh
254.462 534.454 mo
(0)sh
188.702 534.454 mo
(1)sh
122.883 534.454 mo
(2)sh
1.504 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
435.06 515.495 mo
427.74 515.495 li
@
435.06 453.575 mo
427.74 453.575 li
@
435.06 391.655 mo
427.74 391.655 li
@
435.06 329.975 mo
427.74 329.975 li
@
435.06 268.055 mo
427.74 268.055 li
@
435.06 206.135 mo
427.74 206.135 li
@
435.06 144.215 mo
427.74 144.215 li
@
435.06 82.475 mo
427.74 82.475 li
@
435.06 20.5551 mo
427.74 20.5551 li
@
435.06 515.495 mo
435.06 20.5551 li
@
249.06 515.495 mo
249.06 20.5551 li
@
380.7 515.495 mo
380.7 508.175 li
@
314.88 515.495 mo
314.88 508.175 li
@
249.06 515.495 mo
249.06 508.175 li
@
183.3 515.495 mo
183.3 508.175 li
@
117.48 515.495 mo
117.48 508.175 li
@
435.06 515.495 mo
63.12 515.495 li
@
63.12 453.575 mo
63.12 453.575 li
@
63.12 391.655 mo
63.12 391.655 li
@
63.12 329.975 mo
63.12 329.975 li
@
63.12 268.055 mo
63.12 268.055 li
@
63.12 206.135 mo
63.12 206.135 li
@
63.12 144.215 mo
63.12 144.215 li
@
63.12 82.4751 mo
63.12 82.4751 li
@
63.12 20.5551 mo
63.12 20.5551 li
@
63.12 515.495 mo
63.12 20.5551 li
@
249.06 515.495 mo
249.06 20.5551 li
@
380.7 20.5551 mo
380.7 20.5551 li
@
314.88 20.5551 mo
314.88 20.5551 li
@
249.06 20.5551 mo
249.06 20.5551 li
@
183.3 20.5551 mo
183.3 20.5551 li
@
117.48 20.5551 mo
117.48 20.5551 li
@
435.06 20.5551 mo
63.1199 20.5551 li
@
.289281 1 1 .383062 cmyk
OIDHLO+ArialMT*1 [0 -15.7814 -15.7814 0 0 0 ]msf
408.6 153.635 mo
(10)
[-8.81708 0 ]ysh
OIDHLO+ArialMT*1 [0 -9.4303 -9.4303 0 0 0 ]msf
400.02 135.995 mo
(5)sh
OIDHLO+ArialMT*1 [0 -15.7814 -15.7814 0 0 0 ]msf
408.6 71.0755 mo
(10)
[-8.81708 0 ]ysh
OIDHLO+ArialMT*1 [0 -9.4303 -9.4303 0 0 0 ]msf
400.02 53.4355 mo
(6)sh
OIDHLO+ArialMT*1 [0 -15.7814 -15.7814 0 0 0 ]msf
393.36 202.235 mo
(1)sh
343.5 202.235 mo
(2)sh
314.461 202.235 mo
(3)sh
293.82 202.235 mo
(4)sh
277.681 202.235 mo
(5)sh
264.601 202.235 mo
(6)sh
1.29 lw
389.04 185.495 mo
385.38 185.495 li
@
389.04 175.175 mo
385.38 175.175 li
@
389.04 167.195 mo
385.38 167.195 li
@
389.04 160.535 mo
385.38 160.535 li
@
389.04 155.135 mo
385.38 155.135 li
@
389.04 150.215 mo
385.38 150.215 li
@
389.04 146.135 mo
385.38 146.135 li
@
389.04 142.235 mo
381.78 142.235 li
@
389.04 117.515 mo
385.38 117.515 li
@
389.04 102.875 mo
385.38 102.875 li
@
389.04 92.5549 mo
385.38 92.5549 li
@
389.04 84.6349 mo
385.38 84.6349 li
@
389.04 77.975 mo
385.38 77.975 li
@
389.04 72.575 mo
385.38 72.575 li
@
389.04 67.655 mo
385.38 67.655 li
@
389.04 63.575 mo
385.38 63.575 li
@
389.04 59.6749 mo
381.78 59.6749 li
@
389.04 34.955 mo
385.38 34.955 li
@
389.04 20.3149 mo
385.38 20.3149 li
@
389.04 185.495 mo
389.04 20.3149 li
@
389.04 185.495 mo
389.04 178.175 li
@
381.54 185.495 mo
381.54 181.835 li
@
374.64 185.495 mo
374.64 181.835 li
@
368.4 185.495 mo
368.4 181.835 li
@
362.64 185.495 mo
362.64 181.835 li
@
357.24 185.495 mo
357.24 181.835 li
@
352.32 185.495 mo
352.32 181.835 li
@
347.76 185.495 mo
347.76 181.835 li
@
343.5 185.495 mo
343.5 181.835 li
@
339.18 185.495 mo
339.18 178.175 li
@
335.28 185.495 mo
335.28 181.835 li
@
331.68 185.495 mo
331.68 181.835 li
@
328.2 185.495 mo
328.2 181.835 li
@
324.78 185.495 mo
324.78 181.835 li
@
321.78 185.495 mo
321.78 181.835 li
@
318.54 185.495 mo
318.54 181.835 li
@
315.72 185.495 mo
315.72 181.835 li
@
312.96 185.495 mo
312.96 181.835 li
@
310.14 185.495 mo
310.14 178.175 li
@
307.56 185.495 mo
307.56 181.835 li
@
304.98 185.495 mo
304.98 181.835 li
@
302.64 185.495 mo
302.64 181.835 li
@
300.24 185.495 mo
300.24 181.835 li
@
297.9 185.495 mo
297.9 181.835 li
@
295.74 185.495 mo
295.74 181.835 li
@
293.58 185.495 mo
293.58 181.835 li
@
291.42 185.495 mo
291.42 181.835 li
@
289.5 185.495 mo
289.5 178.175 li
@
287.58 185.495 mo
287.58 181.835 li
@
285.66 185.495 mo
285.66 181.835 li
@
283.68 185.495 mo
283.68 181.835 li
@
282 185.495 mo
282 181.835 li
@
280.08 185.495 mo
280.08 181.835 li
@
278.34 185.495 mo
278.34 181.835 li
@
276.84 185.495 mo
276.84 181.835 li
@
275.1 185.495 mo
275.1 181.835 li
@
273.36 185.495 mo
273.36 178.175 li
@
271.86 185.495 mo
271.86 181.835 li
@
270.36 185.495 mo
270.36 181.835 li
@
268.86 185.495 mo
268.86 181.835 li
@
267.36 185.495 mo
267.36 181.835 li
@
265.86 185.495 mo
265.86 181.835 li
@
264.6 185.495 mo
264.6 181.835 li
@
263.04 185.495 mo
263.04 181.835 li
@
261.78 185.495 mo
261.78 181.835 li
@
260.28 185.495 mo
260.28 178.175 li
@
258.96 185.495 mo
258.96 181.835 li
@
257.7 185.495 mo
257.7 181.835 li
@
256.38 185.495 mo
256.38 181.835 li
@
255.3 185.495 mo
255.3 181.835 li
@
254.04 185.495 mo
254.04 181.835 li
@
252.72 185.495 mo
252.72 181.835 li
@
251.64 185.495 mo
251.64 181.835 li
@
250.38 185.495 mo
250.38 181.835 li
@
389.04 185.495 mo
249.3 185.495 li
@
249.3 185.495 mo
249.3 185.495 li
1 /0 /CSD get_res sepcs
1 sep
@
249.3 175.175 mo
249.3 175.175 li
@
249.3 167.195 mo
249.3 167.195 li
@
249.3 160.535 mo
249.3 160.535 li
@
249.3 155.135 mo
249.3 155.135 li
@
249.3 150.215 mo
249.3 150.215 li
@
249.3 146.135 mo
249.3 146.135 li
@
249.3 142.235 mo
249.3 142.235 li
@
249.3 117.515 mo
249.3 117.515 li
@
249.3 102.875 mo
249.3 102.875 li
@
249.3 92.5549 mo
249.3 92.5549 li
@
249.3 84.6349 mo
249.3 84.6349 li
@
249.3 77.975 mo
249.3 77.975 li
@
249.3 72.575 mo
249.3 72.575 li
@
249.3 67.655 mo
249.3 67.655 li
@
249.3 63.575 mo
249.3 63.575 li
@
249.3 59.6749 mo
249.3 59.6749 li
@
249.3 34.955 mo
249.3 34.955 li
@
249.3 20.3149 mo
249.3 20.3149 li
@
249.3 185.495 mo
249.3 20.3149 li
@
389.04 20.3149 mo
389.04 20.3149 li
@
381.54 20.3149 mo
381.54 20.3149 li
@
374.64 20.3149 mo
374.64 20.3149 li
@
368.4 20.3149 mo
368.4 20.3149 li
@
362.64 20.3149 mo
362.64 20.3149 li
@
357.24 20.3149 mo
357.24 20.3149 li
@
352.32 20.3149 mo
352.32 20.3149 li
@
347.76 20.3149 mo
347.76 20.3149 li
@
343.5 20.3149 mo
343.5 20.3149 li
@
339.18 20.3149 mo
339.18 20.3149 li
@
335.28 20.3149 mo
335.28 20.3149 li
@
331.68 20.3149 mo
331.68 20.3149 li
@
328.2 20.3149 mo
328.2 20.3149 li
@
324.78 20.3149 mo
324.78 20.3149 li
@
321.78 20.3149 mo
321.78 20.3149 li
@
318.54 20.3149 mo
318.54 20.3149 li
@
315.72 20.3149 mo
315.72 20.3149 li
@
312.96 20.3149 mo
312.96 20.3149 li
@
310.14 20.3149 mo
310.14 20.3149 li
@
307.56 20.3149 mo
307.56 20.3149 li
@
304.98 20.3149 mo
304.98 20.3149 li
@
302.64 20.3149 mo
302.64 20.3149 li
@
300.24 20.3149 mo
300.24 20.3149 li
@
297.9 20.3149 mo
297.9 20.3149 li
@
295.74 20.3149 mo
295.74 20.3149 li
@
293.58 20.3149 mo
293.58 20.3149 li
@
291.42 20.3149 mo
291.42 20.3149 li
@
289.5 20.3149 mo
289.5 20.3149 li
@
287.58 20.3149 mo
287.58 20.3149 li
@
285.66 20.3149 mo
285.66 20.3149 li
@
283.68 20.3149 mo
283.68 20.3149 li
@
282 20.3149 mo
282 20.3149 li
@
280.08 20.3149 mo
280.08 20.3149 li
@
278.34 20.3149 mo
278.34 20.3149 li
@
276.84 20.3149 mo
276.84 20.3149 li
@
275.1 20.3149 mo
275.1 20.3149 li
@
273.36 20.3149 mo
273.36 20.3149 li
@
271.86 20.3149 mo
271.86 20.3149 li
@
270.36 20.3149 mo
270.36 20.3149 li
@
268.86 20.3149 mo
268.86 20.3149 li
@
267.36 20.3149 mo
267.36 20.3149 li
@
265.86 20.3149 mo
265.86 20.3149 li
@
264.6 20.3149 mo
264.6 20.3149 li
@
263.04 20.3149 mo
263.04 20.3149 li
@
261.78 20.3149 mo
261.78 20.3149 li
@
260.28 20.3149 mo
260.28 20.3149 li
@
258.96 20.3149 mo
258.96 20.3149 li
@
257.7 20.3149 mo
257.7 20.3149 li
@
256.38 20.3149 mo
256.38 20.3149 li
@
255.3 20.3149 mo
255.3 20.3149 li
@
254.04 20.3149 mo
254.04 20.3149 li
@
252.72 20.3149 mo
252.72 20.3149 li
@
251.64 20.3149 mo
251.64 20.3149 li
@
250.38 20.3149 mo
250.38 20.3149 li
@
249.3 20.3149 mo
249.3 20.3149 li
@
389.04 20.3149 mo
249.3 20.3149 li
@
gsave
116.88 515.495 mo
118.14 515.495 li
118.14 510.515 li
116.88 510.515 li
cp
clp
1.075 lw
117.48 515.495 mo
117.48 511.175 li
.878538 .2439 1 .131716 cmyk
@
grestore
1.075 lw
117.48 506.255 mo
117.48 505.595 li
117.48 501.935 li
.878538 .2439 1 .131716 cmyk
@
117.48 497.015 mo
117.48 495.695 li
117.48 492.695 li
@
117.48 487.775 mo
117.48 485.615 li
117.48 483.455 li
@
117.48 478.535 mo
117.48 475.715 li
117.48 474.215 li
@
117.48 469.295 mo
117.48 465.635 li
117.48 464.975 li
@
117.48 460.055 mo
117.48 455.735 li
@
117.48 450.815 mo
117.48 450.815 li
117.48 446.495 li
@
117.48 441.515 mo
117.48 440.675 li
117.48 437.255 li
@
117.48 432.275 mo
117.48 430.775 li
117.48 428.015 li
@
117.48 423.035 mo
117.48 420.695 li
117.48 418.775 li
@
117.48 413.795 mo
117.48 410.795 li
117.48 409.535 li
@
117.48 404.555 mo
117.48 400.715 li
117.48 400.235 li
@
117.48 395.315 mo
117.48 390.995 li
@
117.48 386.075 mo
117.48 385.655 li
117.48 381.755 li
@
117.48 376.835 mo
117.48 375.755 li
117.48 372.515 li
@
117.48 367.595 mo
117.48 365.615 li
117.48 363.275 li
@
117.48 358.355 mo
117.48 355.775 li
117.48 354.035 li
@
117.48 349.115 mo
117.48 345.635 li
117.48 344.795 li
@
117.48 339.815 mo
117.48 335.735 li
117.48 335.555 li
@
117.48 330.575 mo
117.48 326.315 li
@
117.48 321.335 mo
117.48 320.735 li
117.48 317.075 li
@
117.48 312.095 mo
117.48 310.835 li
117.48 307.835 li
@
117.48 302.855 mo
117.48 300.695 li
117.48 298.535 li
@
117.48 293.615 mo
117.48 290.795 li
117.48 289.295 li
@
117.48 284.375 mo
117.48 280.715 li
117.48 280.055 li
@
117.48 275.135 mo
117.48 270.815 li
@
117.48 265.895 mo
117.48 265.655 li
117.48 261.575 li
@
117.48 256.655 mo
117.48 255.755 li
117.48 252.335 li
@
117.48 247.415 mo
117.48 245.675 li
117.48 243.095 li
@
117.48 238.115 mo
117.48 235.775 li
117.48 233.855 li
@
117.48 228.875 mo
117.48 225.695 li
117.48 224.615 li
@
117.48 219.635 mo
117.48 215.795 li
117.48 215.375 li
@
117.48 210.395 mo
117.48 206.135 li
@
117.48 201.155 mo
117.48 200.735 li
117.48 196.835 li
@
117.48 191.915 mo
117.48 190.835 li
117.48 187.595 li
@
117.48 182.675 mo
117.48 180.755 li
117.48 178.355 li
@
117.48 173.435 mo
117.48 170.855 li
117.48 169.115 li
@
117.48 164.195 mo
117.48 160.715 li
117.48 159.875 li
@
117.48 154.955 mo
117.48 150.875 li
117.48 150.635 li
@
117.48 145.715 mo
117.48 145.715 li
117.48 141.395 li
@
117.48 136.415 mo
117.48 135.815 li
117.48 132.155 li
@
117.48 127.175 mo
117.48 125.675 li
117.48 122.915 li
@
117.48 117.935 mo
117.48 115.775 li
117.48 113.675 li
@
117.48 108.695 mo
117.48 105.695 li
117.48 104.435 li
@
117.48 99.4553 mo
117.48 95.7953 li
117.48 95.1353 li
@
117.48 90.2153 mo
117.48 85.8953 li
@
117.48 80.9753 mo
117.48 80.7353 li
117.48 76.6553 li
@
117.48 71.7353 mo
117.48 70.8953 li
117.48 67.4153 li
@
117.48 62.4953 mo
117.48 60.7553 li
117.48 58.1754 li
@
117.48 53.2553 mo
117.48 50.8553 li
117.48 48.9354 li
@
117.48 44.0153 mo
117.48 40.7753 li
117.48 39.6954 li
@
117.48 34.7753 mo
117.48 30.8754 li
117.48 30.4554 li
@
117.48 25.4753 mo
117.48 21.2154 li
@
gsave
380.1 515.495 mo
381.36 515.495 li
381.36 512.495 li
380.1 512.495 li
cp
clp
380.7 515.495 mo
380.7 513.155 li
@
grestore
380.7 513.155 mo
380.7 511.175 li
@
380.7 506.255 mo
380.7 505.595 li
380.7 503.255 li
380.7 501.935 li
@
380.7 497.015 mo
380.7 495.695 li
380.7 493.115 li
380.7 492.695 li
@
380.7 487.775 mo
380.7 485.615 li
380.7 483.455 li
@
380.7 478.535 mo
380.7 478.295 li
380.7 475.715 li
380.7 474.215 li
@
380.7 469.295 mo
380.7 468.215 li
380.7 465.635 li
380.7 464.975 li
@
380.7 460.055 mo
380.7 458.315 li
380.7 455.735 li
@
380.7 450.815 mo
380.7 450.815 li
380.7 448.235 li
380.7 446.495 li
@
380.7 441.515 mo
380.7 440.675 li
380.7 438.335 li
380.7 437.255 li
@
380.7 432.275 mo
380.7 430.775 li
380.7 428.195 li
380.7 428.015 li
@
380.7 423.035 mo
380.7 420.695 li
380.7 418.775 li
@
380.7 413.795 mo
380.7 413.135 li
380.7 410.795 li
380.7 409.535 li
@
380.7 404.555 mo
380.7 403.295 li
380.7 400.715 li
380.7 400.235 li
@
380.7 395.315 mo
380.7 393.155 li
380.7 390.995 li
@
380.7 386.075 mo
380.7 385.655 li
380.7 383.255 li
380.7 381.755 li
@
380.7 376.835 mo
380.7 375.755 li
380.7 373.175 li
380.7 372.515 li
@
380.7 367.595 mo
380.7 365.615 li
380.7 363.275 li
@
380.7 358.355 mo
380.7 358.355 li
380.7 355.775 li
380.7 354.035 li
@
380.7 349.115 mo
380.7 348.215 li
380.7 345.635 li
380.7 344.795 li
@
380.7 339.815 mo
380.7 338.315 li
380.7 335.735 li
380.7 335.555 li
@
380.7 330.575 mo
380.7 328.235 li
380.7 326.315 li
@
380.7 321.335 mo
380.7 320.735 li
380.7 318.335 li
380.7 317.075 li
@
380.7 312.095 mo
380.7 310.835 li
380.7 308.255 li
380.7 307.835 li
@
380.7 302.855 mo
380.7 300.695 li
380.7 298.535 li
@
380.7 293.615 mo
380.7 293.195 li
380.7 290.795 li
380.7 289.295 li
@
380.7 284.375 mo
380.7 283.295 li
380.7 280.715 li
380.7 280.055 li
@
380.7 275.135 mo
380.7 273.215 li
380.7 270.815 li
@
gsave
181.38 515.495 mo
181.44 515.495 li
181.44 515.255 li
181.38 515.255 li
cp
clp
.06 lw
181.38 515.735 mo
181.38 515.315 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
.06 lw
234.9 488.195 mo
234.9 487.775 li
1 /0 /CSD get_res sepcs
1 sep
@
302.64 460.655 mo
302.64 460.235 li
@
344.58 433.175 mo
344.58 432.755 li
@
384.78 405.635 mo
384.78 405.215 li
@
410.76 378.335 mo
410.76 377.915 li
@
414.66 350.795 mo
414.66 350.375 li
@
398.52 323.315 mo
398.52 322.835 li
@
362.4 295.775 mo
362.4 295.355 li
@
315.96 268.235 mo
315.96 267.815 li
@
257.46 240.695 mo
257.46 240.275 li
@
197.94 213.215 mo
197.94 212.795 li
@
142.02 185.675 mo
142.02 185.255 li
@
104.58 158.135 mo
104.58 157.715 li
@
86.34 130.835 mo
86.34 130.415 li
@
82.86 103.355 mo
82.86 102.875 li
@
101.82 75.815 mo
101.82 75.395 li
@
138.78 48.275 mo
138.78 47.855 li
@
gsave
181.38 20.795 mo
181.44 20.795 li
181.44 20.315 li
181.38 20.315 li
cp
clp
181.38 20.795 mo
181.38 20.315 li
@
grestore
gsave
208.92 515.495 mo
211.92 515.495 li
211.92 514.595 li
208.92 514.595 li
cp
clp
1.504 lw
209.76 515.495 mo
211.02 515.495 li
.895628 .7673 3.0518e-5 3.0518e-5 cmyk
@
grestore
gsave
208.92 515.495 mo
210.66 515.495 li
210.66 510.935 li
208.92 510.935 li
cp
clp
1.504 lw
209.76 519.155 mo
209.76 511.835 li
.895628 .7673 3.0518e-5 3.0518e-5 cmyk
@
grestore
gsave
210.18 515.495 mo
213.42 515.495 li
213.42 514.595 li
210.18 514.595 li
cp
clp
1.504 lw
212.52 515.495 mo
211.02 515.495 li
.895628 .7673 3.0518e-5 3.0518e-5 cmyk
@
grestore
gsave
211.68 515.495 mo
213.42 515.495 li
213.42 510.935 li
211.68 510.935 li
cp
clp
1.504 lw
212.52 519.155 mo
212.52 511.835 li
.895628 .7673 3.0518e-5 3.0518e-5 cmyk
@
grestore
1.504 lw
240.3 487.955 mo
241.56 487.955 li
.895628 .7673 3.0518e-5 3.0518e-5 cmyk
@
240.3 491.615 mo
240.3 484.355 li
@
242.88 487.955 mo
241.56 487.955 li
@
242.88 491.615 mo
242.88 484.355 li
@
278.76 460.475 mo
280.08 460.475 li
@
278.76 464.135 mo
278.76 456.815 li
@
281.58 460.475 mo
280.08 460.475 li
@
281.58 464.135 mo
281.58 456.815 li
@
302.4 432.935 mo
303.72 432.935 li
@
302.4 436.595 mo
302.4 429.275 li
@
304.98 432.935 mo
303.72 432.935 li
@
304.98 436.595 mo
304.98 429.275 li
@
325.2 405.395 mo
326.52 405.395 li
@
325.2 409.055 mo
325.2 401.795 li
@
328.02 405.395 mo
326.52 405.395 li
@
328.02 409.055 mo
328.02 401.795 li
@
339.84 378.095 mo
341.1 378.095 li
@
339.84 381.755 mo
339.84 374.435 li
@
342.6 378.095 mo
341.1 378.095 li
@
342.6 381.755 mo
342.6 374.435 li
@
342 350.615 mo
343.5 350.615 li
@
342 354.275 mo
342 346.955 li
@
344.76 350.615 mo
343.5 350.615 li
@
344.76 354.275 mo
344.76 346.955 li
@
332.7 323.075 mo
334.02 323.075 li
@
332.7 326.735 mo
332.7 319.415 li
@
335.52 323.075 mo
334.02 323.075 li
@
335.52 326.735 mo
335.52 319.415 li
@
312.3 295.535 mo
313.62 295.535 li
@
312.3 299.195 mo
312.3 291.875 li
@
315.12 295.535 mo
313.62 295.535 li
@
315.12 299.195 mo
315.12 291.875 li
@
285.84 268.055 mo
287.34 268.055 li
@
285.84 271.715 mo
285.84 264.395 li
@
288.66 268.055 mo
287.34 268.055 li
@
288.66 271.715 mo
288.66 264.395 li
@
252.54 240.515 mo
253.8 240.515 li
@
252.54 244.175 mo
252.54 236.855 li
@
255.3 240.515 mo
253.8 240.515 li
@
255.3 244.175 mo
255.3 236.855 li
@
218.58 212.975 mo
220.08 212.975 li
@
218.58 216.635 mo
218.58 209.315 li
@
221.34 212.975 mo
220.08 212.975 li
@
221.34 216.635 mo
221.34 209.315 li
@
186.96 185.495 mo
188.22 185.495 li
@
186.96 189.095 mo
186.96 181.835 li
@
189.72 185.495 mo
188.22 185.495 li
@
189.72 189.095 mo
189.72 181.835 li
@
165.66 157.955 mo
166.98 157.955 li
@
165.66 161.615 mo
165.66 154.295 li
@
168.48 157.955 mo
166.98 157.955 li
@
168.48 161.615 mo
168.48 154.295 li
@
155.34 130.655 mo
156.84 130.655 li
@
155.34 134.315 mo
155.34 126.995 li
@
158.16 130.655 mo
156.84 130.655 li
@
158.16 134.315 mo
158.16 126.995 li
@
153.42 103.115 mo
154.92 103.115 li
@
153.42 106.775 mo
153.42 99.455 li
@
156.18 103.115 mo
154.92 103.115 li
@
156.18 106.775 mo
156.18 99.455 li
@
164.16 75.575 mo
165.66 75.575 li
@
164.16 79.2349 mo
164.16 71.915 li
@
166.98 75.575 mo
165.66 75.575 li
@
166.98 79.2349 mo
166.98 71.915 li
@
185.22 48.0949 mo
186.54 48.0949 li
@
185.22 51.7549 mo
185.22 44.4349 li
@
188.04 48.0949 mo
186.54 48.0949 li
@
188.04 51.7549 mo
188.04 44.4349 li
@
126.72 114.275 mo
131.46 114.275 li
.610498 1 .138643 .0341802 cmyk
@
126.72 117.935 mo
126.72 110.615 li
@
136.02 114.275 mo
131.46 114.275 li
@
136.02 117.935 mo
136.02 110.615 li
@
gsave
182.88 515.495 mo
187.02 515.495 li
187.02 514.595 li
182.88 514.595 li
cp
clp
183.72 515.495 mo
186.12 515.495 li
3.0518e-5 .990631 1 .000396735 cmyk
@
grestore
gsave
182.88 515.495 mo
184.62 515.495 li
184.62 510.935 li
182.88 510.935 li
cp
clp
183.72 519.155 mo
183.72 511.835 li
3.0518e-5 .990631 1 .000396735 cmyk
@
grestore
gsave
185.28 515.495 mo
189.36 515.495 li
189.36 514.595 li
185.28 514.595 li
cp
clp
188.46 515.495 mo
186.12 515.495 li
3.0518e-5 .990631 1 .000396735 cmyk
@
grestore
gsave
187.62 515.495 mo
189.36 515.495 li
189.36 510.935 li
187.62 510.935 li
cp
clp
188.46 519.155 mo
188.46 511.835 li
3.0518e-5 .990631 1 .000396735 cmyk
@
grestore
235.98 487.955 mo
238.14 487.955 li
3.0518e-5 .990631 1 .000396735 cmyk
@
235.98 491.615 mo
235.98 484.355 li
@
240.48 487.955 mo
238.14 487.955 li
@
240.48 491.615 mo
240.48 484.355 li
@
301.56 460.475 mo
303.9 460.475 li
@
301.56 464.135 mo
301.56 456.815 li
@
306.3 460.475 mo
303.9 460.475 li
@
306.3 464.135 mo
306.3 456.815 li
@
342.18 432.935 mo
344.58 432.935 li
@
342.18 436.595 mo
342.18 429.275 li
@
346.92 432.935 mo
344.58 432.935 li
@
346.92 436.595 mo
346.92 429.275 li
@
381.12 405.395 mo
383.46 405.395 li
@
381.12 409.055 mo
381.12 401.795 li
@
385.86 405.395 mo
383.46 405.395 li
@
385.86 409.055 mo
385.86 401.795 li
@
405.84 378.095 mo
408 378.095 li
@
405.84 381.755 mo
405.84 374.435 li
@
410.34 378.095 mo
408 378.095 li
@
410.34 381.755 mo
410.34 374.435 li
@
410.16 350.615 mo
412.26 350.615 li
@
410.16 354.275 mo
410.16 346.955 li
@
414.66 350.615 mo
412.26 350.615 li
@
414.66 354.275 mo
414.66 346.955 li
@
393.78 323.075 mo
396.18 323.075 li
@
393.78 326.735 mo
393.78 319.415 li
@
398.52 323.075 mo
396.18 323.075 li
@
398.52 326.735 mo
398.52 319.415 li
@
358.98 295.535 mo
361.32 295.535 li
@
358.98 299.195 mo
358.98 291.875 li
@
363.72 295.535 mo
361.32 295.535 li
@
363.72 299.195 mo
363.72 291.875 li
@
314.04 268.055 mo
316.38 268.055 li
@
314.04 271.715 mo
314.04 264.395 li
@
318.78 268.055 mo
316.38 268.055 li
@
318.78 271.715 mo
318.78 264.395 li
@
257.04 240.515 mo
259.44 240.515 li
@
257.04 244.175 mo
257.04 236.855 li
@
261.54 240.515 mo
259.44 240.515 li
@
261.54 244.175 mo
261.54 236.855 li
@
199.2 212.975 mo
201.6 212.975 li
@
199.2 216.635 mo
199.2 209.315 li
@
203.94 212.975 mo
201.6 212.975 li
@
203.94 216.635 mo
203.94 209.315 li
@
145.02 185.495 mo
147.36 185.495 li
@
145.02 189.095 mo
145.02 181.835 li
@
149.76 185.495 mo
147.36 185.495 li
@
149.76 189.095 mo
149.76 181.835 li
@
108.9 157.955 mo
111.24 157.955 li
@
108.9 161.615 mo
108.9 154.295 li
@
113.64 157.955 mo
111.24 157.955 li
@
113.64 161.615 mo
113.64 154.295 li
@
91.5 130.655 mo
93.66 130.655 li
@
91.5 134.315 mo
91.5 126.995 li
@
96 130.655 mo
93.66 130.655 li
@
96 134.315 mo
96 126.995 li
@
88.02 103.115 mo
90.42 103.115 li
@
88.02 106.775 mo
88.02 99.455 li
@
92.58 103.115 mo
90.42 103.115 li
@
92.58 106.775 mo
92.58 99.455 li
@
106.56 75.575 mo
108.9 75.575 li
@
106.56 79.2349 mo
106.56 71.915 li
@
111.06 75.575 mo
108.9 75.575 li
@
111.06 79.2349 mo
111.06 71.915 li
@
142.44 48.0949 mo
144.78 48.0949 li
@
142.44 51.7549 mo
142.44 44.4349 li
@
146.94 48.0949 mo
144.78 48.0949 li
@
146.94 51.7549 mo
146.94 44.4349 li
@
gsave
125.28 515.495 mo
411.66 515.495 li
411.66 168.635 li
125.28 168.635 li
cp
clp
.645 lw
184.8 515.495 mo
185.64 515.075 li
186.54 514.415 li
187.62 513.995 li
188.46 513.575 li
189.54 512.915 li
190.38 512.495 li
191.28 512.075 li
193.213 511.115 195.129 510.122 197.04 509.075 cv
198.12 508.595 li
199.02 507.995 li
200.04 507.575 li
200.94 507.095 li
202.02 506.675 li
203.1 506.015 li
203.94 505.595 li
205.02 505.175 li
205.86 504.515 li
208.02 503.675 li
208.86 503.015 li
209.94 502.595 li
212.527 501.114 214.312 500.656 216.84 499.175 cv
217.92 498.755 li
219 498.095 li
221.362 496.957 223.708 495.796 226.08 494.675 cv
226.92 494.195 li
228 493.775 li
229.08 493.115 li
229.98 492.695 li
231 492.275 li
237.144 489.165 243.364 486.324 249.54 483.275 cv
250.38 482.795 li
251.46 482.375 li
252.54 481.775 li
253.62 481.295 li
254.7 480.875 li
255.54 480.215 li
257.7 479.375 li
258.78 478.715 li
259.62 478.295 li
261.78 477.455 li
263.803 476.121 266.837 475.129 268.86 473.795 cv
269.94 473.375 li
270.78 472.955 li
271.86 472.475 li
272.94 471.875 li
274.02 471.455 li
274.92 470.975 li
275.94 470.375 li
277.02 469.895 li
279.351 468.804 281.572 467.517 283.92 466.475 cv
285 466.055 li
286.08 465.395 li
288.45 464.375 290.654 463.033 292.98 461.975 cv
294 461.555 li
294.9 461.135 li
295.98 460.475 li
296.82 460.055 li
299.149 458.976 301.326 457.545 303.72 456.575 cv
304.56 455.975 li
305.64 455.495 li
307.95 454.507 310.044 453.132 312.3 452.075 cv
313.14 451.655 li
314.22 450.995 li
315.12 450.575 li
315.96 450.155 li
317.04 449.735 li
317.88 449.075 li
320.171 448.186 322.091 446.618 324.36 445.655 cv
325.2 445.175 li
326.04 444.575 li
328.215 443.579 330.325 442.465 332.28 441.095 cv
333.18 440.675 li
334.02 440.255 li
334.86 439.595 li
335.94 439.175 li
337.812 438.448 339.853 436.656 341.76 435.755 cv
342.6 435.335 li
343.5 434.675 li
345.124 433.807 347.747 432.226 349.26 431.195 cv
349.92 430.775 li
350.82 430.355 li
351.66 429.695 li
352.5 429.275 li
353.16 428.855 li
354 428.195 li
354.9 427.775 li
355.5 427.355 li
356.4 426.935 li
357 426.275 li
357.9 425.855 li
358.56 425.435 li
359.4 424.775 li
360.06 424.355 li
360.9 423.935 li
361.56 423.275 li
362.4 422.855 li
363.06 422.435 li
364.562 421.142 366.386 420.177 367.98 418.955 cv
368.64 418.295 li
369.48 417.875 li
370.14 417.455 li
370.8 416.795 li
371.46 416.375 li
372.06 415.955 li
372.72 415.535 li
373.38 414.875 li
374.22 414.455 li
374.88 414.035 li
375.54 413.375 li
376.14 412.955 li
376.62 412.535 li
377.315 411.642 380.099 409.975 380.88 409.055 cv
381.54 408.455 li
382.2 407.975 li
382.8 407.555 li
383.28 406.955 li
383.88 406.475 li
384.54 406.055 li
384.96 405.395 li
385.62 404.975 li
386.04 404.555 li
386.7 404.135 li
387.12 403.475 li
387.78 403.055 li
389.28 401.555 li
389.94 401.135 li
390.36 400.475 li
390.78 400.055 li
391.44 399.635 li
391.86 398.975 li
392.7 398.135 li
393.36 397.655 li
393.78 397.055 li
394.2 396.575 li
394.68 396.155 li
395.617 394.952 396.517 393.736 397.68 392.735 cv
398.1 392.075 li
398.52 391.655 li
399.352 390.528 400.177 389.338 401.1 388.235 cv
401.52 387.575 li
401.76 387.155 li
402.18 386.735 li
402.6 386.255 li
402.84 385.655 li
403.26 385.235 li
403.44 384.755 li
403.68 384.155 li
404.29 383.508 405.449 381.495 405.84 380.675 cv
406.02 380.255 li
406.26 379.835 li
406.684 378.53 407.66 377.547 408 376.175 cv
408.18 375.755 li
408.42 375.335 li
408.42 374.915 li
409.459 372.246 410.638 368.689 410.76 365.855 cv
411 365.435 li
411 364.355 li
411.18 363.935 li
411.142 360.826 411.303 357.936 411 354.875 cv
410.76 354.455 li
410.76 353.375 li
410.321 352.301 410.322 350.975 409.92 349.955 cv
409.68 349.535 li
409.68 349.115 li
409.287 347.932 409.043 346.761 408.42 345.635 cv
408.18 344.975 li
408 344.555 li
407.76 344.135 li
407.58 343.475 li
407.1 342.635 li
406.92 341.975 li
406.68 341.555 li
406.5 341.135 li
406.26 340.715 li
406.02 340.055 li
405.6 339.635 li
405.42 339.215 li
405.18 338.555 li
405 338.135 li
404.52 337.715 li
404.34 337.055 li
403.92 336.635 li
403.68 336.215 li
403.44 335.735 li
402.768 334.427 401.73 333.377 401.1 332.075 cv
400.26 331.235 li
399.84 330.575 li
399.6 330.155 li
398.76 329.315 li
398.28 328.655 li
397.44 327.815 li
397.26 327.155 li
396.78 326.735 li
396.36 326.315 li
395.94 325.655 li
394.526 324.58 393.853 323.625 392.7 322.235 cv
392.1 321.755 li
391.62 321.335 li
391.2 320.735 li
390.78 320.255 li
390.12 319.835 li
389.7 319.175 li
389.28 318.755 li
388.62 318.335 li
387.12 316.835 li
386.46 316.415 li
386.04 315.755 li
385.38 315.335 li
384.96 314.915 li
384.071 313.859 381.829 312.52 380.88 311.435 cv
380.22 310.835 li
379.62 310.415 li
378.96 309.935 li
378.3 309.335 li
376.845 307.929 375.31 307.092 374.04 305.855 cv
372.72 305.015 li
370.93 303.88 369.551 302.343 367.8 301.595 cv
367.14 300.935 li
365.82 300.095 li
364.98 299.435 li
364.32 299.015 li
363.48 298.535 li
362.82 297.935 li
362.16 297.515 li
360.394 296.326 358.597 295.169 356.82 294.035 cv
356.16 293.615 li
355.32 292.955 li
354.42 292.535 li
353.82 292.115 li
352.92 291.455 li
352.32 291.035 li
351.42 290.615 li
350.58 290.195 li
349.74 289.535 li
349.08 289.115 li
348.24 288.695 li
347.34 288.035 li
342.338 285.054 337.188 282.054 332.1 279.215 cv
331.2 278.795 li
330.36 278.135 li
329.52 277.715 li
317.035 270.839 304.488 264.21 291.66 257.915 cv
290.82 257.255 li
288.66 256.415 li
287.82 255.995 li
286.74 255.335 li
285.66 254.915 li
284.76 254.495 li
278.724 251.417 272.593 248.442 266.52 245.435 cv
265.44 245.015 li
264.6 244.595 li
263.52 243.935 li
261.36 243.095 li
260.46 242.435 li
259.44 242.015 li
258.36 241.595 li
257.28 240.935 li
256.38 240.515 li
254.22 239.675 li
252.174 238.293 249.288 237.371 247.14 236.015 cv
246.06 235.535 li
244.98 235.115 li
244.14 234.515 li
243.06 234.035 li
240.9 233.195 li
240.06 232.535 li
237.9 231.695 li
236.82 231.035 li
235.98 230.615 li
234.9 230.195 li
233.82 229.535 li
232.74 229.115 li
231.9 228.695 li
229.467 227.71 227.03 226.166 224.58 225.215 cv
223.74 224.615 li
222.66 224.195 li
221.58 223.715 li
220.68 223.115 li
218.452 222.137 215.672 220.87 213.6 219.635 cv
212.52 219.215 li
211.68 218.795 li
210.6 218.135 li
209.52 217.715 li
208.68 217.295 li
207.6 216.875 li
206.76 216.215 li
204.6 215.375 li
203.7 214.715 li
202.62 214.295 li
201.78 213.875 li
200.7 213.215 li
199.86 212.795 li
198.78 212.315 li
197.94 211.715 li
196.86 211.295 li
194.61 210.172 192.426 209.022 190.2 207.815 cv
189.12 207.395 li
188.22 206.735 li
186.1 205.957 183.626 204.413 181.56 203.315 cv
179.88 202.475 li
178.8 201.815 li
177.9 201.395 li
175.824 200.318 173.538 198.954 171.48 197.915 cv
170.58 197.495 li
169.74 196.835 li
167.689 195.624 165.488 194.716 163.5 193.415 cv
161.82 192.575 li
160.92 191.915 li
159.24 191.075 li
158.34 190.415 li
156.66 189.575 li
156 188.915 li
155.1 188.495 li
154.26 188.075 li
153.42 187.595 li
152.52 186.995 li
151.68 186.515 li
150.84 186.095 li
150.18 185.495 li
149.34 185.015 li
148.44 184.595 li
147.6 183.935 li
146.94 183.515 li
145.26 182.675 li
144.6 182.015 li
143.76 181.595 li
142.86 181.175 li
142.2 180.515 li
141.36 180.095 li
140.7 179.675 li
139.86 179.015 li
139.2 178.595 li
138.36 178.175 li
137.7 177.515 li
136.86 177.095 li
136.2 176.675 li
135.36 176.195 li
134.168 175.103 131.608 173.64 130.38 172.595 cv
129.78 172.115 li
128.46 171.275 li
127.62 170.615 li
126.3 169.775 li
125.7 169.115 li
@
grestore
gsave
86.52 169.535 mo
189.18 169.535 li
189.18 20.315 li
86.52 20.315 li
cp
clp
.645 lw
125.7 169.115 mo
124.38 168.275 li
123.72 167.615 li
123.12 167.195 li
122.46 166.775 li
121.8 166.115 li
120.409 165.346 119.691 164.539 118.56 163.775 cv
118.14 163.295 li
117.48 162.695 li
115.257 161.332 116.725 161.576 114.48 160.295 cv
113.4 159.215 li
112.8 158.795 li
112.32 158.375 li
111.409 157.48 110.537 156.56 109.56 155.795 cv
107.64 153.875 li
106.98 153.455 li
106.56 152.795 li
106.08 152.375 li
105.66 151.955 li
105.06 151.295 li
104.58 150.875 li
104.16 150.395 li
103.74 149.795 li
103.32 149.375 li
102.9 148.895 li
102.267 148.101 101.137 147.052 100.74 146.315 cv
99.9 145.475 li
99.028 144.512 98.528 143.313 97.5 142.475 cv
97.32 142.055 li
96.84 141.395 li
96.42 140.975 li
96.24 140.555 li
95.76 139.895 li
95.58 139.475 li
95.16 138.995 li
94.92 138.395 li
94.5 137.975 li
94.26 137.495 li
93.84 137.075 li
93.66 136.415 li
93.42 135.995 li
93 135.575 li
92.76 134.915 li
92.58 134.495 li
92.34 134.075 li
91.92 133.415 li
91.68 132.995 li
91.5 132.575 li
91.26 131.915 li
91.08 131.495 li
90.6 130.655 li
90.42 129.995 li
89.968 129.257 89.761 128.411 89.34 127.655 cv
89.1 126.995 li
89.1 126.575 li
88.633 125.598 88.314 124.566 88.26 123.515 cv
88.02 123.095 li
87.84 122.675 li
87.84 122.015 li
87.6 121.595 li
87.6 121.175 li
87.42 120.515 li
87.42 119.675 li
87.18 119.255 li
87.18 117.755 li
86.94 117.095 li
86.94 110.195 li
87.18 109.775 li
87.18 108.695 li
87.42 108.275 li
87.42 107.195 li
87.6 106.775 li
87.6 106.355 li
87.84 105.695 li
87.84 105.275 li
88.02 104.855 li
88.02 104.195 li
88.26 103.775 li
88.26 103.355 li
88.5 102.875 li
88.68 102.275 li
88.68 101.855 li
88.92 101.375 li
89.1 100.775 li
89.34 100.295 li
89.52 99.875 li
89.52 99.275 li
89.76 98.795 li
90 98.375 li
90.18 97.715 li
90.42 97.295 li
90.6 96.875 li
90.84 96.455 li
91.08 95.795 li
91.26 95.375 li
91.5 94.955 li
91.92 94.295 li
92.16 93.875 li
92.34 93.455 li
92.58 92.795 li
94.193 90.573 95.272 88.004 97.08 85.895 cv
97.32 85.475 li
97.74 85.055 li
99.446 82.292 101.936 80.073 103.98 77.555 cv
104.4 77.075 li
104.82 76.475 li
105.24 76.055 li
105.9 75.575 li
106.32 74.975 li
106.74 74.495 li
107.16 74.075 li
107.82 73.655 li
108.24 72.995 li
108.66 72.575 li
109.32 72.155 li
109.74 71.495 li
110.994 70.739 111.47 69.815 112.98 68.735 cv
113.64 68.075 li
114.3 67.655 li
114.72 67.235 li
117.605 64.59 120.856 62.055 123.96 59.675 cv
124.62 59.255 li
125.22 58.595 li
127.2 57.335 li
128.04 56.675 li
128.7 56.255 li
129.3 55.835 li
129.96 55.175 li
130.62 54.755 li
131.46 54.335 li
132.12 53.675 li
132.78 53.255 li
133.62 52.835 li
134.599 51.664 136.561 51.014 137.94 49.775 cv
138.78 49.355 li
139.44 48.695 li
140.28 48.275 li
140.94 47.855 li
141.78 47.195 li
142.44 46.775 li
143.28 46.355 li
144.18 45.935 li
144.78 45.275 li
145.68 44.855 li
146.52 44.435 li
147.18 43.775 li
148.02 43.355 li
148.92 42.935 li
149.52 42.275 li
150.42 41.855 li
151.26 41.435 li
152.1 40.775 li
153 40.355 li
153.6 39.935 li
154.5 39.455 li
155.34 38.855 li
159.623 36.453 163.935 33.864 168.24 31.535 cv
169.32 30.875 li
170.16 30.455 li
171.06 30.035 li
172.193 28.825 174.436 28.522 175.56 27.455 cv
176.4 27.035 li
177.3 26.555 li
179.098 25.577 181.054 24.436 182.88 23.555 cv
183.96 23.135 li
184.8 22.475 li
185.64 22.055 li
186.72 21.635 li
187.62 20.975 li
188.7 20.555 li
@
grestore
gsave
125.28 515.495 mo
411.66 515.495 li
411.66 168.635 li
125.28 168.635 li
cp
clp
.645 lw
184.8 515.495 mo
185.64 515.075 li
186.54 514.415 li
187.62 513.995 li
188.46 513.575 li
189.54 512.915 li
190.38 512.495 li
191.28 512.075 li
193.213 511.115 195.129 510.122 197.04 509.075 cv
198.12 508.595 li
199.02 507.995 li
200.04 507.575 li
200.94 507.095 li
202.02 506.675 li
203.1 506.015 li
203.94 505.595 li
205.02 505.175 li
205.86 504.515 li
208.02 503.675 li
208.86 503.015 li
209.94 502.595 li
212.527 501.114 214.312 500.656 216.84 499.175 cv
217.92 498.755 li
219 498.095 li
221.362 496.957 223.708 495.796 226.08 494.675 cv
226.92 494.195 li
228 493.775 li
229.08 493.115 li
229.98 492.695 li
231 492.275 li
237.144 489.165 243.364 486.324 249.54 483.275 cv
250.38 482.795 li
251.46 482.375 li
252.54 481.775 li
253.62 481.295 li
254.7 480.875 li
255.54 480.215 li
257.7 479.375 li
258.78 478.715 li
259.62 478.295 li
261.78 477.455 li
263.803 476.121 266.837 475.129 268.86 473.795 cv
269.94 473.375 li
270.78 472.955 li
271.86 472.475 li
272.94 471.875 li
274.02 471.455 li
274.92 470.975 li
275.94 470.375 li
277.02 469.895 li
279.351 468.804 281.572 467.517 283.92 466.475 cv
285 466.055 li
286.08 465.395 li
288.45 464.375 290.654 463.033 292.98 461.975 cv
294 461.555 li
294.9 461.135 li
295.98 460.475 li
296.82 460.055 li
299.149 458.976 301.326 457.545 303.72 456.575 cv
304.56 455.975 li
305.64 455.495 li
307.95 454.507 310.044 453.132 312.3 452.075 cv
313.14 451.655 li
314.22 450.995 li
315.12 450.575 li
315.96 450.155 li
317.04 449.735 li
317.88 449.075 li
320.171 448.186 322.091 446.618 324.36 445.655 cv
325.2 445.175 li
326.04 444.575 li
328.215 443.579 330.325 442.465 332.28 441.095 cv
333.18 440.675 li
334.02 440.255 li
334.86 439.595 li
335.94 439.175 li
337.812 438.448 339.853 436.656 341.76 435.755 cv
342.6 435.335 li
343.5 434.675 li
345.124 433.807 347.747 432.226 349.26 431.195 cv
349.92 430.775 li
350.82 430.355 li
351.66 429.695 li
352.5 429.275 li
353.16 428.855 li
354 428.195 li
354.9 427.775 li
355.5 427.355 li
356.4 426.935 li
357 426.275 li
357.9 425.855 li
358.56 425.435 li
359.4 424.775 li
360.06 424.355 li
360.9 423.935 li
361.56 423.275 li
362.4 422.855 li
363.06 422.435 li
364.562 421.142 366.386 420.177 367.98 418.955 cv
368.64 418.295 li
369.48 417.875 li
370.14 417.455 li
370.8 416.795 li
371.46 416.375 li
372.06 415.955 li
372.72 415.535 li
373.38 414.875 li
374.22 414.455 li
374.88 414.035 li
375.54 413.375 li
376.14 412.955 li
376.62 412.535 li
377.315 411.642 380.099 409.975 380.88 409.055 cv
381.54 408.455 li
382.2 407.975 li
382.8 407.555 li
383.28 406.955 li
383.88 406.475 li
384.54 406.055 li
384.96 405.395 li
385.62 404.975 li
386.04 404.555 li
386.7 404.135 li
387.12 403.475 li
387.78 403.055 li
389.28 401.555 li
389.94 401.135 li
390.36 400.475 li
390.78 400.055 li
391.44 399.635 li
391.86 398.975 li
392.7 398.135 li
393.36 397.655 li
393.78 397.055 li
394.2 396.575 li
394.68 396.155 li
395.617 394.952 396.517 393.736 397.68 392.735 cv
398.1 392.075 li
398.52 391.655 li
399.352 390.528 400.177 389.338 401.1 388.235 cv
401.52 387.575 li
401.76 387.155 li
402.18 386.735 li
402.6 386.255 li
402.84 385.655 li
403.26 385.235 li
403.44 384.755 li
403.68 384.155 li
404.29 383.508 405.449 381.495 405.84 380.675 cv
406.02 380.255 li
406.26 379.835 li
406.684 378.53 407.66 377.547 408 376.175 cv
408.18 375.755 li
408.42 375.335 li
408.42 374.915 li
409.459 372.246 410.638 368.689 410.76 365.855 cv
411 365.435 li
411 364.355 li
411.18 363.935 li
411.142 360.826 411.303 357.936 411 354.875 cv
410.76 354.455 li
410.76 353.375 li
410.321 352.301 410.322 350.975 409.92 349.955 cv
409.68 349.535 li
409.68 349.115 li
409.287 347.932 409.043 346.761 408.42 345.635 cv
408.18 344.975 li
408 344.555 li
407.76 344.135 li
407.58 343.475 li
407.1 342.635 li
406.92 341.975 li
406.68 341.555 li
406.5 341.135 li
406.26 340.715 li
406.02 340.055 li
405.6 339.635 li
405.42 339.215 li
405.18 338.555 li
405 338.135 li
404.52 337.715 li
404.34 337.055 li
403.92 336.635 li
403.68 336.215 li
403.44 335.735 li
402.768 334.427 401.73 333.377 401.1 332.075 cv
400.26 331.235 li
399.84 330.575 li
399.6 330.155 li
398.76 329.315 li
398.28 328.655 li
397.44 327.815 li
397.26 327.155 li
396.78 326.735 li
396.36 326.315 li
395.94 325.655 li
394.526 324.58 393.853 323.625 392.7 322.235 cv
392.1 321.755 li
391.62 321.335 li
391.2 320.735 li
390.78 320.255 li
390.12 319.835 li
389.7 319.175 li
389.28 318.755 li
388.62 318.335 li
387.12 316.835 li
386.46 316.415 li
386.04 315.755 li
385.38 315.335 li
384.96 314.915 li
384.071 313.859 381.829 312.52 380.88 311.435 cv
380.22 310.835 li
379.62 310.415 li
378.96 309.935 li
378.3 309.335 li
376.845 307.929 375.31 307.092 374.04 305.855 cv
372.72 305.015 li
370.93 303.88 369.551 302.343 367.8 301.595 cv
367.14 300.935 li
365.82 300.095 li
364.98 299.435 li
364.32 299.015 li
363.48 298.535 li
362.82 297.935 li
362.16 297.515 li
360.394 296.326 358.597 295.169 356.82 294.035 cv
356.16 293.615 li
355.32 292.955 li
354.42 292.535 li
353.82 292.115 li
352.92 291.455 li
352.32 291.035 li
351.42 290.615 li
350.58 290.195 li
349.74 289.535 li
349.08 289.115 li
348.24 288.695 li
347.34 288.035 li
342.338 285.054 337.188 282.054 332.1 279.215 cv
331.2 278.795 li
330.36 278.135 li
329.52 277.715 li
317.035 270.839 304.488 264.21 291.66 257.915 cv
290.82 257.255 li
288.66 256.415 li
287.82 255.995 li
286.74 255.335 li
285.66 254.915 li
284.76 254.495 li
278.724 251.417 272.593 248.442 266.52 245.435 cv
265.44 245.015 li
264.6 244.595 li
263.52 243.935 li
261.36 243.095 li
260.46 242.435 li
259.44 242.015 li
258.36 241.595 li
257.28 240.935 li
256.38 240.515 li
254.22 239.675 li
252.174 238.293 249.288 237.371 247.14 236.015 cv
246.06 235.535 li
244.98 235.115 li
244.14 234.515 li
243.06 234.035 li
240.9 233.195 li
240.06 232.535 li
237.9 231.695 li
236.82 231.035 li
235.98 230.615 li
234.9 230.195 li
233.82 229.535 li
232.74 229.115 li
231.9 228.695 li
229.467 227.71 227.03 226.166 224.58 225.215 cv
223.74 224.615 li
222.66 224.195 li
221.58 223.715 li
220.68 223.115 li
218.452 222.137 215.672 220.87 213.6 219.635 cv
212.52 219.215 li
211.68 218.795 li
210.6 218.135 li
209.52 217.715 li
208.68 217.295 li
207.6 216.875 li
206.76 216.215 li
204.6 215.375 li
203.7 214.715 li
202.62 214.295 li
201.78 213.875 li
200.7 213.215 li
199.86 212.795 li
198.78 212.315 li
197.94 211.715 li
196.86 211.295 li
194.61 210.172 192.426 209.022 190.2 207.815 cv
189.12 207.395 li
188.22 206.735 li
186.1 205.957 183.626 204.413 181.56 203.315 cv
179.88 202.475 li
178.8 201.815 li
177.9 201.395 li
175.824 200.318 173.538 198.954 171.48 197.915 cv
170.58 197.495 li
169.74 196.835 li
167.689 195.624 165.488 194.716 163.5 193.415 cv
161.82 192.575 li
160.92 191.915 li
159.24 191.075 li
158.34 190.415 li
156.66 189.575 li
156 188.915 li
155.1 188.495 li
154.26 188.075 li
153.42 187.595 li
152.52 186.995 li
151.68 186.515 li
150.84 186.095 li
150.18 185.495 li
149.34 185.015 li
148.44 184.595 li
147.6 183.935 li
146.94 183.515 li
145.26 182.675 li
144.6 182.015 li
143.76 181.595 li
142.86 181.175 li
142.2 180.515 li
141.36 180.095 li
140.7 179.675 li
139.86 179.015 li
139.2 178.595 li
138.36 178.175 li
137.7 177.515 li
136.86 177.095 li
136.2 176.675 li
135.36 176.195 li
134.168 175.103 131.608 173.64 130.38 172.595 cv
129.78 172.115 li
128.46 171.275 li
127.62 170.615 li
126.3 169.775 li
125.7 169.115 li
@
grestore
gsave
86.52 169.535 mo
189.18 169.535 li
189.18 20.315 li
86.52 20.315 li
cp
clp
.645 lw
125.7 169.115 mo
124.38 168.275 li
123.72 167.615 li
123.12 167.195 li
122.46 166.775 li
121.8 166.115 li
120.409 165.346 119.691 164.539 118.56 163.775 cv
118.14 163.295 li
117.48 162.695 li
115.257 161.332 116.725 161.576 114.48 160.295 cv
113.4 159.215 li
112.8 158.795 li
112.32 158.375 li
111.409 157.48 110.537 156.56 109.56 155.795 cv
107.64 153.875 li
106.98 153.455 li
106.56 152.795 li
106.08 152.375 li
105.66 151.955 li
105.06 151.295 li
104.58 150.875 li
104.16 150.395 li
103.74 149.795 li
103.32 149.375 li
102.9 148.895 li
102.267 148.101 101.137 147.052 100.74 146.315 cv
99.9 145.475 li
99.028 144.512 98.528 143.313 97.5 142.475 cv
97.32 142.055 li
96.84 141.395 li
96.42 140.975 li
96.24 140.555 li
95.76 139.895 li
95.58 139.475 li
95.16 138.995 li
94.92 138.395 li
94.5 137.975 li
94.26 137.495 li
93.84 137.075 li
93.66 136.415 li
93.42 135.995 li
93 135.575 li
92.76 134.915 li
92.58 134.495 li
92.34 134.075 li
91.92 133.415 li
91.68 132.995 li
91.5 132.575 li
91.26 131.915 li
91.08 131.495 li
90.6 130.655 li
90.42 129.995 li
89.968 129.257 89.761 128.411 89.34 127.655 cv
89.1 126.995 li
89.1 126.575 li
88.633 125.598 88.314 124.566 88.26 123.515 cv
88.02 123.095 li
87.84 122.675 li
87.84 122.015 li
87.6 121.595 li
87.6 121.175 li
87.42 120.515 li
87.42 119.675 li
87.18 119.255 li
87.18 117.755 li
86.94 117.095 li
86.94 110.195 li
87.18 109.775 li
87.18 108.695 li
87.42 108.275 li
87.42 107.195 li
87.6 106.775 li
87.6 106.355 li
87.84 105.695 li
87.84 105.275 li
88.02 104.855 li
88.02 104.195 li
88.26 103.775 li
88.26 103.355 li
88.5 102.875 li
88.68 102.275 li
88.68 101.855 li
88.92 101.375 li
89.1 100.775 li
89.34 100.295 li
89.52 99.875 li
89.52 99.275 li
89.76 98.795 li
90 98.375 li
90.18 97.715 li
90.42 97.295 li
90.6 96.875 li
90.84 96.455 li
91.08 95.795 li
91.26 95.375 li
91.5 94.955 li
91.92 94.295 li
92.16 93.875 li
92.34 93.455 li
92.58 92.795 li
94.193 90.573 95.272 88.004 97.08 85.895 cv
97.32 85.475 li
97.74 85.055 li
99.446 82.292 101.936 80.073 103.98 77.555 cv
104.4 77.075 li
104.82 76.475 li
105.24 76.055 li
105.9 75.575 li
106.32 74.975 li
106.74 74.495 li
107.16 74.075 li
107.82 73.655 li
108.24 72.995 li
108.66 72.575 li
109.32 72.155 li
109.74 71.495 li
110.994 70.739 111.47 69.815 112.98 68.735 cv
113.64 68.075 li
114.3 67.655 li
114.72 67.235 li
117.605 64.59 120.856 62.055 123.96 59.675 cv
124.62 59.255 li
125.22 58.595 li
127.2 57.335 li
128.04 56.675 li
128.7 56.255 li
129.3 55.835 li
129.96 55.175 li
130.62 54.755 li
131.46 54.335 li
132.12 53.675 li
132.78 53.255 li
133.62 52.835 li
134.599 51.664 136.561 51.014 137.94 49.775 cv
138.78 49.355 li
139.44 48.695 li
140.28 48.275 li
140.94 47.855 li
141.78 47.195 li
142.44 46.775 li
143.28 46.355 li
144.18 45.935 li
144.78 45.275 li
145.68 44.855 li
146.52 44.435 li
147.18 43.775 li
148.02 43.355 li
148.92 42.935 li
149.52 42.275 li
150.42 41.855 li
151.26 41.435 li
152.1 40.775 li
153 40.355 li
153.6 39.935 li
154.5 39.455 li
155.34 38.855 li
159.623 36.453 163.935 33.864 168.24 31.535 cv
169.32 30.875 li
170.16 30.455 li
171.06 30.035 li
172.193 28.825 174.436 28.522 175.56 27.455 cv
176.4 27.035 li
177.3 26.555 li
179.098 25.577 181.054 24.436 182.88 23.555 cv
183.96 23.135 li
184.8 22.475 li
185.64 22.055 li
186.72 21.635 li
187.62 20.975 li
188.7 20.555 li
@
grestore
88.02 114.275 mo
89.34 114.275 li
.265019 .809232 3.0518e-5 3.0518e-5 cmyk
@
88.02 117.935 mo
88.02 110.615 li
@
90.6 114.275 mo
89.34 114.275 li
@
90.6 117.935 mo
90.6 110.615 li
@
.43 lw
268.68 154.536 mo
262.86 170.856 li
.289281 1 1 .383062 cmyk
@
276.18 139.656 mo
272.34 146.316 li
@
279.42 129.996 mo
279.18 131.256 li
@
283.26 121.176 mo
282.84 121.836 li
@
300.24 97.9561 mo
297.06 99.0361 li
@
307.8 87.2161 mo
304.32 88.0561 li
@
331.44 83.7961 mo
316.62 85.4761 li
@
315.54 80.9761 mo
331.44 82.7161 li
@
318.12 79.0561 mo
315.3 79.4761 li
@
344.76 76.2361 mo
326.94 77.5561 li
@
330.6 74.0761 mo
344.76 75.3961 li
@
329.7 70.2361 mo
324.78 70.8961 li
@
359.58 67.8361 mo
338.76 69.3361 li
@
331.68 61.4161 mo
352.74 62.4961 li
@
335.52 58.8361 mo
328.62 59.2561 li
@
349.08 57.3361 mo
344.58 57.9961 li
@
345.84 53.436 mo
351.84 54.0961 li
@
351.66 51.2761 mo
348 51.5161 li
@
345 50.0161 mo
351.66 50.6761 li
@
333.18 45.0961 mo
329.94 45.2761 li
@
343.5 44.196 mo
342.18 44.196 li
@
358.98 43.116 mo
352.5 43.5361 li
@
261.36 172.115 mo
259.68 172.115 258.36 173.495 258.36 175.175 cv
258.36 176.855 259.68 178.175 261.36 178.175 cv
262.98 178.175 264.36 176.855 264.36 175.175 cv
264.36 173.495 262.98 172.115 261.36 172.115 cv
cp
ef
261.36 172.115 mo
259.68 172.115 258.36 173.495 258.36 175.175 cv
258.36 176.855 259.68 178.175 261.36 178.175 cv
262.98 178.175 264.36 176.855 264.36 175.175 cv
264.36 173.495 262.98 172.115 261.36 172.115 cv
cp
@
270.18 147.216 mo
268.5 147.216 267.18 148.596 267.18 150.216 cv
267.18 151.896 268.5 153.216 270.18 153.216 cv
271.8 153.216 273.18 151.896 273.18 150.216 cv
273.18 148.596 271.8 147.216 270.18 147.216 cv
cp
ef
270.18 147.216 mo
268.5 147.216 267.18 148.596 267.18 150.216 cv
267.18 151.896 268.5 153.216 270.18 153.216 cv
271.8 153.216 273.18 151.896 273.18 150.216 cv
273.18 148.596 271.8 147.216 270.18 147.216 cv
cp
@
278.34 132.816 mo
276.66 132.816 275.34 134.196 275.34 135.816 cv
275.34 137.496 276.66 138.816 278.34 138.816 cv
279.96 138.816 281.34 137.496 281.34 135.816 cv
281.34 134.196 279.96 132.816 278.34 132.816 cv
cp
ef
278.34 132.816 mo
276.66 132.816 275.34 134.196 275.34 135.816 cv
275.34 137.496 276.66 138.816 278.34 138.816 cv
279.96 138.816 281.34 137.496 281.34 135.816 cv
281.34 134.196 279.96 132.816 278.34 132.816 cv
cp
@
280.26 122.495 mo
278.58 122.495 277.26 123.875 277.26 125.495 cv
277.26 127.175 278.58 128.495 280.26 128.495 cv
281.88 128.495 283.26 127.175 283.26 125.495 cv
283.26 123.875 281.88 122.495 280.26 122.495 cv
cp
ef
280.26 122.495 mo
278.58 122.495 277.26 123.875 277.26 125.495 cv
277.26 127.175 278.58 128.495 280.26 128.495 cv
281.88 128.495 283.26 127.175 283.26 125.495 cv
283.26 123.875 281.88 122.495 280.26 122.495 cv
cp
@
285.84 114.516 mo
284.16 114.516 282.84 115.896 282.84 117.516 cv
282.84 119.196 284.16 120.516 285.84 120.516 cv
287.46 120.516 288.84 119.196 288.84 117.516 cv
288.84 115.896 287.46 114.516 285.84 114.516 cv
cp
ef
285.84 114.516 mo
284.16 114.516 282.84 115.896 282.84 117.516 cv
282.84 119.196 284.16 120.516 285.84 120.516 cv
287.46 120.516 288.84 119.196 288.84 117.516 cv
288.84 115.896 287.46 114.516 285.84 114.516 cv
cp
@
289.5 107.855 mo
287.82 107.855 286.5 109.235 286.5 110.855 cv
286.5 112.535 287.82 113.855 289.5 113.855 cv
291.12 113.855 292.5 112.535 292.5 110.855 cv
292.5 109.235 291.12 107.855 289.5 107.855 cv
cp
ef
289.5 107.855 mo
287.82 107.855 286.5 109.235 286.5 110.855 cv
286.5 112.535 287.82 113.855 289.5 113.855 cv
291.12 113.855 292.5 112.535 292.5 110.855 cv
292.5 109.235 291.12 107.855 289.5 107.855 cv
cp
@
293.16 102.456 mo
291.48 102.456 290.16 103.836 290.16 105.516 cv
290.16 107.196 291.48 108.516 293.16 108.516 cv
294.78 108.516 296.16 107.196 296.16 105.516 cv
296.16 103.836 294.78 102.456 293.16 102.456 cv
cp
ef
293.16 102.456 mo
291.48 102.456 290.16 103.836 290.16 105.516 cv
290.16 107.196 291.48 108.516 293.16 108.516 cv
294.78 108.516 296.16 107.196 296.16 105.516 cv
296.16 103.836 294.78 102.456 293.16 102.456 cv
cp
@
292.74 97.535 mo
291.06 97.535 289.74 98.915 289.74 100.535 cv
289.74 102.215 291.06 103.535 292.74 103.535 cv
294.36 103.535 295.74 102.215 295.74 100.535 cv
295.74 98.915 294.36 97.535 292.74 97.535 cv
cp
ef
292.74 97.535 mo
291.06 97.535 289.74 98.915 289.74 100.535 cv
289.74 102.215 291.06 103.535 292.74 103.535 cv
294.36 103.535 295.74 102.215 295.74 100.535 cv
295.74 98.915 294.36 97.535 292.74 97.535 cv
cp
@
304.56 93.456 mo
302.88 93.456 301.56 94.836 301.56 96.456 cv
301.56 98.136 302.88 99.456 304.56 99.456 cv
306.18 99.456 307.56 98.136 307.56 96.456 cv
307.56 94.836 306.18 93.456 304.56 93.456 cv
cp
ef
304.56 93.456 mo
302.88 93.456 301.56 94.836 301.56 96.456 cv
301.56 98.136 302.88 99.456 304.56 99.456 cv
306.18 99.456 307.56 98.136 307.56 96.456 cv
307.56 94.836 306.18 93.456 304.56 93.456 cv
cp
@
307.14 89.555 mo
305.46 89.555 304.14 90.935 304.14 92.6151 cv
304.14 94.295 305.46 95.6151 307.14 95.6151 cv
308.76 95.6151 310.14 94.295 310.14 92.6151 cv
310.14 90.935 308.76 89.555 307.14 89.555 cv
cp
ef
307.14 89.555 mo
305.46 89.555 304.14 90.935 304.14 92.6151 cv
304.14 94.295 305.46 95.6151 307.14 95.6151 cv
308.76 95.6151 310.14 94.295 310.14 92.6151 cv
310.14 90.935 308.76 89.555 307.14 89.555 cv
cp
@
300.06 86.136 mo
298.38 86.136 297.06 87.516 297.06 89.136 cv
297.06 90.816 298.38 92.136 300.06 92.136 cv
301.68 92.136 303.06 90.816 303.06 89.136 cv
303.06 87.516 301.68 86.136 300.06 86.136 cv
cp
ef
300.06 86.136 mo
298.38 86.136 297.06 87.516 297.06 89.136 cv
297.06 90.816 298.38 92.136 300.06 92.136 cv
301.68 92.136 303.06 90.816 303.06 89.136 cv
303.06 87.516 301.68 86.136 300.06 86.136 cv
cp
@
312.06 83.136 mo
310.38 83.136 309.06 84.516 309.06 86.136 cv
309.06 87.816 310.38 89.136 312.06 89.136 cv
313.74 89.136 315.12 87.816 315.12 86.136 cv
315.12 84.516 313.74 83.136 312.06 83.136 cv
cp
ef
312.06 83.136 mo
310.38 83.136 309.06 84.516 309.06 86.136 cv
309.06 87.816 310.38 89.136 312.06 89.136 cv
313.74 89.136 315.12 87.816 315.12 86.136 cv
315.12 84.516 313.74 83.136 312.06 83.136 cv
cp
@
335.94 80.136 mo
334.26 80.136 332.94 81.516 332.94 83.136 cv
332.94 84.816 334.26 86.136 335.94 86.136 cv
337.56 86.136 338.94 84.816 338.94 83.136 cv
338.94 81.516 337.56 80.136 335.94 80.136 cv
cp
ef
335.94 80.136 mo
334.26 80.136 332.94 81.516 332.94 83.136 cv
332.94 84.816 334.26 86.136 335.94 86.136 cv
337.56 86.136 338.94 84.816 338.94 83.136 cv
338.94 81.516 337.56 80.136 335.94 80.136 cv
cp
@
310.98 77.555 mo
309.3 77.555 307.98 78.935 307.98 80.555 cv
307.98 82.235 309.3 83.555 310.98 83.555 cv
312.66 83.555 314.04 82.235 314.04 80.555 cv
314.04 78.935 312.66 77.555 310.98 77.555 cv
cp
ef
310.98 77.555 mo
309.3 77.555 307.98 78.935 307.98 80.555 cv
307.98 82.235 309.3 83.555 310.98 83.555 cv
312.66 83.555 314.04 82.235 314.04 80.555 cv
314.04 78.935 312.66 77.555 310.98 77.555 cv
cp
@
322.38 74.975 mo
320.7 74.975 319.38 76.355 319.38 77.975 cv
319.38 79.655 320.7 80.975 322.38 80.975 cv
324.06 80.975 325.44 79.655 325.44 77.975 cv
325.44 76.355 324.06 74.975 322.38 74.975 cv
cp
ef
322.38 74.975 mo
320.7 74.975 319.38 76.355 319.38 77.975 cv
319.38 79.655 320.7 80.975 322.38 80.975 cv
324.06 80.975 325.44 79.655 325.44 77.975 cv
325.44 76.355 324.06 74.975 322.38 74.975 cv
cp
@
349.26 72.816 mo
347.58 72.816 346.26 74.196 346.26 75.816 cv
346.26 77.496 347.58 78.816 349.26 78.816 cv
350.94 78.816 352.32 77.496 352.32 75.816 cv
352.32 74.196 350.94 72.816 349.26 72.816 cv
cp
ef
349.26 72.816 mo
347.58 72.816 346.26 74.196 346.26 75.816 cv
346.26 77.496 347.58 78.816 349.26 78.816 cv
350.94 78.816 352.32 77.496 352.32 75.816 cv
352.32 74.196 350.94 72.816 349.26 72.816 cv
cp
@
326.04 70.655 mo
324.36 70.655 323.04 72.035 323.04 73.655 cv
323.04 75.335 324.36 76.655 326.04 76.655 cv
327.72 76.655 329.1 75.335 329.1 73.655 cv
329.1 72.035 327.72 70.655 326.04 70.655 cv
cp
ef
326.04 70.655 mo
324.36 70.655 323.04 72.035 323.04 73.655 cv
323.04 75.335 324.36 76.655 326.04 76.655 cv
327.72 76.655 329.1 75.335 329.1 73.655 cv
329.1 72.035 327.72 70.655 326.04 70.655 cv
cp
@
320.22 68.495 mo
318.54 68.495 317.22 69.875 317.22 71.495 cv
317.22 73.175 318.54 74.495 320.22 74.495 cv
321.9 74.495 323.28 73.175 323.28 71.495 cv
323.28 69.875 321.9 68.495 320.22 68.495 cv
cp
ef
320.22 68.495 mo
318.54 68.495 317.22 69.875 317.22 71.495 cv
317.22 73.175 318.54 74.495 320.22 74.495 cv
321.9 74.495 323.28 73.175 323.28 71.495 cv
323.28 69.875 321.9 68.495 320.22 68.495 cv
cp
@
334.2 66.576 mo
332.52 66.576 331.2 67.956 331.2 69.576 cv
331.2 71.256 332.52 72.576 334.2 72.576 cv
335.88 72.576 337.26 71.256 337.26 69.576 cv
337.26 67.956 335.88 66.576 334.2 66.576 cv
cp
ef
334.2 66.576 mo
332.52 66.576 331.2 67.956 331.2 69.576 cv
331.2 71.256 332.52 72.576 334.2 72.576 cv
335.88 72.576 337.26 71.256 337.26 69.576 cv
337.26 67.956 335.88 66.576 334.2 66.576 cv
cp
@
364.14 64.655 mo
362.46 64.655 361.14 66.035 361.14 67.655 cv
361.14 69.335 362.46 70.655 364.14 70.655 cv
365.76 70.655 367.14 69.335 367.14 67.655 cv
367.14 66.035 365.76 64.655 364.14 64.655 cv
cp
ef
364.14 64.655 mo
362.46 64.655 361.14 66.035 361.14 67.655 cv
361.14 69.335 362.46 70.655 364.14 70.655 cv
365.76 70.655 367.14 69.335 367.14 67.655 cv
367.14 66.035 365.76 64.655 364.14 64.655 cv
cp
@
361.98 62.915 mo
360.3 62.915 358.98 64.295 358.98 65.915 cv
358.98 67.595 360.3 68.915 361.98 68.915 cv
363.6 68.915 364.98 67.595 364.98 65.915 cv
364.98 64.295 363.6 62.915 361.98 62.915 cv
cp
ef
361.98 62.915 mo
360.3 62.915 358.98 64.295 358.98 65.915 cv
358.98 67.595 360.3 68.915 361.98 68.915 cv
363.6 68.915 364.98 67.595 364.98 65.915 cv
364.98 64.295 363.6 62.915 361.98 62.915 cv
cp
@
356.4 61.415 mo
354.72 61.415 353.4 62.795 353.4 64.415 cv
353.4 66.095 354.72 67.415 356.4 67.415 cv
358.02 67.415 359.4 66.095 359.4 64.415 cv
359.4 62.795 358.02 61.415 356.4 61.415 cv
cp
ef
356.4 61.415 mo
354.72 61.415 353.4 62.795 353.4 64.415 cv
353.4 66.095 354.72 67.415 356.4 67.415 cv
358.02 67.415 359.4 66.095 359.4 64.415 cv
359.4 62.795 358.02 61.415 356.4 61.415 cv
cp
@
357.24 59.675 mo
355.56 59.675 354.24 61.055 354.24 62.735 cv
354.24 64.415 355.56 65.735 357.24 65.735 cv
358.86 65.735 360.24 64.415 360.24 62.735 cv
360.24 61.055 358.86 59.675 357.24 59.675 cv
cp
ef
357.24 59.675 mo
355.56 59.675 354.24 61.055 354.24 62.735 cv
354.24 64.415 355.56 65.735 357.24 65.735 cv
358.86 65.735 360.24 64.415 360.24 62.735 cv
360.24 61.055 358.86 59.675 357.24 59.675 cv
cp
@
327.12 58.175 mo
325.44 58.175 324.12 59.555 324.12 61.175 cv
324.12 62.855 325.44 64.175 327.12 64.175 cv
328.74 64.175 330.12 62.855 330.12 61.175 cv
330.12 59.555 328.74 58.175 327.12 58.175 cv
cp
ef
327.12 58.175 mo
325.44 58.175 324.12 59.555 324.12 61.175 cv
324.12 62.855 325.44 64.175 327.12 64.175 cv
328.74 64.175 330.12 62.855 330.12 61.175 cv
330.12 59.555 328.74 58.175 327.12 58.175 cv
cp
@
324.12 56.675 mo
322.44 56.675 321.12 58.055 321.12 59.675 cv
321.12 61.355 322.44 62.675 324.12 62.675 cv
325.74 62.675 327.12 61.355 327.12 59.675 cv
327.12 58.055 325.74 56.675 324.12 56.675 cv
cp
ef
324.12 56.675 mo
322.44 56.675 321.12 58.055 321.12 59.675 cv
321.12 61.355 322.44 62.675 324.12 62.675 cv
325.74 62.675 327.12 61.355 327.12 59.675 cv
327.12 58.055 325.74 56.675 324.12 56.675 cv
cp
@
340.02 55.415 mo
338.34 55.415 337.02 56.795 337.02 58.415 cv
337.02 60.095 338.34 61.415 340.02 61.415 cv
341.7 61.415 343.08 60.095 343.08 58.415 cv
343.08 56.795 341.7 55.415 340.02 55.415 cv
cp
ef
340.02 55.415 mo
338.34 55.415 337.02 56.795 337.02 58.415 cv
337.02 60.095 338.34 61.415 340.02 61.415 cv
341.7 61.415 343.08 60.095 343.08 58.415 cv
343.08 56.795 341.7 55.415 340.02 55.415 cv
cp
@
353.58 53.855 mo
351.9 53.855 350.58 55.235 350.58 56.915 cv
350.58 58.595 351.9 59.915 353.58 59.915 cv
355.2 59.915 356.58 58.595 356.58 56.915 cv
356.58 55.235 355.2 53.855 353.58 53.855 cv
cp
ef
353.58 53.855 mo
351.9 53.855 350.58 55.235 350.58 56.915 cv
350.58 58.595 351.9 59.915 353.58 59.915 cv
355.2 59.915 356.58 58.595 356.58 56.915 cv
356.58 55.235 355.2 53.855 353.58 53.855 cv
cp
@
356.58 52.596 mo
354.9 52.596 353.58 53.976 353.58 55.596 cv
353.58 57.2761 354.9 58.596 356.58 58.596 cv
358.2 58.596 359.58 57.2761 359.58 55.596 cv
359.58 53.976 358.2 52.596 356.58 52.596 cv
cp
ef
356.58 52.596 mo
354.9 52.596 353.58 53.976 353.58 55.596 cv
353.58 57.2761 354.9 58.596 356.58 58.596 cv
358.2 58.596 359.58 57.2761 359.58 55.596 cv
359.58 53.976 358.2 52.596 356.58 52.596 cv
cp
@
356.4 51.275 mo
354.72 51.275 353.4 52.655 353.4 54.335 cv
353.4 56.015 354.72 57.335 356.4 57.335 cv
358.02 57.335 359.4 56.015 359.4 54.335 cv
359.4 52.655 358.02 51.275 356.4 51.275 cv
cp
ef
356.4 51.275 mo
354.72 51.275 353.4 52.655 353.4 54.335 cv
353.4 56.015 354.72 57.335 356.4 57.335 cv
358.02 57.335 359.4 56.015 359.4 54.335 cv
359.4 52.655 358.02 51.275 356.4 51.275 cv
cp
@
341.34 50.256 mo
339.66 50.256 338.34 51.636 338.34 53.256 cv
338.34 54.936 339.66 56.256 341.34 56.256 cv
342.96 56.256 344.34 54.936 344.34 53.256 cv
344.34 51.636 342.96 50.256 341.34 50.256 cv
cp
ef
341.34 50.256 mo
339.66 50.256 338.34 51.636 338.34 53.256 cv
338.34 54.936 339.66 56.256 341.34 56.256 cv
342.96 56.256 344.34 54.936 344.34 53.256 cv
344.34 51.636 342.96 50.256 341.34 50.256 cv
cp
@
343.44 48.935 mo
341.76 48.935 340.44 50.315 340.44 51.935 cv
340.44 53.6151 341.76 54.935 343.44 54.935 cv
345.12 54.935 346.5 53.6151 346.5 51.935 cv
346.5 50.315 345.12 48.935 343.44 48.935 cv
cp
ef
343.44 48.935 mo
341.76 48.935 340.44 50.315 340.44 51.935 cv
340.44 53.6151 341.76 54.935 343.44 54.935 cv
345.12 54.935 346.5 53.6151 346.5 51.935 cv
346.5 50.315 345.12 48.935 343.44 48.935 cv
cp
@
356.16 47.855 mo
354.48 47.855 353.16 49.235 353.16 50.855 cv
353.16 52.535 354.48 53.855 356.16 53.855 cv
357.78 53.855 359.16 52.535 359.16 50.855 cv
359.16 49.235 357.78 47.855 356.16 47.855 cv
cp
ef
356.16 47.855 mo
354.48 47.855 353.16 49.235 353.16 50.855 cv
353.16 52.535 354.48 53.855 356.16 53.855 cv
357.78 53.855 359.16 52.535 359.16 50.855 cv
359.16 49.235 357.78 47.855 356.16 47.855 cv
cp
@
340.44 46.775 mo
338.76 46.775 337.44 48.155 337.44 49.835 cv
337.44 51.515 338.76 52.835 340.44 52.835 cv
342.12 52.835 343.5 51.515 343.5 49.835 cv
343.5 48.155 342.12 46.775 340.44 46.775 cv
cp
ef
340.44 46.775 mo
338.76 46.775 337.44 48.155 337.44 49.835 cv
337.44 51.515 338.76 52.835 340.44 52.835 cv
342.12 52.835 343.5 51.515 343.5 49.835 cv
343.5 48.155 342.12 46.775 340.44 46.775 cv
cp
@
334.86 45.696 mo
333.18 45.696 331.86 47.076 331.86 48.756 cv
331.86 50.436 333.18 51.756 334.86 51.756 cv
336.48 51.756 337.86 50.436 337.86 48.756 cv
337.86 47.076 336.48 45.696 334.86 45.696 cv
cp
ef
334.86 45.696 mo
333.18 45.696 331.86 47.076 331.86 48.756 cv
331.86 50.436 333.18 51.756 334.86 51.756 cv
336.48 51.756 337.86 50.436 337.86 48.756 cv
337.86 47.076 336.48 45.696 334.86 45.696 cv
cp
@
333.12 44.615 mo
331.44 44.615 330.12 45.995 330.12 47.675 cv
330.12 49.355 331.44 50.675 333.12 50.675 cv
334.8 50.675 336.18 49.355 336.18 47.675 cv
336.18 45.995 334.8 44.615 333.12 44.615 cv
cp
ef
333.12 44.615 mo
331.44 44.615 330.12 45.995 330.12 47.675 cv
330.12 49.355 331.44 50.675 333.12 50.675 cv
334.8 50.675 336.18 49.355 336.18 47.675 cv
336.18 45.995 334.8 44.615 333.12 44.615 cv
cp
@
330.36 43.535 mo
328.68 43.535 327.36 44.915 327.36 46.595 cv
327.36 48.275 328.68 49.595 330.36 49.595 cv
331.98 49.595 333.36 48.275 333.36 46.595 cv
333.36 44.915 331.98 43.535 330.36 43.535 cv
cp
ef
330.36 43.535 mo
328.68 43.535 327.36 44.915 327.36 46.595 cv
327.36 48.275 328.68 49.595 330.36 49.595 cv
331.98 49.595 333.36 48.275 333.36 46.595 cv
333.36 44.915 331.98 43.535 330.36 43.535 cv
cp
@
325.38 42.696 mo
323.7 42.696 322.38 44.076 322.38 45.696 cv
322.38 47.376 323.7 48.696 325.38 48.696 cv
327.06 48.696 328.44 47.376 328.44 45.696 cv
328.44 44.076 327.06 42.696 325.38 42.696 cv
cp
ef
325.38 42.696 mo
323.7 42.696 322.38 44.076 322.38 45.696 cv
322.38 47.376 323.7 48.696 325.38 48.696 cv
327.06 48.696 328.44 47.376 328.44 45.696 cv
328.44 44.076 327.06 42.696 325.38 42.696 cv
cp
@
337.68 41.615 mo
336 41.615 334.68 42.995 334.68 44.675 cv
334.68 46.355 336 47.675 337.68 47.675 cv
339.3 47.675 340.68 46.355 340.68 44.675 cv
340.68 42.995 339.3 41.615 337.68 41.615 cv
cp
ef
337.68 41.615 mo
336 41.615 334.68 42.995 334.68 44.675 cv
334.68 46.355 336 47.675 337.68 47.675 cv
339.3 47.675 340.68 46.355 340.68 44.675 cv
340.68 42.995 339.3 41.615 337.68 41.615 cv
cp
@
348 40.775 mo
346.32 40.775 345 42.155 345 43.775 cv
345 45.455 346.32 46.775 348 46.775 cv
349.62 46.775 351 45.455 351 43.775 cv
351 42.155 349.62 40.775 348 40.775 cv
cp
ef
348 40.775 mo
346.32 40.775 345 42.155 345 43.775 cv
345 45.455 346.32 46.775 348 46.775 cv
349.62 46.775 351 45.455 351 43.775 cv
351 42.155 349.62 40.775 348 40.775 cv
cp
@
363.48 39.935 mo
361.8 39.935 360.48 41.315 360.48 42.935 cv
360.48 44.6151 361.8 45.935 363.48 45.935 cv
365.1 45.935 366.48 44.6151 366.48 42.935 cv
366.48 41.315 365.1 39.935 363.48 39.935 cv
cp
ef
363.48 39.935 mo
361.8 39.935 360.48 41.315 360.48 42.935 cv
360.48 44.6151 361.8 45.935 363.48 45.935 cv
365.1 45.935 366.48 44.6151 366.48 42.935 cv
366.48 41.315 365.1 39.935 363.48 39.935 cv
cp
@
gsave
342.54 185.495 mo
343.68 185.495 li
343.68 183.335 li
342.54 183.335 li
cp
clp
.86 lw
343.08 185.495 mo
343.08 183.935 li
.265019 .809232 3.0518e-5 3.0518e-5 cmyk
@
grestore
.86 lw
343.08 183.935 mo
343.08 182.255 li
343.08 182.015 li
.265019 .809232 3.0518e-5 3.0518e-5 cmyk
@
343.08 178.175 mo
343.08 177.275 li
343.08 175.595 li
343.08 174.695 li
@
343.08 170.855 mo
343.08 170.615 li
343.08 168.935 li
343.08 167.435 li
@
343.08 163.535 mo
343.08 162.275 li
343.08 160.715 li
343.08 160.115 li
@
343.08 156.215 mo
343.08 155.555 li
343.08 154.055 li
343.08 152.795 li
@
343.08 148.895 mo
343.08 148.895 li
343.08 147.395 li
343.08 145.715 li
343.08 145.475 li
@
343.08 141.635 mo
343.08 140.735 li
343.08 138.995 li
343.08 138.155 li
@
343.08 134.315 mo
343.08 134.075 li
343.08 132.335 li
343.08 130.835 li
@
343.08 126.995 mo
343.08 125.675 li
343.08 123.995 li
343.08 123.515 li
@
343.08 119.675 mo
343.08 119.015 li
343.08 117.335 li
343.08 116.255 li
@
343.08 112.355 mo
343.08 112.355 li
343.08 110.615 li
343.08 108.935 li
@
343.08 105.035 mo
343.08 103.955 li
343.08 102.275 li
343.08 101.615 li
@
343.08 97.7149 mo
343.08 97.2949 li
343.08 95.6149 li
343.08 94.2949 li
@
343.08 90.4549 mo
343.08 88.9549 li
343.08 87.2149 li
343.08 86.9749 li
@
343.08 83.1349 mo
343.08 82.2349 li
343.08 80.5549 li
343.08 79.6549 li
@
343.08 75.8149 mo
343.08 75.5749 li
343.08 73.8949 li
343.08 72.3949 li
@
343.08 68.4949 mo
343.08 67.2349 li
343.08 65.4949 li
343.08 65.0749 li
@
343.08 61.1749 mo
343.08 60.5749 li
343.08 58.8349 li
343.08 57.7549 li
@
343.08 53.8549 mo
343.08 53.8549 li
343.08 52.1749 li
343.08 50.6749 li
343.08 50.4349 li
@
343.08 46.5948 mo
343.08 45.5149 li
343.08 44.0149 li
343.08 43.1149 li
@
343.08 39.2748 mo
343.08 38.8549 li
343.08 37.3549 li
343.08 35.7949 li
@
343.08 31.9548 mo
343.08 30.6349 li
343.08 28.9548 li
343.08 28.5349 li
@
343.08 24.6348 mo
343.08 23.9749 li
343.08 22.2949 li
343.08 21.2148 li
@
231.42 397.295 mo
159.6 397.295 li
159.6 399.575 li
231.42 399.575 li
cp
165.78 393.515 mo
157.38 398.435 li
165.78 403.355 li
166.32 403.655 167.04 403.475 167.34 402.935 cv
167.64 402.395 167.46 401.735 166.92 401.375 cv
160.2 397.475 li
160.2 399.395 li
166.92 395.495 li
167.46 395.135 167.64 394.475 167.34 393.935 cv
167.04 393.395 166.32 393.215 165.78 393.515 cv
.750179 .679652 .670191 .901488 cmyk
f
232.56 398.435 mo
230.34 398.435 li
230.34 332.795 li
232.56 332.795 li
cp
230.34 398.435 mo
cp
226.56 338.975 mo
231.42 330.515 li
236.34 338.975 li
236.7 339.515 236.52 340.175 235.98 340.475 cv
235.44 340.835 234.72 340.655 234.42 340.115 cv
230.46 333.335 li
232.44 333.335 li
228.48 340.115 li
228.18 340.655 227.46 340.835 226.92 340.475 cv
226.38 340.175 226.2 339.515 226.56 338.975 cv
f
232.14 397.775 mo
169.26 434.075 li
169.98 435.395 li
232.86 399.095 li
cp
172.44 428.315 mo
168.36 435.455 li
176.58 435.515 li
177 435.515 177.3 435.155 177.36 434.735 cv
177.36 434.375 177 434.015 176.58 434.015 cv
169.62 433.955 li
170.28 435.095 li
173.76 429.095 li
173.94 428.735 173.82 428.255 173.46 428.015 cv
173.1 427.835 172.62 427.955 172.44 428.315 cv
f
231.84 398.795 mo
198.66 341.315 li
199.92 340.535 li
233.16 398.075 li
cp
198.48 347.855 mo
198.54 339.635 li
205.68 343.715 li
206.04 343.955 206.16 344.375 205.98 344.735 cv
205.74 345.095 205.32 345.215 204.96 345.035 cv
198.9 341.555 li
200.04 340.955 li
199.98 347.855 li
199.98 348.275 199.68 348.635 199.26 348.635 cv
198.84 348.635 198.48 348.275 198.48 347.855 cv
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 2094 59 <000100090000054905ba001302b540292612011901160b02291229133801
370338083809380d3a0e351237130a12132012213412201221340eb8ffe0
b31221340db8ffe0b312213409b8ffe0b312213408b8ffe0406c12213404
2012213403201221347701770b0226042907280b2a0e261236043a083a0b
3a0e3512480854045d085c0b5a0e5412670165046a086b0b690e65127504
7a08790b7a0d7712771386048a078a0a9504b808b712c604c908d704d808
d90ed612e704e808e80ee6122c06b8ffea40110c11025510160c1102550b
080c11025501b8fff8b30c110255b10602435458400b0c00151410180a11
065506b8ffe8400e0a110655100600020d00080a0202003f3c3f3c111239
392b2b01111239391b405d06070809090106050403030b1010130f0e0d0d
0110100d111213130b010009020d0b030c130a0b0106100213090a131320
00091400000903020d0d200c03140c0c030a090903030202130d0d0c0c00
082f15011517171a200c400c020cb8015fb7200a900ac00a030ab801b8b5
5f029f020202b801b8400a06b440105010cf100310b8015f400a20001914
15c22160a8182b2b4ef41a194dfd5d18e519ed5ded5dfd5d184e456544e6
5d003f3c103c103c3f3c103c103c87054d2e2b877dc4872e182b877dc400
1112393939390f0f870e103c3c08c4870e103c3c08c4870e103c3cc4870e
10c4c4c4592b2b002b2b3130015d005d012b2b2b2b2b2b2b2b435c58b900
0bffde400b1939012219390e181b3912b8ffdeb21b3913b8ffdeb21b3904
b8ffe8b61b3908221b3909b8ffc0b21c390db8ffc0401f1c3913401c3903
401c390d0e16173c131216173d080916173c030416173d0bb8ffde402e12
39012212390b0c1d213d01001d213c0b0a1d213d01021d213c0b0c13173d
010013173c0b0a13173d010213173c2b2b2b2b2b2b2b2b2b2b2b2b2b2b01
2b2b2b2b2b2b2b2b2b2b2b590171015d7133010133011617363701330101
23012627060701090237fe0ce7010a532331430127d3fdfd022bf0fe8f1f
213115fe9002fc02befe88753f50570185fd4dfcf9020b2d35501efe0100
>ArialMT AddT42Char 
2 2874 60 <000100060000054605ba000c016ab608093a03043b09b8ffe7b312173408
b8ffe7400e1217340419121734031912173409b8ffd8b318213408b8ffd8
403b182134042818213412260429082a0a2f0e0468016806680bde060405
040303060807090606090603090a0c10025509200a0b140a0a0b06030609
03b8fff640160c1002550320020114020201060c0b0601030200010bb802
1940090a0a0903020200080eb8021840090c0952400a800a020ab801b540
0d0b0b0c200003524f028f020202b801b54009010100141010025500b8ff
f6400b0f0f0255000c0d0d025500b8ffe2b40c0c025500b80218b60d0ec2
2160a8182b2bf62b2b2b2b3c10f45ded10fd3c10f45ded10e6003f3f3c3c
3c10f43c11121739011239872e2b2b087d10c405872e182b2b087d10c487
0ec4c487100ec4c44bb017534bb01c515a58b4080c090c04bafff40003ff
f40138383838593130005d015d435c584009092219390822193904b8ffde
b119392b2b2b592b2b2b2b2b2b2b2b2b2111013301161736370133011102
3bfdcbec01215045425e011ce2fdb7026d034dfe467c7c739001affcb3fd
9300>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/X 59 def
/Y 60 def
end
ArialMT /Encoding get
dup 88 /X put
dup 89 /Y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OIDHLO+ArialMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 30{/.notdef}rp /X /Y 
166{/.notdef}rp]
OIDHLO+ArialMT nf
OIDHLO+ArialMT*1 [0 -18 -18 0 0 0 ]msf
237.78 328.655 mo
(X)sh
148.5 403.116 mo
(Y)sh
188.221 349.656 mo
(X)sh
%ADOBeginSubsetFont: PBAAAA+SymbolMT Initial
ct_T42Dict begin
0 -0.219 1.109 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+SymbolMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3259acef4f000000cc000000566376
74202ac4fb8500000124000005046670676d5d3ae803000006280000059f
676c7966ca80901c000016800000025c68656164d4aa408900000bc80000
0036686865610fa0038100000c0000000024686d74787750493e00000c24
000002fc6c6f636149c1493000000f20000001826d617870021906370000
10a4000000206e616d65a95901d4000010c4000002457072657056a9a53f
0000130c0000037367646972000000000000000000000000000104cd0190
00050008059a053300000125059a0533000003a0006602120c0305050102
01070602050700000000000000000000000000000000544d43200040f020
f0fe058cfe460133080b01c280000000000000000000055d0031054c001f
054c001c0394001b0000ffe10000ffe10000ffe4fe59ffed056b0023fe6a
ffdc270f000000b4000000b4000000000000000000610025005e0029004a
00c200f000be012a005000c0ffd0006300580277002d004a008f00b700c0
00de004400640002001a017c0020ff9c008c0026008300a00039041affb5
004c00e8080f00160024003a016f000600150067009e01dc0049004b002d
003b00470089007200470051006700f7013801dc0001000a005d00610094
009b00be00ce00df00190026002e00d6010701f7ffbb004300530063007b
00b900de0542058b0013009100a700a900c100e5012e01a401ea03eeffb5
ffccffeb0026002900310036005b00620062009200a100a700a700cb0223
03a3ff1aff7bffa8ffc8001c004400ab00b400c100c500ce00f601200156
016302a60379fefaff6effab0000000c00150024003a003a0041004c004e
007400a500ce00d600fb0109010901820220023f0263fe11ff170007001f
0020002b00530055006d007e0088008d0094009a009f00af00e8013f0168
01cd01ee020d028002bf0550074e074e09bffdd5ff47fff6000c000c0021
00290057006b0078007e009200930096009a00a100a500c400c400f000fd
0136013b013e01490152018f018601a501f8022b02db02fb030e030f032c
03590360037c03e203f90805fd4ffe97fed0ff50ff78000100010006000a
0025004300440054005c007000730077007c00800088008e008e00900091
00ab00ab00b000b900bf00bf00c300dd00e300e300e600e800ec01020105
0109010a012a012a01300130013b0140014a0155015f01670173019701b6
01b801be01c501ea01f4023402360239024f0252026702700274029002b0
02b102bf02e402f302fb033a03450373037f03ab03c203c803d203da0400
044a046104690475049404b004d504f004f404fe050005230523052e0561
05a0fda2fe4bfe5bff26ff3bff62ff8dff90ff90ffe80007001e00250026
002700440050006200630066006700700070007100710079007e00850091
0096009e00a100a100a500b600b800bc00c000c200c500c600d000da00dd
00dd00e200f700f901000102010501150121012d01310136013d01470147
015a01680176017c0180018e019a01a501b101b501b501c001dc01ea01fe
023902560259025e0276027c028d0297029b02b902c002d602db02ff0306
030f03180347034b0357035b035e0374039603980399039e039f03b803c0
03c60402043a045004720483049004a204af04c704d304dc0530053b058a
058a05b005b505bd05e60612061b0634065306b80706087908e708fe00b3
00c700b100b5000000000000000000000000000000000188011001b100ad
01e70304038002cc0258020b02d6018204cf01270274023c0100058e006e
00f202c0021d01d2023701570363015a002500820166015b009d031c03a2
034a00cc056e0153035001640053049700fc05c30061058a02b20302058a
03fd01f902ab0068008e026bfda9ff59010e005301a402a600ab007d003c
0029041a00d6023904b90125022902bf07ae01b8003e07060339033a080f
07ae01a403e300000053080f01ea006103e2004c00e102a6035202a6080f
00e601dc074f006e00fd03af0000007d003e01a4fe1100a905590260011c
02a4014cfd83fdd8039bff9f011902e20000fd11fd41024301b60155ffaa
02be00ef0097fef904e000be02db005501dc0063006b007800f200530077
003a015600fc020d00290053006100704040543f3e3d3c3b3a3938373534
333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a
234445b01923442d2c2045b00325456164b050515845441b2121592d2cb0
0143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0172344
2d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0172344
8a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c
2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0018559
2d2c20b0032545b019234445b01a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a5458
2321b03f1b235961441cb114008a5279b31940201945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4bb0
6451584569b00943608a103a1b212121592d2c01b005251023208af500b0
016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510
f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802
4123701020b802414520b0005058b00161593a2f182d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2cb4000100000015b00826b00826b00826b008
260f10161345683ab001162d2cb4000100000015b00826b00826b00826b0
08260f1016134568653ab001162d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d000001000000050000a0cfc00e5f0f
3cf5081d080000000000a348bc3b00000000c1473905fffffe3e08e7080b
0000000b000100000000000000010000080bfe3e00000856feabfc2e08e7
0001000000000000000000000000000000be04cd00670000000000fa0000
0200000002aa00e405b40061040000250464005106aa0047063900480383
003a02aa005402aa002d04000091046400250200006e0464002502000091
0239ffff0400004a040000f00400002c0400005304000020040000620400
00590400004c0400007c04000051023900ac0239008b0464003c04640025
0464003c038d00580464002505c700140556002205c7001204e5001a04e3
0027061b004804d3002305c7002602aa0033050c004e05c70025057d0014
071d002505c7ffe805c7004c0625002305ee004a0473002604bc003804e3
003b05850016038300470625003805290042065c002504e3001602aa00a7
06e7016a02aa004a054400250400ffef040003da050c0054046400790464
004603f4004503830049042b0047034affff04d3002d02a2004304d30045
0464001504640031049c007c042b00280464005804640037042b00590464
006904d3004e0383002b049c004705b40041057d005003f2005b057d002f
03f4005b03d700d3019a00a403d700d60464003404f6001301fa00790464
003c0156feab05b4003604000000060600b906060130060600f7060600f6
0856002907e5004b04d3005d07e5004b04d3005d0333006604640025034a
00690464003c0464007905b4006603f4004103ae006a0464002504640025
0464002404640034080000e604d302390800ff8d05440020069600e4057d
002d065c005e07e501820625004e0625004e069600610625004d0625004d
05b4003805b4003705b4003b05b4003b05b4003a05b4010a05b4010b0625
005305b4004a0652006306520063071f00320696002e0464005402000091
05b4003004d3003004d300300856002907e5004c04d3005d07e5004c04d3
005d03f4002f02a200410652006306520063064a002a05b4002b03120053
031200530312005303120000031200000312000003f401a403f4001c03f4
01a403f401a40652007502a2003e02310000057d02a6057d02a6057d0043
0312ff930312025d0312ff9303120023031202810312002303f4001c01a4
001c00000032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200c300c300c300c300c300c300c300c300c3012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e012e
012e012e012e012e012e012e012e012e012e012e012e012e012e012e0000
0001000000c0006700050000000000020010002f0055000000ee059f0000
00000000000a007e0001000000000000005c00000001000000000003000f
005c0001000000000004000f006b0001000000000006000f007a00030000
0409000000b800890003000004090001001e01410003000004090002000e
015f0003000004090003001e016d0003000004090004001e018b00030000
04090006001e01a9547970656661636520a920546865204d6f6e6f747970
6520436f72706f726174696f6e20706c632e204461746120a92054686520
4d6f6e6f7479706520436f72706f726174696f6e20416c6c205269676874
7320526573657276656450454b5048472b53796d626f6c4d5450454b5048
472b53796d626f6c4d5450454b5048472b53796d626f6c4d540054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
500045004b005000480047002b00530079006d0062006f006c004d005400
52006500670075006c0061007200500045004b005000480047002b005300
79006d0062006f006c004d005400500045004b005000480047002b005300
79006d0062006f006c004d005400500045004b005000480047002b005300
79006d0062006f006c004d0054000000b154124114022702270226022600
6f01160001005f01160001004f01160001003f01160001002f0116000102
2fb22f1f1fb8022eb2a01f1fb8022cb21d291fb80224400be11a1f312712
1f3c27291fb80217403b6c291fe0aa191fe1aa191fab27321f883c321f83
3c321f2f3c321f7627321f3c27291f27aa291f6f276f6d6f866f87043700
161600000012110840b801e3b655140914093790b801bf40390790bd0790
b307906707906407905707904607903607902e07902b0790250790240714
08120810080e080c080a080808060804080208000814b8ffe0402b000001
001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b5342014bb0c063004b6220b0f653
23b8010a515ab005234201b0124b004b544218b0382b4bb807ff52b0372b
4bb007505b58b101018e59b0382bb00288b801005458b801ffb101018e85
1bb0124358b9000101ff858d1bb9000101ff858d59590016763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b4b5079bc
001f01750007001f0174b3071f93072b2b2b4b5379bc0090017500070090
0174b3079093072b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d59
01b341b5407b456523456023456560234560b08b766818b080622020b140
b54565234520b003266062636820b003266165b0b5236544b040234420b1
417b4565234520b003266062636820b003266165b07b236544b0412344b1
007b455458b17b406544b24140414523614459b9004e0162b12a8e456523
456023456560234560b089766818b080622020b9002a01624565234520b0
03266062636820b003266165b80162236544b02a234420b14e8e45652345
20b003266062636820b003266165b08e236544b04e2344b1008e455458b1
8e406544b24e404e452361445945695342014b5058b108004259435c58b1
08004259b3020b0a124358601b2159421610703eb0124358b93b21187e1b
ba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400
0400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8040000
0b2b59b0102342b0112342002b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
7373737373001845694418456944435c58b9ffc00280b2121f322b592b00
00>
[605 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 100 77 <00020000fe46044a03af001f002c009a4023560a012508296c0418441717
040700d620d60e0e0b0b0d0f200b0b0c000e0e0d258807bb01f3000c0018
0105b5010d2c0c830dbb01f30012002e0105b3071b2f12b80105b32d2a68
182b10f6ed10e610f4fd3c103ce610f4ed103c103c103c103c003f3f3c10
eded3f3c10ed10ed31304379401a262b020627262a032c2e002805252501
2b02292e0126062925012b2b012b2b2b8181015d25113436333212151406
06071123112e0235343e0237150606151416171617363736363534272623
22061501e7756998ed81cea76d99cd8155767d5b5a8a5e472ec2653e565a
5b42552b361c02789982fef9c483f9770dfe62019e0d78f6836fbe6e2f03
2607bed097d53522130b2431b980b577564b7a00>PBAAAA+SymbolMT AddT42Char 
1 0 0 <0002006700000467050000030007003b401e06076302010005046303000a
0605630303021a09070463010019082938182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c31303311211125211121670400fc2003c0
fc400500fb002004c000>PBAAAA+SymbolMT AddT42Char 
PBAAAA+SymbolMT /CharStrings get begin
/g77 77 def
end
PBAAAA+SymbolMT /Encoding get
dup 32 /g77 put
pop
end
%ADOEndSubsetFont
/OIDHLP+SymbolMT /PBAAAA+SymbolMT findfont ct_VMDictPut
/OIDHLP+SymbolMT*1 
[32{/.notdef}rp /g77 223{/.notdef}rp]
OIDHLP+SymbolMT nf
OIDHLP+SymbolMT*1 [0 -12 -12 0 0 0 ]msf
192.66 337.655 mo
( )sh
OIDHLO+ArialMT*1 [0 -18 -18 0 0 0 ]msf
161.04 444.875 mo
(Y)sh
OIDHLP+SymbolMT*1 [0 -12 -12 0 0 0 ]msf
165.48 432.875 mo
( )sh
213.3 364.295 mo
214.14 363.635 li
218.251 360.261 223.514 358.55 228.78 358.235 cv
229.98 358.235 li
229.98 359.015 li
228.84 359.015 li
223.725 359.215 218.657 361.02 214.62 364.175 cv
213.78 364.895 li
.750179 .679652 .670191 .901488 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
OIDHLP+SymbolMT*1 [0 -19.98 -19.98 0 0 0 ]msf
222.36 354.995 mo
( )sh
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if

1 0 3 <> ArialMT AddT42Char 
1 2430 11 <0001007cfe51026005d30010003d400a270f0100101207081010b80133b3
009f0e08b801334011079f0e5e0003100320030303ac119d8c182b10f65d
fdf6ed10f6ed003f3c3f3c3130015d012602113437363733060706070615
100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd059
8a96bbbdfe1ffe20>ArialMT AddT42Char 
1 2558 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>ArialMT AddT42Char 
1 11694 44 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>ArialMT AddT42Char 
2 4240 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>ArialMT AddT42Char 
2 4962 69 <00020086ffe8041f05ba0010001d0180409b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b1824d00b01100b400b60
0b800b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02
550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8
fff4402f0d0d06550b7401113300040c0c025500040d0d06550033032502
02c001019001a001b001f001041f013f014f010301b8fffeb41010025501
b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b0255010c0b
0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c06550114
0d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71723c4d10
fdf42b2be410fd2b2b2b2b2b2b2b2b5d71ed003fed3f3fed3f1139111239
3130005d015d7172007121231133113633321e0215100023222703141716
333236353426232206012da7b472b162af7140fef2bdbc6b0234559176ac
a57576ac05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>ArialMT AddT42Char 
2 6312 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>ArialMT AddT42Char 
2 6758 73 <000100130000028005d30017010d401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040281a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff134004172504000302920101
00b8ffc0b331383400b8ffc0402b1c1f3490000119400f0f025519400d0e
025500141010025500280f0f025500220e0e0255002c0d0d025500b8fff2
400b0c0c025500140b0b065500b8ffeab41010065500b8ffe6b40f0f0655
00b8fffab70c0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b
2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced10eded5d003f3f3c3c3cfd3c
3fed391139313043794014101106090706080602061009121b0011060f1b
012b012b2a8181012b715d00723311233533353437363633321707262322
06151533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b3446
57129d0a4660628cfc66>ArialMT AddT42Char 
2 8014 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>ArialMT AddT42Char 
2 9454 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>ArialMT AddT42Char 
2 10014 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>ArialMT AddT42Char 
2 10468 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>ArialMT AddT42Char 
2 11370 84 <00020048fe6903e0043e0010001c0136408e0b022b022a183b024b02790c
063f153f194b19901ea01e053413341b3f1e4413441b5313531b6313631b
601e801ed406d512e606e90cea18102902220c2b153902350c4902460c5a
026902d90cdb18e316e919e61bfc020f01040d141a1c0b070e06141c040b
000e170e3300251010d00f01100f400f600f800f041e400b0c02551e400d
0d02550f12101002550fb8fff440110f0f02550f060e0e02550f160d0d02
550fb8fffe400b0c0c02550f16101006550fb8ffe8b40c0c06550fb8fff4
403f0d0d06550f741124bf07cf07df07ff07041f073f074f070307240b0b
0255071a0c0c025507220d0d025507160c0c0655071a0d0d065507191d1e
74213450182b2b4ef42b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d
713c10fdf43c003f3fed3f3fed113912393130005d015d71007101110606
23220011343636333217353311011416333236353426232206032c2a9755
bdfeef6fd37ec571a2fd21ac7873a6af7675a3fe6902083b4e012e0107a0
fe83a68efa4303adcdcdc3c7d4d6c700>ArialMT AddT42Char 
2 11776 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>ArialMT AddT42Char 
2 12038 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>ArialMT AddT42Char 
2 12974 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>ArialMT AddT42Char 
2 13266 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>ArialMT AddT42Char 
3 4048 131 <0002008003a802ab05d3000b0017003bb9000f028db5000901098315b802
8db2030112b8028db50f060106830cb8028d400920000100ac189d79182b
10f65dedfd5ded003fedfd5ded3130133436333216151406232226371416
33323635342623220680a37274a2a37372a36d634645636345466304be73
a2a27373a3a27446636346466363>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/I 44 def
/a 68 def
/b 69 def
/e 72 def
/f 73 def
/i 76 def
/m 80 def
/n 81 def
/o 82 def
/q 84 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/degree 131 def
end
ArialMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 176 /degree put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OIDHLO+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /three /four /five /six /seven 
/eight /nine 15{/.notdef}rp /I 14{/.notdef}rp /X /Y 7{/.notdef}rp 
/a /b 2{/.notdef}rp /e /f 2{/.notdef}rp /i 3{/.notdef}rp 
/m /n /o /.notdef /q /r /s /t 
/u 58{/.notdef}rp /degree 79{/.notdef}rp]
OIDHLO+ArialMT nf
OIDHLO+ArialMT*1 [0 -18 -18 0 0 0 ]msf
485.22 440.735 mo
(rotation)
[-5.99747 -10.0116 -5.0076 -10.0116 -5.00757 -3.9996 -10.0116 0 ]ysh
OIDHLP+SymbolMT*1 [0 -19.98 -19.98 0 0 0 ]msf
485.22 375.755 mo
( )sh
OIDHLO+ArialMT*1 [0 -18 -18 0 0 0 ]msf
485.22 358.715 mo
(of qubit II measurementbasis \(\260\))
[-10.0062 -5.0022 -4.94281 -10.0062 -10.0062 -10.0062 -3.9942 -5.0022 -4.94278 -5.0022 -5.0022 -5.04361 
-14.9921 -10.0062 -10.0062 -8.9982 -10.0062 -5.99203 -10.0062 -14.9921 -10.0062 -10.0062 -9.90356 -10.0062 
-10.0062 -8.99817 -3.99426 -8.99817 -4.94281 -5.99207 -7.19806 0 ]ysh
.242466 1 1 .25098 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 13668 49 <0001009c0000051f05ba0009017db1120bb8ffc0400a13153408180c1602
5503b8ffe840210c16025508020303200708140707080207030308090402
02090708040320060605b8ffecb40f0f025505b8fff2400b0d0d02550512
0c0c025505b8fff7401a0b0b0655055d200b01200b500b600b700b800b05
0b0809200100b8ffc0400d13153420000100201010025500b8fff6b40f0f
025500b8fff6b40d0d025500b8fffa400b0c0c025500040b0b065500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b2b
2b2b5d2b3cfd3c105d71f42b2b2b2b3c10fd3c003f3c3f3c123939011139
3987042e2b877dc4b10602435458b90003ffe0b70c113408200c1134002b
2b5931302b2b012b435c58b40840463903b8ffc0b646390840323903b8ff
c0b632390722193902b8ffdeb619390722323902b8ffdeb6323907222339
02b8ffde400b2339070e1439070e133902b8fff4b61339070e1d3902b8ff
f4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b012b2b2b2b2b2b00
2b2b2b2b59331133011133112301119cc70302bac7fcfe05bafb81047ffa
460480fb8000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/N 49 def
end
ArialMT /Encoding get
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OIDHLO+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /three /four /five /six /seven 
/eight /nine 15{/.notdef}rp /I 4{/.notdef}rp /N 9{/.notdef}rp /X 
/Y 7{/.notdef}rp /a /b 2{/.notdef}rp /e /f 2{/.notdef}rp 
/i 3{/.notdef}rp /m /n /o /.notdef /q /r 
/s /t /u 58{/.notdef}rp /degree 79{/.notdef}rp]
OIDHLO+ArialMT nf
OIDHLO+ArialMT*1 [0 -18 -18 0 0 0 ]msf
416.64 99.6361 mo
(N)sh
OIDHLO+ArialMT*1 [-18 0 0 18 0 0 ]msf
348.42 206.255 mo
(100)
[-10.017 -10.017 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+SymbolMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+SymbolMT gcheck setglobal} if
1 390 86 <00020000ffe1045c0394000f001c00794020320801101b151012d300013c
0f0e061832070b1b2f04bf001a1e152f0a191d1eb8014eb3212a7c182b2b
4ef44ded4e10f64df4ed003fed3f3cfd3ce6390111123939313043794024
131a050d0c26130d152500170815250019061b2501140b12250116091825
001a05182500002b2b2b012b2b2b2b818101211616151406232200353436
36332105262322061514163332363534045cfe40979cf8d0dbfed47ec1c7
0256fdf52a16b3adce8d769802fd54cc869adc012ad37fce699701a092bf
e8a99fe6>PBAAAA+SymbolMT AddT42Char 
PBAAAA+SymbolMT /CharStrings get begin
/g86 86 def
end
PBAAAA+SymbolMT /Encoding get
dup 33 /g86 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OIDHLP+SymbolMT*1 
[32{/.notdef}rp /g77 /g86 222{/.notdef}rp]
OIDHLP+SymbolMT nf
OIDHLP+SymbolMT*1 [-18 0 0 18 0 0 ]msf
313.441 206.255 mo
(!)sh
117.6 114.756 mo
94.92 114.756 li
94.92 113.256 li
117.6 113.256 li
cp
100.56 118.115 mo
93.42 113.975 li
100.56 109.836 li
100.92 109.655 101.4 109.775 101.58 110.136 cv
101.82 110.495 101.7 110.915 101.34 111.155 cv
95.34 114.636 li
95.34 113.375 li
101.34 116.855 li
101.7 117.035 101.82 117.516 101.58 117.875 cv
101.4 118.235 100.92 118.355 100.56 118.115 cv
.265019 .809232 3.0518e-5 3.0518e-5 cmyk
f
.06 lw
65.76 541.835 mo
64.8 540.095 li
71.46 536.015 li
53.76 531.455 li
53.76 521.135 li
1 /0 /CSD get_res sepcs
1 sep
@
65.52 541.955 mo
64.26 539.615 li
69.72 535.955 li
53.4 531.755 li
53.4 521.135 li
54.24 521.135 li
54.24 531.155 li
71.46 535.535 li
71.46 536.375 li
65.4 540.515 li
66 541.715 li
ef
OIDHLO+ArialMT*1 [0 -17.0257 -17.0257 0 0 0 ]msf
70.14 551.855 mo
(22)
[-20.8769 0 ]ysh
.265019 .809232 3.0518e-5 3.0518e-5 cmyk
OIDHLO+ArialMT*1 [0 -18 -18 0 0 0 ]msf
82.5 127.896 mo
(22)
[-10.017 0 ]ysh
OIDHLP+SymbolMT*1 [0 -19.98 -19.98 0 0 0 ]msf
82.5 107.855 mo
(!)sh
121.74 123.216 mo
145.56 123.216 li
145.56 106.776 li
121.74 106.776 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
369.84 577.175 mo
369.84 543.395 li
136.74 543.395 li
136.74 577.175 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[0 -1 -1 0 630.752 442.217 ]ct
[33.78 0 0 233.1 -134.958 260.912 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 103 
/H 712 
/M[103 0 0 -712 0 712 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 103 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 103 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 103 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 103 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%U
JcLB&JcLB&JcLB&JcMkP!!<!'!!_?]_uKc>q?I!)a8juq!!E'&!!]Y-O8o^m#6l`>P`CieOd'bk"T\f/
WW3P4"U6/rIsH?dH[f3)"U5%o!5JRF"9o&SG^apaH@(*G#R(D6df@kt![0*=rZhLo"h+L'!!`T.#Y',W
R(iI4#Io(sD^,;d!jDY/"9\ogAQj`cXo5@,Wb,F<)Zg-DYQ+n1!sU_s>CrmPWs>J5>?i*K"9S5r\,ZU=
">]$7jo_st"9mHYf)Q0Z!"D\&=096P]VhV)V@06*^V@IB5?B]C!!1.@mf3^r!!thU7@UE]X-AbFP6$f=
riHBM1.<Vm!!0M."T\T15"%mER&d9dOcKC%$]^dYX/U>"7k"H=!O)P-H0489>ZC])#$+]Zk2tGBq#Ir*
$5b`SA\Gjn]!8Z-q>^mVYdUpP^V?m)/hdUq!7:cR&hG5(XKAV*TV[/7!"1'EVPL;qXdg[^,mVcskl;&(
/L+2nX/i.hTmlh<$RM@<TW+umR3j4,#Ijd5!!`PZk2sI?V^hKB#(rnAgZIXE\,[!?)^$;e^V@Fm]!Z#J
#6jr("Tel0%\($8]"Gbl\lTXk&&/)S!YcLiIBBWQX/i'm!!NN%!"K&7!t'gaWiN5'W^RI<$h=;C!"K&F
)&dq(X/W"pThtdo"o83/!X8`7KrClIWiN'g&K;,3!9*t`.H]dH^qciKo)JtT`4sRUk/b7:%L*OX/$HXr
]"5MX/e9$1oDf!q&fh^*rjrEG]"<e2&e4u_!"K2C%3V7DWN3&"T-F^\#P\;t!"T/A((XTLWiN/#X)\XZ
$3J3I"pPMG+If@+rhosj,n(UqoDfC(%2KL[W2HPjVl+PE%1<79!6,!CJCV6JaN]A(!!`\Pc,RK5`YdY7
jT#bs%hN-UZ*M!S]9Fg-/HY;>%M(TY:9_FD\?N96/.E'mciF"E%L3@M9r4MVWiN.L+>4o@m/RV(/h0&X
XK/=mU6$Q*$3fSmjo>kr$Ofe(SXuaXVgfgC,6R<5%Las=5+S[OUn"$9+pn\]cN*hB#6C<PP0;4q/`cs:
L=OS\JWs$U!"K&:#oA>pT!>uB\opt\./*`2!"K0$AQbV;]t:27U0%[.#L`Y_!s]&CEL)KTXK8I26;ATa
!!WTc;+HMFX9YbiMiU=3#R/ZW%Kcq@&TEnhSZ/Te@ma$5jo>kp2cE;(WMueXLl=k/#R9f!hZ*ru@6fb*
gVO3r!TO.c!<>C=gW`ti9%<q@!"K,:#;2$rP.86?Y]bJ4$f:po07nM0]"bq\Kog9b"U5%^!"K,8"XA;:
IAs?MTODP<#l=V`!"L8jATt/VXIF-S>mgf?!nmVa"9o&TG^"S4Wi;P!Bj1o(!;um--#I7<W2lnbDgG[s
"U5%Z!!sek.D=WpL'S4kh#I`o$R!OQgNaJY"o&)X!"K#3!shPFCR`)R]r$s]=4dK_%YC79[(jAdHu!RI
!<WDd!;ca+!<`N04ChKJXf\[gI"b#A!"K?RLOZ,%Xf5r7=rm\I!oX+h!<WE.4_.WJX/i7^H\Fuh!8@J`
$Z1WJTrY5jBNSI[!<WDY!!il43TfJZ<[Kce!:g*r&jIt8k2sAc!sIK]%06G>:f18u^V@CXW1bE`!!WL4
Xer>;^B_H:5?0TC!!23^%06G:5X7`1Xf\XgQAlj3!"K')S<KVJXfR"-6n8<=!V$0`!"Ar/$pd3LSZAfi
OckVAdJsaY:7737X/i4K1IWeq!!2!X#)hX+cWXdKci=:OH<>pak1_HH!!E<@3%JkF^B;'Q[uTSNjT#Z=
XgkaO^V@'4.kh=p!!E<:/0J-qXTPSsW-QYgr;[3JS>i?dXf\9I+=.<X!!E<:/Ke9sWro5jUNsu^$Qtk5
TrG)nSgtp1#l+Jf!!!0$jo`A]X<Pad#(!PDgZIX]jo>Yg(n/4Q]t1ea"'Ya7#Kd#T!X])CQb0i@]t_0d
#O;?m!YU3hXT#7'W(?sq"ml<H!!EB0"V$%^Ws#N+X%W]_!"8oBKr_2PW2QI`!"&q\!;6C$!sf&>J>]?E
WN2pk#3c*l2s/lH`58Um!!k6t_Tgit`W-#)!!s(!^:LqY.Ms?8_uL)F'-eE0]=Y_c=6fhe$@rGaWiMU3
&fV%n!!E?6)\c<OWr]1glMq4tJ?#QHQlm%]#4V]C!!r];)\c;MW2ZR_l2Ur>hoO&feH"e5"9HNedBVs:
"V7?$/jh8)!!WE55<E)NFmB#2$]g8l2']a6"U["<8Xa)W!;lg#%#g)h2C6!9"Ud+?8sj&P!!,banGpN.
!HA>0!!3?l0A-?^!!3Hn/F*9;"uR[B!;6Bo#;dXj!!3?_-+3dT#;dY!!.k3U!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3P!<3,R!5nj<!<U(;gAh3TW;qtZ#6PDd/eeQn
!W2qq!!`W2'G^rX!s.H_^AnH?"qV:M"TljIYlMT?#m`bH]Y]qR6QZHT!8.>Y"uB_GPAO8S%g00=nGik!
+&?]g?UPnA"/5c!">)A>!!&bo$O0>_`4ECc^[/Eq#4)?%!"/ure$H3[Xg[)@.L"<%df9aZ-#TKWWN)V/
>9=!\!9jIgCY[q(h:-HaU]:EMg^:s-MK<rlT#/u\#c@Y2.+5E&\Yl@@]<]UO"nVf%!"9Z]UoUYqX/i%h
D(5_E!6Y?KBA;(7<a_H/a^W*ej8]WU_7P@X%M^<TD2Z>U$`sF,!"CciWf0%T)_+!q_oYm^VuR8]UoUgk
&KE;oM4K&\#Q+S'!!:a*;Z$Lr)juB=!6"p?5eOKnqu?m'2M.lK#0d/(!!>*[W]U+Y"U[JTUg+,3!;-<o
1odQHqu?m06D:>X"/l2#gVWad!(R'_"K2;'/<?r)"8`'#)1JPXli=a""=gFO3s5?["!!&n4k'J_!!Fjc
X>L%U!!=dKM&a/.m/R0`]_DI-4D1Sm":&(nVE4hj"TnW&"!*l4!ic5*$"UZ9,R+APr;ZpCSsocQ!4Mq4
$uVtO&I&C9!!4^1D;,'9!!3>(./3cC=>dtrjo>o!C8e[s9dU/K!<<F>QRDm:!<)s/%Y)9mCc;n/"9AK-
<dkneWW3P8DM<1.+:\PW!!!71JIV_Y!3Q;(&UmFZq>^Nu0&clP!"]\r%Q\sG_jkU7-4BnZEME]]!8mhg
$mc6ER)5tK=>q$!!!c_X"ge:)!"]AK%U#TUB4FFW$j?V@<a#X(!!H&@5SaG!!!!-%'rq<H!CO[R!":G_
H(E3`EAeemWs@qj_>k/K2msk0%524V\AEqq.2$Ne"k*J*!"f5Y?kiYR3d[cdB3@YD%;1k0l2\X#!':&Y
":.\S9Gma/!>0"m!8@Je!CjM!"98E((H5QCN52m?XWe,T]E%O''*1(i5Qh&e#9,O.MQ=RZS=:B"!j2M0
!BQK-!rr<.*BORBT;?L)Kp<;U!iuA%Mu!DX"?M'=).%1L!4r46'7%&U!rW*-!Z+%.HCDjgK0U4^"l97.
!!EmRW&FeV!"9&P4^N`:[B*LV&I8KY!:'Uf)1m)W!rW*-$RA)KLUEUQ4!4h5"0V\))$!V1!!NNQT>W2[
WrN8R^X>1Jq>^g4LUW+uT!j_R'E/!<!!FaY_(>fd!!sNpXbr=AY&#NojoER)">H'X('OL7$3q`'UOJDe
@QY_:c2ci(!Mion!!Xgb01Ke8"1/(*!#5rn_9lR.#R(81!X($XSJ<ktOeSIYYQ,7BEji_L$O-_7!!*3:
LQicDGls7uQs-]o#7Z-QFY=%)"9&9-!YKCE/Oai/LQ>="!5ed<)p2mi!!k/i!!!]j;HX%N!8@J_$%otE
Wdmhl+XB[i_0c.]!sq#*=1nV*!"BBcYJ5g'1(k*00TW2SrW!$07Y"RD!!s:*Vi,=\*Xi>]!ukgHL].8U
*ERtqXoJSZfVU"uqu?dJ[N>>H!?M:6!4r4>(4iNscel+2Ze`QW)#F:5!o*e)!"9ciY-P[OM1:>m[@/99
!!!)=!:0[i![`u0V3uQ,D$,!TV_e2M!!TJ)!%8/sh9'Ob,qE`\Br(e:#?cqeZ+%6PYEW2]!4)Y.$tulE
Xo>L*XfYg^!6Y?L&8.iEX/N"rXKYaC!9*tb"cC=Ohr3JBT`M1oq>^g'+&d*+Mg]7n#,D5*"<CX.ZaR/j
0*_7QWrNG//97AYUo0ML#N>a"!!NKdEfbJia8jln"T]#M,T@#n!:^$m"qVb"*"/D>#6kbZ-6<Tr!.k3&
!3lNU!.k3&!.k3&!;ZZr!<V'W!s&]A"iLE@!V-6W!!<6*#m6^u!<`T,"+pU.!!3EI#i>Ub!>fF+(X`<T
!!3<6"lB:_!=M;1&]=YN":>;.!9F1_#W?$$U&b&j!"?dG"9Ba47g7iO"U$-4ik$Q-!7_&P!>o`*"Q9=a
"<26iWZ9[lm/R7i'O)[_i;a#`&P@kR*Q%jX%fkGd!X=po_uKrA35F$E$gRfg!!X$2\]hgs+iOEb!A(=L
4UU3L"pcrY]WJ%Kp]/S>"T^3OG9d=O!!WTXAso]o)W1VV!!1AFhZ*a9bN>eE!<)s'!B.X.jcCbmk5Ybj
,a-fo^V@0"`;g,D.]fi(F:n]J!;$6s";k[SXfee&)8uR\!@b"GH:S\Pk5Yhj%SDh`WiMg3!!'t<"4Q.j
#ibmg"e+Q7k,7>Ah>dd<]t_D"`E3E2!!NE79#JlgrkAK>+O:&]!!asSXfnst1Bm%D"T\f_YI^e6XT>=<
_uL#kWN2toHmJpn!:Bgh"s[EArMosn)T)OXe)oZA:?;HW1W\MRjoDBu!!t<f]Y;.ueo_W.m/RLs.@%rj
_8!b![[%g!!7q2W,c\#LXff!-#m0Jo"U#TOXKo&.XT>C<ec>.=#q)^PX/i.H3!TNP!!NH8:m.WQri6+#
T,#6D"N09]k1frTkPtknPhk?]k2k9F_Z1#TFc3W@^Ved%57-cY!!r]n_U/:s"hqUKK1?*`!"'-R^9=Z@
Yel5C"n)En"uNNkr2g(&QU_5P!71]Q%sP=YX/i+S?Q01;!!EEG@@=.pWs#H,WCd?M!9X=e'!g3Pk1ugR
lMq2M^?"G=jl"-\_Z1,G!!5cFZG+)h`kus;!V69o!uu$taSrpW]sO,E*SLMW!"0*:VQ6f#Y-b!'&-;A&
"9T*.]=7dA"K\c+D(*7$$NLQ5Z)t(-WM+`$#P%it!X^l/TDbemWigq+^]4T?I+76>jO@B)!;c`s@b(J?
"6A+*'YXPS08$14^;%J@Q6HM*!!ETjS_(dY^BD3JLIVIA!65'H3/4Q<Xf\bFGT$\W!!EHQGep]bXTY`,
RnO(F!8mhb!C33ZWN3)!L._pWo`,*u)dJ5rrMp%+TMl<@!;6Bt4hok8k2`0BnGiV(U#,e2!oM((])VpB
?]qhr^BMom:_Wm0q>^X#)I^e0rkATM\"7OW])W0KB="eDXff=10aROS"9Js'X0_`+!i:#ar;aS4$5d]Z
WN3)"QXhWMp](Eu#rZ[prMp%#ZA^<q!7h,T#FjK1k2jT<o)Je`ec+\5jk6ILbQ.#1"%%UE^AbkLfTRN]
qZ$a)3Le^<rkATKWes.H\,ZV(Y,JE+Xf\\3AK1dK!!EHLF3(Q`XTP`"8-c[*!s:rhYPkL(N^jQ[qZ$a%
**\/rri6+#Xe#Pm$F^!?H-kX7k2i$8pAb7+UuMC9!oqF5klB!/$N_PoY.MH`^s0JH#Q=]3!Yo=q_S3e"
^:BeM*74cK!!<9MGc1MB"1tTY"o\K(!XqW'qlKpsG9+3orW!<-0V>SKX/i7f>8m_E!!E<02fGVmWroB/
M^>_1#:I@Fk2t^D/boAJ:YFh5k2tdZWZ&2D&.2-o[(X5i`Q;a,!XCWVe\hC$"M:[i5mZoZ`;gGY9<PCu
Xff(?6j`qt+FM/4rN-1*Sj<b9!8RVd'i_'1X/i4mE\n"%";k0qVZ*V!WiVgj&AJ5;!!`OafAu)Te6;bM
!YVHfroO:?a^;4O#rd:/]Y;.sc_N?(>Kat$^V@ImP%u,C!"K#hOfYXdY-50Z*Bg@)YPtX,XJ^.`!VHH+
!#>]$Up[5'Wi)%_&hA1%W2lu!Wk*g."Pj(,!"qc>h<!bTU_Ee/<mp!ik2k9j(;g.<!"'QTPdJ-=^Wj^C
`;[LS];^]X#d"(-*G,SQYH4k/[]6d?rN-1+P=Q.b!"(&sY,JD%Wg[sZV>dLuWiDgq&,H:4!!s!mfAu)U
_+o:0roO:?aB.:"b5_VG3J3q&^Bh`n^V@LlODu8]!94%]#!\3NriH4,Yl:a,Wi(4hYQ4P#!sqD^])J`:
Uo18oWiN[[.06CJ!C=O#jp0`$k2t^URi;8+WW3)2J@tco"2'sd!p0L"!!3^[Y5>='Wf0LSc2cPu!ZdH'
ql9h!RT'['!:^$i/`QZi!ROWc!8IPV%m68oqnE6EGp<F!!;$6m"s\EiXTPM0&-Ad1!sKQYWr&gsU]O^-
!i>qu*9-kX!P/L#!5AL:![!-PaSrp[]Y)"o^u)^s$Io..!!E?@?+.6AXU))4Xf\eKN&(XN!:Kmj!Y%P@
SGoPpWiE,#VhAD$"K;A'!b0I;#j1:1jQ>U\Sft*6":d`.d(oXq$au@n]=kto_rQ=g"nhr,!!NKUUVEq6
riHO8YH+e-Y-?Si$j5>dd/Xgb,$U>4WiN2#Xf\Y(X/`"84q@b8!9X=m.Dk'*k2t<s[+aX(jkFnZXoJJ*
*YaUX^qme#]X!,T5_>uI^V@Y&\P<O;!#>\N?*:B7Xf\b+R799(Z)k(1Ycj$;#lXh2!"Au<7usUIX/i8%
X%l<Yri64&VP8)Q"m,g-!"oBmi8Wn]jNCd.!)C_pk2kOF2Tu0`!"o>D7(^j_^V@IjQ#7`F!#fX2]DfPJ
`7]kd#.O[4!"o;:0r_abXf\\,Zu.)g!$?0[XT#=)Y/>/g"1/%2"s7*7WrB%,Wiq"/!!"9i^8e67"fnMD
4UM=t!!k0ehWEt]fW5ec!!3\$gA^49f5Ll[!6>-K"tP\N`k]@'];U9N"oSE0#!n6[]tV8!c)b(Z!SIJ2
!!NNB?`UW<riH:'QqRkc!!<KrN2ur["gYds1C4)u!;HO&!t\7eTW+umWjA[#%fHA8$WEXsWiN1sQ$4V[
[/^I9K@],Gjl"-[r;ccr#>3G+jlYF51q*Gf!Y.o9eGd2c]sX;K*Vf[C+GH>o^;%G"fSC[Qq#J;4"9Afi
T="Nu!iL#aq#CO@K"8%criH:-EZ,#<!87DT"X7EDri61%Wj%.1q#CLJLo[NSWs#AN6ONt;!:Tsh0":iB
"6J.,(A@e70#QH)k2tH<"hF[:"YG>Qa8WgT]q^;_7KW;a!sVkb[JmoD^s]>J#/(!>";Y=Z[f3B3XKJ*d
#58*"&8e/?riH=,^lK]C]`80;&5R_IrMp%+T2Q-l!!<jF[]f\2"K@Q$,6d<3df9FPHIi)X!oV+(oDepr
K@Kn_!oq$KcN*A5!t7i7ao9$X^:0bR)Y3q2/VUOCr4`;?('22N":.)MYc[o,"0SGB+S,R80SZa5rN-0l
4U_A,!!<?JAYT.("0/Yc.J*TB!Cic\!36%!"KI).#m%a?!@c:mjoa_uUDr_'!^XofroO7?>jh[>!!<[S
j2Cr3"MC^i5QpTW!srM%\,O,F^tbA1#29.A!!EO0fX%[YXTPc$70`8^!tAnOXT#=)Y.eor"N(3B!!l,8
U].:sWihsl$Ln)t&T=iNWs#DY:)3ud!9aCg!dEG]k2t^HA*s<u$*`+^joXV7$GZWJ0YY?;^V77LBcQO@
$jT1P[(O/g^rX>r&d#uO"!k"PY5YO)VKO!O!;lg"#=t5]Y5YO+[Ac1o!lP'F-)@K>X/i8-N$[ll$jot;
XK&>%Wh"&["p+T$aT)R]i8s+_g8Z%V!!crXj6#LacUcsoiW'6A]t_=nWeWkHli7Co+`3FO]t_=tc^,0c
!;ZZr.BNNN"0S+Z%.!rt![;TkXfVN(!k!"S_uL&lWN3)"XJAf,q#L$e"9^<,Yc@]'"0%8S"iC<De)ofM
b$X?4#SX;ljQ>U]RL-k3"uX'.\WCSLkPtno7tI_S^V@V(+R/s]!!XmQXfSID,j542%8*"fXSo7$(X`<T
!!asPX/j$b,m<H4!tS)'Z2Ud*WK7n5!!L^3gSP\`!9jIf=3]ggk2;39!!P3j\rTbnjT#N0Gc8<h^U56'
!!OjRX.*,tjT#?1J>`CK!Mp\(!7UuP.B0A`CCK;)#;W!_WiE+n)VG,V!!Ca)K`^97"Z+'QjlWJZ!!<6T
Q'250!TO.a'PEf8]sT$&!!NBR\!/iVlN$_\"rUmLZ)jc>`;g&B.'0"9$KD*j-@)AcX.^I,!6bEDZ!-&c
":C4>jJUl8jo>Ja(L.a5!!G$+WO*kj!<)s#!?5hshZ*dESZ&>'`;fu@(1e]Z!:^$m"@&EbU`72O!!_6Z
!`7";rW'q<!<E8X!!<mOQm(Vm\,ZUEE/bg_!;-<l!o3hY+dSf@[fGRk!?5.4!!E9%#qH=Q!!3W]#jq\s
!!3`q%+YE7!!*-)r;`Jj!<NAb!4W"0!X%0W!!2]lJcP!7!te6J!hTGq!!t=j!O`!m!!3EO$_79e!!NBU
`Mb9kmJsQn"T]mHIi8I@!6Y?G!@!;&&HofJi;`mu(8Ls-!!`N_^Wa8k'Et32#6?<X[[oYh"SVnt!!`NR
Vk%ZS#R'#b_>jYjbr`iDgAhL:]YDD5SkB@jYlO@q#:Z^UZFGHH"eku'.B0ADLKY`&!!&bo"OZAeN"tFS
]Dqsi^&GbLa4GSd"OR5!!!+OMriH=3a&NcT\H(sr!@b#IWs#):9b%6"!!1R2"QnjtCBL:2!\:1^rP&HS
\OHnq!4;e.-)n!EXTP_`1^;V5bl@bjZi$j+ULG;J_#WNr!Pd^ojoNdQVZ?Yq";5aN\%M^T"N95@*X/GA
";H?aY-.c+"L?Q\%0HA+XoJS?PHh*eri60tDa=g6iW-pt""(>+jSn9Cgi!57!8[\c!=Ci8Tt.kO^VRdu
<"T2=!;6Bq!Y.2_[/R03Y->'e1CO;`!"8rA6'eXQWiN.tU1kkR#Q^e&#YMtfjlY[`aXZKS]Dr'N;2MBd
rkATSeseE#e,[tu$lr<8YH4k.Y-,Nf)?mbRli7)+?D[V$"feDQ<>,M4!!*.-#L22hk2k3W&Yf=7,^#0[
]YD4t`kH's!qcQ"!":?(WiWA*Xfo(#8.,IS!6bEP">#2<WiE,#W1S5e#Q_mEiW'6*V:t"mk2OKQWW;kq
%1#O^QasiF^Vnoo2@9K)!94%g%82SjY,nb-YePK,#6Ct-qZ$a3=-0P`ri60uK3&flV>po'3l9Y4k2tEX
&GcC,!"93@OK#h*^VIt+IO,-Z!5\^E(iPeEY-"h/[\%.M"3po#!"9ZYTWY8pX/V\85S!q)!:^$q#[t^3
jlYXM9EV$i!ul3A[/RfC^X92Y&Z,O1++1#criH=+^lg8TmJsct""Sf,YPtR*Wg%3K"P*S"!!4")df/A1
jhWR^!9aCc">GM3[JdiBfSCXPVuQu$#;gt1XSo7'Y$W+MVZ6i*9;AYkri61%Ma\$TpAhAs!^"-JroO:C
L]cH5`rHMV7=_YQ^;%J1\P4S+oIg8$-3`'&hZ*ch9TuQ]riH::VDB@d,Q];7"i135!"9QGX/i2"X/_Ff
.MENg'`o0_"LS47<6F+[k2X9,r;`\p#od9&XLu<`_91O)g]QEo\Jb/B^AnTA*bhs`XKAY/][6<!"4Po&
'ArlB!"/lUFJu:?X/VtWA7>+?!bGFBa8kT-#mu7)gud\PX&Dac;$'Wu.'imU"!hN]rkANM`5_Ae!$\cM
!sgGgV>dRuY-YP-ZidcV!!'G-!t-]&YPtR(WM?0YU&g>nk5`^+!=?:8joXVuf^mbrT?[Gu!!3Er\a@-4
[3<!Zr;Zm&0Vn*<!Mp[?!!36UTCAo\Wr\n4YlFckmH+DHm/Y6.#Qb;ZGJM,2^V93M!O*]t!9!n\!<j08
SGfPiY48RoV&?uIq#CR!"V*P:VZ*UrWq!+jUD^B<"p%<Ck2tddqqq2+!TBf^!"9#WFgBl?^V@LkQB77$
O91T((\IdG!!NH@;iei#riH:*\Xo;_ScY^H'&<QB!!NH85Bhs^ri6(!Zh)*;`Q+kl`;oB-#s+m@k2tdZ
^lj`NOoguH;VM3.!!E?B<2\CH^BCj!?8je83<M<'0F#Gqp&G3s$TEgRr2g+#Tm&gdog/aJ75Y=\!!E?1
.UnJ:WrfK+ErfKMoj.`-@S7':!!+1Gr8n(-EXV+3^]4KH32#?NrkATM[ASR%ciD\u"9^,p_R'3C"0AAL
.C]BI!!EKC=+R.EWrfMq5c"G`%uf9*joji.f<[<4!!ENQIFuU=^BD3PJ3OG0!4r4?";P+][]Q^7XfeXa
6jhKFdf9gZ%map%WiE,#Wir=#&\\80!!r^-d,a<Nk2XBPVuQo%*+-Acahbd-^V-q7A/(sB%0?r$Pd.Eq
Xf\\(Y%AOB!4Dk3!=LSjSYrIdWs#T,Fs-nA!6Y?K/&'p$k2taORL6n3kPu(o%R7&8`5'.&]t:"Z3!QA_
#64c1-%2r"Y5PI)Tm&I$VuR80(grf/WN3)"W48<^%/Bn+!!sRFg#V;XjkQsahZ1e!":-N,c,ot""hqUH
LK"Z%!9*t]"W(XWY5PI*XKncu&?c*1!!EE93,PDgWs#H%TNrS8!!30tbl6`-jkRsq!W<##!!NNE>dMkt
rkATKYEWlKj8d.!"To,qOMJ7%XTP_uE&>c=h#IT\$S$"SUAh1rWi<"F/@5EJ!!4p^g&C+9j3rGhVuQr+
8taqWrkATM]:+:+VZ6i'.X\n5rN-1'YE:m1!5AL:"=%T2V>[FtWk+<V#LWV&!!40mg]$=;jk[X6\,bst
![Q(.rP&KJX-m<+V>pZ5U9+?r"g+r4T4Sb6!!3dZW;Wb"Wi<(G*:Em:!!-*UrT44Bd"`"[!71]H2ST.)
"M9h8/H`]ekPtW5X8T.'X0IaB"/Z&"!%FoFWro\a56ee$kPtV5rT41:W[OVB#W990^UgY670oXg#UugV
XfSLe9+1:jZ2b.ZWN3)"YHMIEg&T4p"juJph8jNM!9*t_28-Z0MdIX+!;Z[#.BK\QT4T2KU&YEIWN*#+
GUNaj!3-#%e)\o)$Jkd#!!P3cT6i6n`W4`n"Y-X]JM7>3!:p0o.B9S74pdh]!mJP6qZ*Gm"9Bm'Bb9;)
]`809,FNEab5g&m"9BjNEuM@blMprq%%[G$!=C:ZScAin%Pe:R!4Dk0!=h0td/\auJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcPHD"9K2\+;)0b"9]Yf*=D*4"9K&P)%HEB_#OT@'H7enp&Odd"9K#O)%F.W"9]GY
('rasVZ6u/KsIn@',;/_jT+*:#7)+Z4JoE_9BuQ\#B-?.FoDmO"O-r>!!`]?%ks3AQ9=I5#R>:>Rs#;R
%g0WJ#6kbN0T_lh4oGBK!!<q"J/u0#!a([ql2UtsTY8%KSHYUO/dW!la8cSK$4RSVU7A3p]t%hB!"0*m
XK8CVM1QrW$3or!g&MK]#RLr8O,0.'Xf>=c!"0-lWMu\JL4LWU$O52_nc0$u#RV#:N.mFnWMWY[!!YsJ
eZh>'0u*bl!DGXec2ue8!UB^q#$?b2TYJ7TSpuVq!sJkR!"K&7"W;TCL9SG-\Vbod0'iQK!!Yo8BT9-r
XGUb863IGqc2\=V"p>TMF`F(VXf?JYBd;pD%L,IHBoB$mWJG;36N[Jqq#JtG%Kcn='4c6)SZAfgF_b\9
kl:u/$qKIBgHZ5gh#Q^?#mhReL?@X4)@d5=!"L9CR@Ck(^T_BkA.8M?!S%/T!<<-QFDQfH#/@pYPacgu
j8]Z1KnP5^Xf\6p>u1h-!WggO%KQP1,@FVoX0&LuItqG8n,W+]%NL+RL8h5SSQ&lm$31,.eGp'[!!+<P
=`UIAX.Fco@ft`k$8jY%dH9SG!<iK(c2\.T!uTDIk*.>U#iG[j!fX:Z\A,elE(!ePli?>O"9^nj:8%U$
"0JK#;;D3[!dC3!WNE;(>W"tiec5^R0`jg.N;fp]S<T@*h#IfaG++MgX/i4*2b4n=!!EE[83Vq1WrncP
P!\a?l2V&1ITE`9k1^'c!!#IejoTj6AD7(a!Xeu.?aR/H^;%FO0-T$L%1"L^[D0JgZF$JM!!<8W!!WN*
!)05aV#IItKd7Q/!9O7j"sQ=/Xf\XtUluSp"9I9X$j-J09qe5RWiN1Q,oYS>rW!B3,!r!(X/MV`O;@m!
!S@AVS!Bl.k2nPO!!]@`k0B-W<qZOP!"K#7((N""\$W`[V^Ef9#2oOk&1]#2\\5M[[#,5'&-C_hq#Cm*
"V;"dR]*$_XHXbG)[>7$%1F@"8uf"mV5/2=%1E?j!"T)7&ITnPUnO`dOWGM^"p!W_%1F@!9W"ebTqQT8
%1E?e!!RGGVSq"ij8elR"hrcsU8AjT!"AuV0.W'o\?r]L<#QegkPu%n(`t,^\@&fWZ!JJ*(A\$^!"B#M
,TqB4WMHDa6514DkPu%n&f;[1WMQPoTM$(I&E3]X!"B#N,p7K1V4jWS6kgFFkPu%n',Vd2V4jZ_SP9nI
&^(.S+p>ZoVQ#X7!!O4QTWH(o`rHPj:4Tsg]!/*7IM!5)!qlWj!"B/J&hfo[WO9@NYZWpoa8c8Y5&:.u
#G76LBakR]!q-*u"V2(gN1601X/hj_/.2@Vb5_S\5&:.r#G%!EBakR]!q-*u"qV4iMO9R#W2Q7Y/ICP>
i;a)mcHjF]>]UA;!!Yl;A>d]!K?F8j!"KZXD03/!]sO,qO<t5B"nhp+!=0)D<1]MQ]=knO@r4lu!9*tg
%ouh@V6$_nJVSOk"pkJ,!"K#6$49+WKTN79XGp"Z4N[[#!"KN@>%"&(WM+isH6!1s"nhp+!<ri<7#6JU
W2ZbS;-Q3#!!r]/#+a`)VCt"VqZ-3f#XC4Ec.gc>!<g.;%K^$uJuHH!]pF)#7KN_rqu@3."U#BRM1D\B
^V#_]Ker].^]4iH9mLQ@Xf\[VB5]a2"9eW&%KZe:$s@XeS#rfnHu*^JjoF$6%KfIND3Cs#WI\]$3!'6d
qu@3."U#6;FDR>FX/LA^D^Wg1mf3Xp+VJ5Gk1_Tu(%_J4!u_\nk2so8&eqhU!]?U>#bnuH^T1^Y=U=s+
$R9S)ICm8/[[3S;#ds^@.>rtBXKAUm9Njpjr;[0D>#f7:Xf\LQM/E:t[K$[aLkUeeX/hR]>=f%t!"0`N
=)"S5X.t6#D$K8*bQ%o83D/#fk%t)$q>^g*!Y!*2k,L.#'%$^=!"B3uYc#(I^V+DE&Kb#?rkAQ?VlX:7
!;Z[)#(N81Wi`D)="b""7"bK@"/(mI9s4O+#(E)*VQ6bs=>11$7=tN>".bR@:9FR%/:h-Bk2t+pr;ZgQ
roO<@>]0Z1!5\^L"9JXA['I-T]m6*^]X"iB/cZ(XeH";''*JC>>,7jiXfGufXfJ1jQQlJ7"MFg+!##J;
"'_IjUT:A)Kr_/DSs(B!"p:n+"U(3UWohn;#s%.pPa#aX!"K#9)A#!5\%9,WPS"NC"7ZB%!"K#7'FZXc
WN3%qIglku"PEe&!"K#7'FZ[aUo:/aILQ_t"2Ouu!!RhT_S2QjV#^Go"pH>BVN<&AT`>9"*&j+.*>J,G
XoJY0*B0+,*#.0._Z0^@,f0Q:!!36[,,tY8!!39P)k?s1"">2b!.k3&!.k3&!.k3&!.k3U!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!7q2S"W8C'*Y,IUmf3Ln$4[OS
#+tqs!sef4!!\#T\,Z[JO/S_F:=0'g!!NgFI!0]k\H(gn"UeFD?skV6!71]J$60`p[fGXm"Y77$^qY\u
!!OLGXfSUCTE#-<UT(5kDsm\2!!L!lhqJpu!6P9F/\8^3]o'Q)iW'-+X0&M)Ff,69!!OUGX/i4BT)]#2
k2t88p&M,n"YI=#^V,N]!5ed?,-.iJX)u>]gAhC%VlQktFfk`8!!L+"k1:NE!!Osc^V@I>r;`Vn"X:"L
XfHR*!5&:8,H%TCWHHGcdf9Ndk2t86[/fOn"YI=#^V,Mt!!4@FXTGW*FJ&U;,H%TCWHIP-ZiC6Ek2t86
e,[_n"YI=#^V,N;!9F1a,-.iJX)t-;r;[!GVlQktFe8X:^uje2)Y3s3!!Osc^V@I>gAo4n"X:"LXfHQ]
!8[\Z,H%TCWHG6Ao`,-1k2t86TE#-I]"c"nMY[=N!!ORIXf\XGiW-^n"XBqGX/U6a!7h,Q^uje2)R9A3
!!Osc^V@I>TE#->X0&M)FJ&U;,H%TCWHIG*[f?QHk2t86d/_Mn"YI=#^V,N8!9aCd,-.iJX)u\gd/X=p
VlQktFgqG8!!L+"k1:NE!!Osc^V@I>TE#->X0&M)FRK48!!OUFX/i4Bf)Wnm"Mj0^f,DC(iW'-6]"c"n
MPgIN!!ORIXf\XGTE#-?W2ltuFnPg8!!L1$k1:O.!5ed?/%<1(]8"<*gAhC$W3*/%EioE6!!+7@ri,s>
T)]#.iSE0'r;`Vn"WNVmQ^D+@!5&:8(lOlMQrD60e,TXjS?f/p=g\7q!!GrLEH;/R!!3<D+p&l0&"in'
"sX$p!"nPt[/^@80/tgH(XrG:!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3U!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k4M!!3<J,lSth,:")#!!3<C*W6oX*>.rEY5eV-)]\eq!?;^-!.k41
!!NcL(.bL/ri?=+YEBqB(Bq&Dq>^[+'G*6lSc+u\S:)1b&I#07"pktU3gQ5$rg3nXI2<J-"TYG##A\d,
EH-&I.HCKL!!`N5%MN]RS#cD!#IpFrR6Lrf#L`\1!!rZ5$4g=$LRG6Gr2^.&N/*'A"q(UH!;?Hu!=9,E
>E"9%qPa^rMM?a>"q(X;!!NL!3G[C)rS%J0]gY">YQ,(5"To]qN/G$X^USiArdPB+I%.jb]r$=>?3C?6
!VQN2!"8r5";GZpFJZ+AWbc>IC'eTeLTR\[PA>A8rWE3%h>l:1$j-Y8'lA,:TrY5iChN`^%;BL1WiN+\
CNiJU!sJ_F!:Kmn&fhm`k2s)`$iUVA%1>8Xk1`oH+P6\L!!>0)Dijt5"0drWD>F5?)3UGW]>)+gEc>b/
`;oN1""RhaHN(#KT6u>qq>^m:I"d9TXf\F+>ZD?F!!=c^>^HCM".X^l>5A4,'75@aVlQkl?<pVE[f?I9
"XO*0"+_dX"8Mp'-8d[#k2rQF"TnQ$_#OT@8R#)krkAQ9VPZWN!"/jVXJN;=^V5:g>Unn:f`2-X3_;Z(
riH9jPE[lq!!EC;RusNGXTNAu8g)F[nGi[p3_Dc&ri6-dOHD?k!"/mCR#drAX/^"q9H^qI!+Pri!bkb?
nc/n'G#bF%k2-fd!"KT)2c[H(^:LJPTFq5.!qZHs!<`K):pI51ZG"#fTf+qb"3(<N%5BA$Wi`D(SY1oO
!!NJs!"T)5"9:][TVAKhXc4e^,R!Z<eGp'g1+YkkX/`(dSVdjV"U"As%fle8!(!0HSuJckM^^5("53b>
!!^4#hnX]!7-agWMh[JJk2o4R!!XN!07^aJ]*>[MZ[3#q&aTK-"rIt'U9q;;]=bFD/1hCV!"Bbk,\sK^
X/2VeB*](Yn,WCe%L*OU+HN=oWN3(n4<bsWbQ&(h-7*H,W2H>^TP"NB%I=')"qqFgN1lr@Vl61M+sRKn
!6tQL%b8hDVjEYVjT#KYVO4s7d$!;em/RV#+sJk=\?iWR\?\gR1D/aL#6H)*/;(LC\Gii;HQOILdf9IS
)]L14OJnqPWMlLQ)^Z$V!!`TF-6d<+WiH&p"(rGi'%6gj"reL0NMN5BUnjSF)^c*e!:p0q!uiU3DPa/*
rh0F,(`O.7!!Z64Q)_+&P260B'Y_#_U7D=U$e#(X%2p!Vri6:6]"=_+9gAm>!"KoE8SYWF]!SB:PTphW
#4_cY!!<NA&3Tr[#H=`(O>f9X"lB:i'L4]ZV5pYnPa[(@%hJs!!"K>M&NuGGQ_^RYNAj!V"lB:i'LFi^
Tr=l_OdCM9%hT#s!![4SD7[g5:\4YK!!`S"d(l,UD_0TB%K["H&TaV4X1Z-XMI:9Yg]79Q%L-!QCT+t[
\tGIX70a8-i;a>h#RV#JNJ!Y#XK-G;=Xhu'%L,@*<gKkhX,M^`2['KlquGjZ%KZqC%:G*GQ`7!`F\Z*h
fDlBc7pK,YWi;nRK7Prc$3oPkq>^g+7l"r8gs-f="4[AW"Ti,mg;$-61#N$A!X/WIKo(\r^V@7,J9V_%
!87D_4,JET]t_4YIu7b@!X&Pf!"K&5!Z5isFJu=DW+g$V%c@?X!"LZ&Bn`XjXHmUD:^-t(!U'Ln!X/WB
Dfg,sX/i%1Ch!q%!!k9!BnNFdWKM!"F]&DF"9IQ`#o"9rXQJZI%1`ck!!sJO2;I?J@La@YlN$b]"$:aD
PlAE"Xcf/faoDeaNLQBJ^V@:$De^6T!!=l`=F^=P".O^o<VldC!"0<]LP;b1Xf>f5<>=Ws"#+4fIf?AM
R!j]hirJ9C$P7N:K;P]MUg[M0($>Pu#m2aXjo]lV3s!M)$NL/L4#Oe8k-bHt!pK[k"#d?t^V6\FVDuKo
#m,@QVR4+Q^53U!!;-<u"=p(GXfRkSPUs`Q#m4Y*PGG=_XE"j;!"/lZS#`ThP*1qZ!!("=#m4\)OJ/_U
WcA[E!;$6qJEH"MA6rHV!!`gM=IA75i>Ch[#nEfFXg+?)!=/c+!6,!E"U5#sY->:FD!M'-$B_E[TSEgS
"p3oeh>dfa"p6fTT;ASjlMq5!O/\P<KaIhb!mUf>!!i`4"#l[=Tr2&Y!!H<PHAFSn!!Ib%S]1d1!:Kmk
%[;_X*>6!b"U5n]2OeII!!N^ZEX<Kk]Dr*>'G)dM<U0Vg$\*1(((KL.e,TXV'bMsN=6]bd/Jl\4kPtWF
!p]gf"<nVi!!3<H([D&&"<.o\!!39@&aTK"!!F5Q[K$@4)%k?uJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcO*s!<i\9!9X=_!X#"o!rr<%",6f^!!iT4+Al2n)[QT!
!6Y?J!<j)e1)UN)!Pncr!!iT0%jWJ7$O$R1!0dHi'6L;$e@2,t6O`bjX8iP;?]V%cQA&]m"Q9@!!!rlm
EJB-tBf[.:aT1&q"p$N!G"s7_Y5n4q$P.^B_R?8>[+3TH&>fF8$u41oYI(RBafAALV>pu.5(KN/XK%tL
E]aNi!5/@<"/4Z1cI:FL;9o6n!":mE^o)]mBml)Cd"raR!:Bgq0%-r&UOI`dU9`?o%As1/*djlnT*Kk$
OeJRt8dhKr$CBVf=qhoGEO:l7n,Tot%77h=G8UJg&Kjl#Z'lcg!7(WS1p3m(*sN#`+BGMUGnRsok5YrH
VQ,t1"q21q@[)j^&ZPj1!!:m)-N!iG!a(a*VZ6f^['i'n!!F3VSW"-V!3cG*1TIB.qu?m&+`X6"%,q9.
!!>$YWAj_T"U$*+ZYK]d!8dbWe\:hZ!Z%:AYlOP!"<iJu?jZ]1!srY?EiB$A+J,f4"oA9%%;W"QW;m&I
[AlInqZ$^4K8_bR!5JR8EkqGM!YBDRd/_i"#6R/K\8!K("oSE'&XB="klAR##6mT,[nIYH"8r3%'oeI^
d/_l##7!klD_Me.!rW*$)hrS>\H)+!!K0bK!!,5FW;m2*$;6DYWe3k`#7Uh:"A"MF!il;4!t//&Y+&rO
%gW:<"?U`]!q?9&!"]/798nd@4!>+<!rrHkF<CY<!7:cL!Dmql!r;ls)nuC=!"^5V%30,MXIk]-:ETiD
Dlj5E!!*p0%LF;#Tq@@$BeU#""C$umWrN\@-jhbZI<L-S5p$O>"]fIEp].Mu"VX<n4Wjk*!!*3VhZ1n$
&HPGK1&q@j4DU(dWfV$eR]$G3!9F1m!B\1I!!<s(HD7R'H<`7OQj0bpr;[E1/TMg2"X7$'LN%9J4W/7(
#-%Y'Ac)N6)c''`)?Bg]BDqn6!!E<`Uid(E!"0&N3G+#L\&5[K+:.33`W-,B/tH;RrW!<3)*Mu2[[s4j
3Y2GA!8[\h!Ag0C"onW)#p2otRWN5,Pp6V<\H)7%!I+bD!!O!8<&B,aWW3//A&E6kqu?a(*XXr6O2Ji&
Cd'*R!O2V-$=C8G"oSE0!=Kr2B:lT<E`"V."S2W-!!EdJK0087!"9#A,!pOYSRu%q+:SJ.!7_&N#(?UJ
!!EUYa?U9N!:9ah+gBp=&c)J6$&l0-Ga,k@E[S'k"!=Gk;?.(#!!s$]WbmEj\VX*%YQ+eMQZt4hq>^g5
F/*oAQ#'Jg(]+3?!!/(:pAbC?Wt$b%9GcXfc2\Ra@^jjJ3#W5/!s8s(^R5BI:Mu#PC<HV>!#5`<ZGgW%
&-`1:!X1*?O:NR3D2P!!ZN0t)#7+e/LJJcq"o\N0"<`5a(FE!pNgsFZ!!<>/V$Qks#>eP'!!*HfBE/7?
!"B*FXiJ8]InN+!IaG<.rW!$%,>gPf!6,!J#%FX=Vj(@7-7`0$VI9B'!sU8W377f`!"B9\XIk#O4WkXa
4*[fIrW!$22-`5S!;-<q$bshs-NX2H!s)f8#Q+Q%!j)G1#[ib#a4J>Ka47hV!"5\)$k-1<ZF%6ASY`m&
O:^[W^An]D&SS>DToXtbLQ\Et*RXr<!"&jrgXNBGAo=m-6KeF6!!3EI#MB(a!B#@lRB*ZrP__KL!!3<7
"k`k_"@A!8['HpAZB78r!!391"7-$U!"&ooO1ViuW2IA,326HT1lfKWf%nuk;pYLI!@4+<%+kOc$8Yq-
Joja)!Ug$K!!E<?F[-)^!!`olD2spA>oD2nqZ$a"(1Jj"fDl0k8p5fEKkW";cN!q[nc7\M":?J=.0Ilr
"p$[!hKKtAh>mEQ"9So>#Q`6O"T^-U^KM9%!!EH3%1340!8IPX!A(!n5Rc6E"9o2F#m8r_nc/a5GljT<
#6?`r_U>G[)?'W4!!`NSXKK<l1_JjM]`89<.B05*@k%`/!7LoMe_[JPZiKFm#W990^r"Wp1CU#Y!\(1P
"g5#GM&QSm!!k$QX/VqE:E'K+!42_0dH9N@L(`#:blA&+[_BMk_T09/)8H76!!+LJriH=-[['>nVuZbr
!%RrJ"K%`D3=2G\#0u>mk2=Nco`2,p$Qk86]Y;.q_V(V=#iPd'!!=:5Wil<&"1X43"j$c$!!==MXK)9#
"K7)P'a1cAo`,8De)]WQk1l"1U]:N$3e3F&rkATObIMC2!!B/"%1#1F[BH[6Xff4)6k0=a!5AL:#t]rW
WW&q%WLJ;u$NnfWeGok%XPDq"k2a`\[fGdq"9hVZV7QW?"59\J%]9:/$XT.%!3Z:&"13Y<"K)5&%To1'
WW&q$WfLX<#4_c%!!<:!\`3VN!p#mnfDs+q!tnq%Z2ME?`6Wo^!lP*"!!3mFVu3Y"ZaNpP!NZ;"!!E<E
C9"B6Ws#2G8e;$@!9=+]#)Lh.joX=W"/u:u!!NH^IB'ZgrkAQ\\4[@1!!EKbLo7HUXTYf7PVi[B!3H5(
#=4fYW;`h#WgR9C"lfU#!!kNcgu[\\jglk^!8@J^&kIML\\Gnp`Qs/m$+0d*!!<678uV]j"g52B>p0EN
!"&cF:S+ejX/i4oHicqU!i5l&@(kI[k2b*6"6olt!"9rTO/on-^V\(8C`<N.!7LoW![M$DXfJS+YHtl>
%Ka?ElMq@s-#BN^XK/D"S7stl!N#i&"EVcEk2tR7:87dt!\eSZ]">_l`6=uD$MFJ*!"9)gF.B>5Xf\q;
GUEaQ!6P9D#s"!YrMp'rP@GI4`W4os#TK,`i9'1VV&??7p](a.7Y[)<]YD5&b&84.%J1,3%h&NL!"KB'
Kr_8WXf\e/>7_,L$hOf-#QqR:%2Ms1]W/!4X.jSj$j?h,"p,#4!r)c1!!kTbgZ7MZc;4Pd!7q2Y%TSL[
\\Gnsf;FRdoT''>F:Q@lmf3_3=I-G!Xf\nLMg'I=I0,%2%(6->*bM4LWN-3'UkNbU5P.;E7Q:[]!"&d6
`SK\=h4H8(#4r-$$3C,+[f?O3+(LDArkANNdF@g:!mo::k5`g."9U)rQ`0nc!jKJYoYCUD`>[&&k5YVg
0lEYcri6*uPE5C!"-]!p'Xn)@!!3O8cMlr-iPN;$_#hKpFKkfH4g4@irkAKB+gM(K1o'H?!N-h'!6,!?
!B[1GWr\t6ec=J*!1iN>!33^4pAb:%/r.=2^B(bdZiC13*+c;IXnSpuV\uiA!s9'5T'`QZUDie*^&S0<
\F&DYWn[U.!!roaF2c;9^V@Fgo;r+tYb<)V!:g*m"W^I6[/R3-Y48IlRi'o\gAhN^'gc])WiN2#Wq*Fs
YcJ\[!:Tsm4M0Y9k2b:gbQ?&9M73Hm#9R<j`PfR,^Up%`!H)cIDZas"A.5sJ%0I83T<>B#Xf\Y2W-EIX
G6<,=Ae"V;^&SQD$ScUkV5^MrXKn[poUl;[WIk`A!7LoT6b;%5k2tU;A0iGm,m#GI%E\\?!!NE<<j0oj
rkAZL\!LVK%1Vq@!Y5Y@\c;p8%5s*XZ)n;6XfSRmC+^25oFq?A%g0?B"9g,YK;8@F"Ls"5*?Xns!?rE^
"h+I5*K&MKjoaPlO:KkBdJs^`3KM\3^q[Xu\WVJ3#/:0'!!NNMFgnZ[riH=)W.[>@VuQf#";aIRTrJ$l
"KK(s:(jE(#mP@rj6#Lcg86[u!4;e1"XA$&dDGmt"MCdr:C>kWbl@nK'2Y75Yl1[+YEMj"_uSm!"To2r
HBb<+Ws#H'V-t=E!;ZZs9toQbjoaVe>lgl(";>%AhSK0*"1aM9,P_>C!!EThM8?CoXTPVqIOX4U`rH5H
0lr&IrMp(&]Rqp?aoL5t!\]hurT416O!(Y,q#CO)16:)%rP&KGV2[MAVuQr',As`grN-:,Z%Y:H!!'#!
"9]</LT:<R"KAMn<t=Bn^]4E?K&lmm!o^p]blHN!"TorgajIp'^BD0NNaNO.!;$6p!>A57_6!X<"Knl)
EtP>N"T]#qB9K:oWr]6&"/]oR!N#hu6b_RZjoaYcHj]0>^AnH?)ca,m_86,c"LXG2,mVm!f)Q!W%QK?W
YHRr-"K\eK-O[Ndmf3Om#r#\HVl9Tq"K\bV0F=TV!Zn2p!94"?!na4_VZ7,?S&rUb^V@IlXb0.Nn,Tru
":JtFYHIl,"L"nm9Ff\Tci=I\<Kj5WX/i8!XfGA1^]<Nt#n*!KiTB:ahoJrt!!<3Sd_Pjs"MLpjDC)sr
kl:`-Z2Ld-XKJsN-`$eE+I9&)Wrdl/"/PtuWo<s>"6@mj(%VF2!!tQs^V@IpUj4g%gAo@r!@k2MXTY`'
JjKsb!9*tb.B0AKWiN\%5SL0uq#CWLk2tda]JQ>_#;s0/]qUNr&bl@,!!asRXf\dm=qolp_Z0ojWN3&+
Vf!g%!87DVdH9Q/@g0%9o)JqO]sjAD*M<B:.BBYHDC5Mb!2KT!.B08LJ1h&f!4r45fADi*bQ-/n"T^<H
M`q<O!:9ai!@P%H5mEt^!s'mVT`IdoScAeqDWq/0!!<6<?msD&c2[qI(MYD0!9O7`!?688T`Fuj!"5:s
!<WSq!3Q;&":Wl^`W-&D%0=6EJcPKE!<E7_!.k3&!7q2P%mV#9!:Kmh#q$1Q!!3?F$N:$W!4`(5!A1gH
+Tg!jd/X=N*ggm]!Or-o!!E<EInpED!!<3$:C4E/l2V"h2SR\B7Ll*l!!*6RXh'QJ"JGf"!@t+5?m,dD
!3lM*gpnWZ!6P9H28$]CabVt\_#WHp#:Z^U[&[mn!iZ1r!!asPX.k)@('1*/"OZAaBEn/1WrN/X^&GbK
b0"-4i;gaq!@b,LXTQ,C6OV!9gAhL.WN3)"RVFqjYlO=p"k2VrjNC/h!!t9Z]t_=t_9J`7!!]8"!@OuJ
Xo>I)F!q1V!5&:=-`sDLX/W%c<tteb!7LoQ`oZ@FjPd'K\,bjq$l+/c\@fSk^rjl0*!3#<!Z$Tjs/u@'
"15a4%Aj+5)4e%3WiN2#SS0qinc6#s#W]3GjQ>U``_>"bblA1T)cMEd]=u%p`5eQ=&&\J0!"B&O:oL_%
Xf\b4YAkrtX8r2!%0e%\T<"umX/_q[?6'6I!!r[=`n]\<jkQI@q#IGq"=@fEZ+U(N"Nni?.0\f5_uKoA
0l*GbrN-4,Y%SIOblHN!%0S;*WMunuX/_e=9+M-4!:g*r%!L1\k2taC@g/V-#<.1!]Y;.q_?8,e;[oW)
!sLcEYPkR+YdoTN#OMN'!!ENjPJ+!qWs#;aD'T>9!7:cP34e)1k2tU1/%YfG!!Ep;P,#\h^BDI(KI@#%
!!F*CQ+!jpXTYl<BGUcK!!F?XR]3=dWs#8F9+;!s!3lM+"BN\*roO:9D?S_pa8cSdD3V<=^V@S1Z"k<!
!8mhY,_;WeXTYf>N`?ar!;QU'"!VrfX/`5$WKV6Y#fZl&!!j?ge)f`SjLI%I!;HNs#V14f\,O,F^tbMF
$`<t-#qq%3WrB+)YKh_C"98G$!!EWjN45thWs#AQ?6]R8!5AL8/Z78#joXJ6)9i05!"0E/Loe#!^VR_-
FW@mkmf3_07Z+4IXf\e/T2-6"!!O-EW332%"fnT"JiO(3!!c35g?.PWfj=%G[K$^W>_KAk^;%P?VEcFS
oI'bj+9h$1cN"+M*FG;:YPtX,acS(r+7p`Y,T6j7!9X=k"Xe/iXJi2#W.Itn%M&(@!=T+B!;um'"_Gj7
jlY?f(S^s<!A/>HY._Td`l#^4q8`ER!mRMV[K$[@/p=Y)XKA_7Y.(n4\cT[1&Ffb?!"0&mKWM5SX/DPE
?<d)-"'o54%+tX9!!sO.akc+<cZqH)oelk24;bj6oDet#20ZD+^B23lan3XUaibj7!!<j"Ff#)>"0]2D
\+R33\@rlg!!<ouJ$8jP!i_f`oUc2VL_ogd])VjL^]*?sj42WNe,e$chZ2+*!CF6^^B(_ca8kN+!AC89
XT>79Z2an[U$\l]Tc109!1iN>!2oer[f?O5**okcmCr\1+m/jO!!<<55EG05!N-g]!9X=b!X^GrV!Y2`
UDgTAqu?aRbjFNmWjMg0)I9,m_Z%:N];"qb"IPUEOrCb/":RVK]s%F;"0Su,U@b2^Viqk`!6G3D#Vp.H
VuE_!Wia+Sot^aI`2OR(!8dbX,)>(TjoaYcY,_/q!j/nB]`@p0"VO+fgVCW(^BD$)C.q7m9`n-e57"b!
"9p8u]WD(6"KSGS<)ENlq,7Ap=@3A(!!NNJ<eRHPri61(Z@m18ol1(SGZkLJ!5\^<%ZTB+roO@9Nu\<'
o)m_Ih>d]c/rS9%_>_1R[\epE$3:1u!WW8?!;6Br"X.?[\$#_4"K\S[64WJg!!:pUhZ*f^&4q,8W;`h$
XKnU"%L2J/!<rVD!;-<o"C]:,roO:9\4NV!%g!hf_UZQ>^V@C`L0,Gr!3#r-&PB7BY-+n/Y,[gk)?T+&
_>k&H$TMORVl?_tWirI=+pH<nf)Q+7YMA4$k2XKi"1A4%!"ArD8u9eO_8!au[$>b]VZ7#107C.4YH=q.
X95_L.0c^N"U?;TNhWKNWroGV2@&UL\c<$NR+UE\k2b*i)Ue];!"B/gPekSZ^V@LqW..PN])_7!"U,o\
VmNZ,XTYi*LJSV^!!EB;;NI=JWW&q$WO8X((8_'=#_0qUk2tdc^-Mei!4`(4!Zkpcd/C]^^9EZ3(YA`8
!!E<5:85)mXTPf0?Q6c\kl:he$7]\Xr2Tt"V/\$fW;unt!B.Rgjoa_rM[-0\";",!gW'3,"1XkK3;!9X
!!EN\IDrVmXTYf&Kgu4$!6Y?F"X%?,U&D"pWNqFH#0$Z%!!4($fDXh5h4H7"!;um##<Isp`r*RRUPMAF
VuQr'*c&'dr2g((Rn!k`!3Q;)";tHkU\q.pZC=](irI!t!Xrbkr8n%#<QP6t!!4=Z_u7=Q]s!uB*O,V<
!!<msXfhW)"0eM?,,P>K&TjkLWiN2#WO%=,!2]`&44E<Pk2tdVS/:>g^An9j_Yq4P\sIY-$I8_(!!"DE
XTY].Rm[^p!:Kmh-DRU>Wroho;A5i+!QjF%joXGH5GJ2a28-c>\ZqH&(@2%2!!t*UXf\\*Q<YF4eH!qr
!@b#IWs#Q2FrCOt!9X=de)ofMc$9Jf!!iQ^]tLq7EAe!3!9jIg.BKYPUj"U"U&YEIWN*&/Ld2KE!!Ld4
fTI9D!3uS.2RfZA5R>sAaoDSoXKm[J&AJ5)!!OjOWLH]uVZ?Mm!n,=]T)\up.Z/BeoDkrm"9Ba>INR>F
_uKo@-Er%H_uSKk!I#Wd!;$6n!=_%!ScAin%mUX$!2TYt!>%m;iW+Q1JcLH(!<E1P!.k3&!.k3&!.k3&
!.k3&!.k3&!9=+`!Y64d)%aF\"U,\[)&NYK!;lg#!Xf\S'+DMR"U#DN'+tN8!!NE3'bM)foDlu5!<j)7
'*&6P!6"pE#]l`5TS<s]$3J9Kqu@!,$3rV`TqI`;lMq4q?]U/*D[QaT"2b*E"pbAbMN*UI1\UnB!!rj;
N/EO4$O-k=_Z0rH#R2o;Mi3-Bl2Uqk8jl/aqZ+G4"$fCI1%bP?!!*V/rkA]NP`1PT!!*,B!!WK)#%3UR
WW'X5]l!'8!=P4mXTtnVGBG23!<L:B"p+c/9mq5PriH4&>3c.h$^1Li#H3)pFs[1i!U0UC!!WK)##9Sj
P5_K_WE\Wf!+Pri"4/S?*R+TX!!<6L+CtK6!S[bC!!NUASs#,2rkAQ1CO]1'!"9H[I"/Z@^Uo_iQ]O0)
!:Kmk"]^D,H'A60"-?T!5fs'8%:3[^WNE;'Is6Kj/*d0=#$$D)G`_p*"--Ju6-909%:3^_UoUPpIWp?h
/F!3<!C%nS=T7Fa;?IEt!87D["UbgFk2su>+>G/+!"T)2!!"@<U8,?8^U.<R=q06ep&GUSC0QP/^V@(G
U3cqA!W`>e!"T)2!!"!sO-$EEXeeZ`8I<cE"!U`:ErN0ETo"hC!rrB(!<MHc%fl\2!$-lSNMihXThS6R
$IJha,$.BWWiN1lL5]aI!!30%li?k^#!u!Z`ocEXbQ%qN!#XbYk)qr&$fM'q!XoJKJukoV]tV+)85CN1
!8@J`"?]O\Tte7PXJhsk":b^r!"K&;$4Lg@QD1I^X(F=U*Td@n!"K,c5XLI4XK%_TOZrsU#2oOl!XT/A
D4$KXWMuh.3^4V:!!rc^6:?a4WMc)G"HG\L$O5De#82#bPhY$=$IJhX8ESXLDdl]2!:Tsj&L/2tril^<
\@\4f3\LTm!"KW'2HR2r\@&QHTIh'(#hf7\%3$!Qrh'LrWN1e'/L1JV!"KJl.n-/4Whl>]N$8rQ#20%Z
%3$!Rrga:jV5K%s/L:Mh!:Kmt%59;&SuAHYS=YT_'Gq&*!!\RJO0lU?44aH5P0F-<Vh("!df9ja2Dmn$
]!f&P[&cS:-k>A>%K[S!-[N/*[(!NQL+YA0mJuAL%L4I423t8>VkBlT1`7>Ajo>km'HeH/V4scaW2FV[
.im1@rW!E5.4I3=VP9iVTpISR*Xh*1%K[@f*bM+;TqeEYE$HkQcN"/X^T"5oRrA$$kPthpU6M%HXf</\
!"Che99?j"\u_d.D%7<lli71m((r$[X9b`2]Y1[d8PU5K!"CGH4F4'/Wgf6>=UG]Jli7M!&.Tb2R['_M
XJAiW4r!PfgAh[57Ql'sW2Q)GP$/5*%.!s("VD1bI[H:lW2ZIj3^+;4!:Tsn,hLDaG$8DYjT#N:EF,-Z
e#!/c!!XHZATbT!]a(p3TSaBb#m9f"%flh>"[\lQUV":UWFBO;"i^NP(04:@X0&J!K8am_":#)%!!30)
"q1YlN/*LqXf[pb;a:N+!"KcG;dlW*WM+p$FUnQZ"7uR(!<iZ21l@$IVlQk]:K0U`p&NG>#m(,3`9,gA
1.<,I!!ktW:WDPZA,u_d!9O7h!bm:6Y.q`bR#Ht^oDf7&BTe@V^V@LLG^qil!<)s+!`a)MSZT#qK6;;e
oDf!s;gikYriH9S@V[R1!"/j.DJ,E=X/U\oFt<=fr;[3/<./tXX/i7O@r![1!!rZ?$\%7#gG0cinc/ss
-QmEkk2S0&%ep%A!!>c^Oe_oj"/fp_<;HS&'m+bN\\GnjP*Ce?h>l:1"#u*`OT)?aPZDHaq>^m6?tF&O
Xf\XOIrZ1A!:p0m3e_p@ri6-`=(t)!!"0?GAne*BX/LAoEYI7/gAh:<,Z=X(!aGd8p](U)$Osi4k/8St
(rQFH!#u"@!$@]*UUe.S[UNE?%jY^gMSHp?Z(Ie6!!!)0!"&`.!#UKQOK,FbV\)Zq6jk#47Wbc7XItK5
@/p90[f@BK!WX'lNfL!;X.rH_71:/789Lu6Wh"s*@/p90qZ+/,#<Pg]^?4RX!W<!)!<=&#k2D4b:Bo_W
dJt$`%M'5&XK&S>]t/Z^^V.4[WhrAl&I?GXl2VS#$4@AZS!]nNXK-&jXfSRlR$0Q7%0j';!!*fB$P.!>
Pb+kRW+gsdWMl2KO?3UT#-@k8%X)KJe_A"O3Tel/EG&>L!3ZA5&LSW%Z*^gG[BR$0.NTc=j8d4#%h0Qr
7\HQNWMQ8`MBE]S"j?u(!"TM[(J(*iStr'NTnjg-)[<YLo)K#VQ]ePML6t6$!"'#k3_H930KUT]!2TZ$
#:hAePC"T/*9R=8!!if\/N]&@-86Id!7:cI=<t6Rl2Uke1a/Ci!!<6M)4^a/""5)R!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3U!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!:'Uh!YZ^u
+;=jM!!*-.!tG_K#bV/%!<rf8$3^Iu!.k3p!!WgSZ(Rt9"MOls!!W^0Lj4;F"Ju1s!!W[%Ch.6O"/#Vr
!\#$0o)Plm"r"&Q_8*)Th#PCo"qQs#XfR`j`;n]o"q?QjVl5RYXT7tn"BO=/gK'sI"r4/Q^V6`PquESo
!=tRsXT=gnj8cmo"q[$"X/_KibQ-/n"D?lZj))+&mJmG+WP?3^Ws-ZHf)Q!cQ`[BkR0Bnsmf3P'PH1aa
Q3Eo]"D-`XiG5(d"r4,P^V6`Pl2\<o"qR'&XfRoodK%Vo"q[!!X/_Hh\cCmn"D-`XiG5+e#65L<^V@L`
"ebo#&!sE#XI07^!3lM.&<j/qWg3hA!6>-CA`i.6CVTr/!!X1;^V@L`"fVLt!!Wt#Xf\[m"ebo#&<j/q
Wg3h`!3#r$A`i.6CYo-/!!X1;^V@L`"ip\t!!Wt#Xf\[m"gA!t!!X!uX/i7d"eYhuA`i.6C]4=/!!X1;
^V@L`"m5lt!!Wt#Xf\[m"O@(s!!X!uX/i7d"h+Ks!!Hlqk2C*K!!*S0"M_^cWresp"U^QtXfRlV!42_1
$^.QkWg!P8!6Y?F@clh3B>"<5!!<K^4#[$r#rXP-[D0Jj[llGB2Zbup$FKj:"sYTE-N,7t,W)9uXfS6I
+sm.6![o8u[/^73)]nkr#T>1YX/i7g+W("q"<A?`!!')#"G#XsiJ-+fcN""k\]jrj!QW:\^B;3ca2e(s
!m.i#cN*,.!ZJ&NqR$@6Yl:a+YI(\6[0!n6+L_=Q!!!jUqK<-dGbM1=WhOcYqfW$bDAok^!D7#%?jL%M
bN@sIb[aiS?iseEA3[F$!A_Oe_Z7LO^Au(D_Z2ac!6>-?-hjnHY5YO'Y5#:'[4^#1huEd)U%tJbV5aHp
!NDpkU]Ho7^&[m-!71Js!T)o:joOQ"q:u%^e,\G-!AM.]^A>V?^&b]&]`@j.!@=f3XT>FQ[/^4SW:R(b
Wr]%KZiC*Oq;qJ8q;hUjo)QW-!\'G3qk=@hUUe.S^:9r2r1X:eUQ[Ce!87DS-G6__[K<qGY5YO)Y-kb8
[K3li_uT?.![FeEqkse"W2ZhuWi;qrq5=9BZiC-;ebdSsbg5,-k2Y7Cbl#]ecdJ\t!!3dIEr0VYBlU2g
^V6[cB5IN^")Mmf(Ae*D!!3m`O8FV3Jqs?-"K\h_JVX2X",De[)<1_G!!<gQK6dB@#^1WpX/i7tHZ].2
!e5#$b5gf-!Y?[qr##eU+1:7niOKpA)Z:NT)B]Kr!!*--!"8Z1#mVBL^V@L^%L!4;#m(G>!jr"0!t,S8
$OI.VR'!KlS.5c4r!NN6$NL=;!!330%JpM>$6#>5X/_Nu#7UM<!XoG=l2\X#"E*AaiH<0@g&M<hWP?3^
WrfL*nc/k'Q`[BkR00,_#RurtX/_Ee!!&_n"D$ZWiG%ES])W$MWP?3^Ws-fLdf9R_Q`[BkR0C&"lMq,#
PH1aaQ3Eo]!+c8pk2C*K!!X1;^V@L`"muAt!!Wt#Xf\[m"kE[t!!X!uX/i7d"hjus!!Hlqk2C*P!;lg$
'res_^8hF2!!Wt#Xf\[m"n_kt!!X!uX/i7d"l00s!!Hlqk2C*o!8RVZ'res_^8hF>!;-<r&!sE#XI06c
!!X!uX/i7d"oJ@s!!Hlqk2C+9!58F;'res_^8hF]!7h,S&!sE#XI07!!:Bgk&<j/qWg3h3!7h,QA`i.6
CU*s/!!X1;^V@L`"ebo"&!sE#XI0%lT`>9.PH1aaQ3HOR[f?PBk2tW<d/_Mn!>V[7^B(G?\cCpo!=tUt
XT=joU&Y5p&=<Bs!LO%`!!$m8joBJl!3lM.&!a8tXH`tB!6G3F$\>7OUk8fd!9!nY%>b"a!JgoY!;HNs
1q'<_2P:$S"Yib@8MC5@!3-#'"Y<5/5q<#p!5\^?"uTCR:br3p!8%8O!NZ9Q!2BMt!<E6'!<VB`JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcNgk!Y/OKra,_9AO+37hZ*]b92kg`!_uTKXT8(q!Xh_%r_3Gi;_t*I!!3'!rrMusWrN;N<CqVN
]_oGGYYn+b&*O#2!!F?23bYSkX9>.^4?*_q!8@JV*^r,(W;EOsSO5P$$b-3+!!j"Zg=+U&gY7@\!!rfb
3^9+F\@8cKriuO/#dLbH\?p903ZbO+#m;S,15Dp0W1fm`U'[KcV5gMj?6h->nc6H*#mD\.1PMd'Un4.V
SdCsYTr"QY?6q3?g&TV&"ZaN+XceVAPQm8.S[>u*"ht'/!"9>b+%EB>Z*q-PVDp:/2@VN"Bt(X^[BR$$
+X%p2h#Q41$jn$m31Hb;VQ$S[/1(9F%4NW(W2cemTVQuR)&NLq!;$7"$Q^-ER%^(FUo'8+-N,A%-WQt>
UnO?PI2X"@"ge76H(0_kYJ+3:!!`P,^9+&_QRTBD%1a$_D60_@]=kh:78GW6!"]K.:0F[4]XXuATK3>l
#QOk?!!Wf?%9]-dTDkknGrIr6q>_!23'Kj$XfJFgR#N[%%gM1sfDl?g%1QL.P+8JMW-C6c-Md]P#Wb.@
R&[*\Pa%(X"qLpa!:9ak"*%k&cI^Aco)Ju7j3YAMB1KZ9$3C>2'p55`[_KSg")hLQ)tO%>3bi#g^V@F_
S=jBm!WrJC!"K&5!=sO<N2E_ZX'/.i'_;;./QGJrXfVl1RYZo!!!<?)`W-JM"9B'\N/F@1X/K8t9bm7"
%P:aVJZGiNQ\C;p!!<<(nc7&;#:)u2WTN?["n)Et!WXt;k1X`:701s>m/RJPQ][fP^V?sjIU_XD$QskD
LV1C:[u?Q#%E8AM.tW,(riH9o>%pau!"0ZXATFiRXf-GnBaMcZ$7paTKrV2SRp9Z'n,WCe$Q3YjEi?%>
UNV*#$H2uO0dJpBk2q0t%0>bp#n.1Xd,sJl*\7cq!7:cK>(^srrkAQ.N0-Tl!"0'TP`E#`^V,VKHS4@Z
kl:fWD./b0XTON)HT:-f$O1$hH(_:AXES&b,Kp,i8oA(#ri6-YG'c42!"0!>IX.KbX/U;NB-YS"!YbiJ
roO8M*@14Vnc/t#/0^/;k1_!_$dSe_&Ro6e\%fYeSY22e!!iYf!<*-*;PKb]]tX]bU0M4rdf9je:/>&l
Xf\RXN.2QB"p<rerWNWqO,B7)Xf[XV:c7Y@jo>l#:Jk>lX/_tMMLQBA"p<rerWNWrN/3XrX/h1Q;E!)+
r;[-)!<fOehm#C7/_pC48jHh6k2o89!S%/[/6#/k]tM"]VQ5(T&eG*=!9aCm#8Rk(Suelu]Y1RQ8OsKJ
!"L2>3,G[tWh5NDB+#1X!T3qg!!NoB,`.tUV5pYi7liU>g&MU,6oo.`WMlAMQ=pX8$j#5c%L*LR-&.bL
Tr=r]8NJmAq#K:P#8#A5aFdZ3$eG@_5At#/c.@m0!<)s."uJ8$TXqS?ZEpZ5*\%cS!"K&Q-nC"YZ*_!M
[<aGb+Q3;1"t1uUN2rkSU8+5H(Ea1a!8[\c!uW.&Dl','W2ZV*,:j_k!"K2]/22sZUSFERR7.o7%H@H^
!"K)K*[#BpSY;jTTk5T&);P8s7)5h&Pa-RA!!j:5OdiJXTF(\Y!"KJ`)b[?>Yd_-SV)L@l#giV^)*Trj
[^ruUY-O<:*$#4O!;Z[*$6'[ASY;^TWN2.3/1LkO!"KYs.oW=FWhl8[JK#=>"m>pt$QBgDR\$(GUo08)
/L^l(!7LoX'/D(;U8Xo^R\#$K()@)7!![n8L98&,<T=)C!!`P(aL%LeOtPhr":0.NVQg'5",]]M0?X>(
!!l+p>cYWQ\Z)L"53W%M#%<p`TDknoF?2`6aoDeR3'p6*XfJIgQ&IHk!;$6o#%<gZSGoJiFZVu;aoDeR
3^cZ,X/VtZP);$Y!!rjF=Fo#Wdi&2d`;g*Vk1@=X?:FJdp&GC(Ek9$#\SGYb(W-4T3,N&frkAK52<t5K
"^\73Xf5As:_E[,`W-)l=\XDFXT=b;lMq4q?Dsp*V-$Mk&`s)M!!=fV:4E2C!Knns!!`\Gk2sA[!<LFF
o`,$q!A+64!+b?p"VIlEEeRo6!!OBlJ<IHnr;c9d"V$uu?>iQN!!O-PCOE*slMq(tRA!r*::pQ1(27Q2
V/5Ds"F?sL'ERFudf9L[%OSn#lMptmDcG!^kl:bqE(]Er!XDmq[K$@:>WV0N!XDsu[K$@:>s%BQ!WW3(
ZiC(0l2Ukd"pF;naoDJD"U+,k!W`K.eH"S/!W`H-lMpte"pDU>q>^Qt"U'baJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&YlK@UJcLB&JcLB&JcLB&R/d<i'c.&A!3cG)#7(@]!6>-A"9S\=!.k4J
!!iWO<0Wng7OJ_A!!iWF3+H_o0Gt)i!3?/+!=ge[:cp$6"Q09r!!*91_uSTn$3N)kai;33_8D*YYlOFs
$3M]N['6g=[]s0TV#Ul)(L2liTq$pF5S*pk!!ap5_9'-A2$2q@^&SNb\B2FUItO3%e$M*^!7h,X)Q1*K
\$r`Y\\=gh\H)$t$P-R7W3!PAV43HO(o737/^E=q"dYasaJpbe!"D08]T?MT3)jaPWOPV*nc6-!%5bYt
SSC5P>\obNZSDR8!7(WS.@I0KEB6KiH_QO;,ltj_jo>b,gklC<!!3[6X\#Gk%fcSs]sh;O!!!$)*aY&6
:8e-q26<cY#6"T+"sRr^R5Od?YQ,+jWN'\B!!!'//8Ur@1Z8>S!!:ou"8`'"#^'e$!8mhZ2Pdc<qZ$a&
4GfdaZ2jY""#$aS./NuI#<nK@-`I(J0t!u/qZ$a);RV#`VuQk;^A%[/D+!Le_#OTLFIe@7qZ$^"6)9go
!8.>T'8*lB&c2P1"?r]9kQ&I"";R#s;[3+!!sMJ[=3ps#!!4R`%/9f'BG7lUnGib1IC#\W0bsWe!t0OL
(T@B>+J-?+9I0oDrW!$,Di5%'!!XO%J7(;G"T8<&%<Hh#n,U!!!^(fNq#CF01tM`V!"]DU-"`1HZ%>\'
('4I\IXVF9!:'Ur"rAb-V7i=&4!Y47!$,WW"KMM'"UPYbG+<_Y:+R%]!<=?Q63F.d":T*U+p@cC!=8i%
!42_;1nGQi3+[W"UU?"U+q]4+"lKC)!"^Z;'+I!4J<m:3A2"o/@?q&;!9=+k)c$nS6">M6KO%,"%g-!e
"gA"(!!!Z2!!NNO;-k^TrVus'9WJ.,!DLF%!!!'94D'2*R]DRZWtbU7XoK%75.<BL!!O<+Aq>u:Tl?0a
%d*i3!"f5jM(\i/$7/)MGa".s5C8Y'cN)`#!0-jU#6l8<?Ru=KD70H;!!=C(TI0U;$Nh&$AqZGMa-p'U
#d+.0+,>dnr;Zp&(-ZO>L687AIkqT=XoJPJQ#%-4!"0&X8o8[#W0Bdq&-VM']`8's./<iH$6_L&Z3f(^
ec5gT8BA.XqZ%!-&MT0WU7.L3?mu8t!:Bgi"@9\o'`.k<"qibPZ(6c5J4'qNYlFn39Ti]eqZ%!.)+0[^
GCXp2+UeIV!!0ASpAb@a`BlO@$hs_1!!O()cET84qZ$p;UoQLRK;>Z>:ZDH#!!Nmo^RHJLqZ$p.JY,&0
OJ\M$6d#Jl!!O+#Q!Y=/qZ$p+DP9U8MKj8g4gP.e!!5j1./3cI-Aqj+2b64dY5f7<0:B\tInhI+%1aqJ
a,0p%*&CrP!+W55'a#nO[&I1g)$^<L(Ls:p"pZ))B96Hb!65'S"YudFG"X.j"9S`68X>SE#p)9SQ!Mf<
h#IOlePlYJ!!3:d3;igY$9n[)!;6C%!]cUW_q_tfKT3XoQoY*F!XTqdY5et523P,N`g:1=@$J?t!'0uX
!Y6IlY5f"68>E,QG@FNG:h#Hl:&Y+p";2pqnGp6&$=qi,G:Wt$"tHdCd/X4J!X%*U$iqo(Q+aoG_nWm_
E<>A)klC_bf`2E`.>td?Z*1=6YdANVd/X1I!SIG]"u2(=Vkp/^U8Fi2#e9s&!!t<fgXs]dak4ECd/X7L
&P=%q!!<g.GCB^NQ&0fp)USNe!=CFgfDl3r:4B7[]t^1G)=IRc!!<6-,7E-(#oH^2[BZj>Zum8<!6kKK
!A/Z!^91oMci=1L0#+)/oDmqP"qW7M;*uE/ci=1L+J=&sg]79Q#6>Sr8lSA0#1*>Q!?d+s&(gje"<B9d
<C\SMo`3\G!Fuek!!!&R!:p0o2SIGG;\%@Y!!1:D"Y6^aSiR#Q!87DQ!R(NI/#enL,mNH2nc/Xmb5_V!
^bj47e,T_2]YDD+QpLna!:0[i.BBSXYBr.#!!4UKWs#/M=;V(4!!L^3eoq_m!4;e428-c>^rjfA,hE%@
!!+OMriH:4[o*^N!9F1d.B0AKWge*%$`="&!!Uj6k2XWjT`>EOVS'[Y^qn6s63m8cXoJGJrN-7+YHE@2
"Q0:"!"(-[WiN2"W0ps/!QY8s!!gI&k2taaX;\5Ap&GL7G,)LY^V@S+drHW6VZ7,>J>BBOXf\\2`)R?K
VZ7,APH_!cX/i7lD*ea6klAEt#UuP)j6#L`a]m$jf)Q6^'h<eK]=kto`5nrT&\7u2!"B#I7AR5jXf\b4
Z@+G7VuQu)*);s*WX#Q)WhYkk,6jtE#Znq"jlY[[W?(F-[/^=O>`,burkATVcB'[`gAoM!"9BiRS?Mmn
"L#+O'a;JTjo>Pf,\X$PWrB%%U4H/T"02G"!!<@;eDpPj!mG`o^]<Hr"9L0!PeR.3"Mr9k?Oj+:r;Zp'
08$J,XTYi9Q:)"V!!EN_MSH1jWs#AgF=ROk!3?/%.(/+7joXPT4l?=Y!!Em1Mk.N[^BDF'O=p^[!8IPW
'i0duY5YO+YInus!OMk!!!F3EOfGG\Ws#;M;@io,!!<6ea5m6^!o/;7U]:f))J+u3]t_=tbI;mBli=Zu
"9]]bRBHOk"L#>%AJN\pe,Tm[+D[gUWiN2"QZk\!]E%3s#mt=ljlY^c^.&1"!!!9,-?PBWrkATPf;hUT
VZ7,3.X@bgXf\b0a,_hUo`2;u$jne?[]Z[3Wi(Vd.0JB+aT)SbQIb3\jkQda_Z8Wq$P#CTUU%YL_84<J
,H_%B!"0<%JZ,ZPXfnn&?Q>sD$j%&?T<bQ!X/MnM5R@;gVuR)aZIn=%in/)Lj8d!r%07AFKWDSr^V\[.
9e\9n1'0<^#2fL7!"B#J<0O>bXf\bHRklB=oI'bj*sK^cnGj"&+(M:SWN3(tL06&A'(ck>((UPV!!NF'
`ST_=!o9RqUAtW&,\_n2]t_D%a3=2$"jkl((B=HF!"&oXDR$FGXfo%:_">JG`64_ck5`j/$OAA5WiE,#
W1o2[?hIk1A7ejMcN*)-#nM[/gudVGMa]l'706"X+LV:L!!<KWD6X#S!5S*D!$S]L!tR2%V>dRsYOo7%
[/m`TZiC1=06FDsWrT-hT`L,hmJt3+!=ZR=joXSqfC[\rf9t.hh#IIH]C!?6[3<6ao`,"HV!Y8bV&?Q=
!AC)>X7rXqTc109!1iN>!2oGh_#OT=+)ng.mCr\2,2E7O!!3[)R-^pUW#N\Un,NOt20c"cWr]"8g]5q+
!CtQ)joDO$!:p0n*-&(4_>_1O\snbBoT93<N>K#'":\1d]!)+8!Nrj3UnRIS"/2NO't+)F$9`KfVZ*Uu
WNjReoudH[afH9T!4i.323lqqjoaVaTq(eJ!hcDpiW.O0"Vsq-g:tH&^BCm#@m`TT7KQ.B#Km,8!"B/j
K"A(dY-"h,TQs.#oL]0]3sW7q"9g)WLo:TZWiN2'Y]aJboO\/>;[Tr5#oK#aj5oFcep7nu!!**#\Gud@
2ji7=_>_1P[%Dt,#kA&s"6fg5!!EKSDmm+PXTYPN2[or^"p"r4d/`D2"Tf<5I%727Wroc!8IY.p!XK#3
\c;m6!"*\di;Vj?g9*<3!!NEMG0/+KrkATIXFs7ao`2;u%2DmP]rnN?Xfeaf:_s2i!6bEQ!=h>+P,G=\
X/W5"?Q96h!9!na7CV(6k2t[C;$!`urW!E/)HF&g`5'.&]sEo>*s&;?#7EJH[^**=Xo>C'D'9,\!3Q;*
#qTJHUT+6n"K\\Q/-k28_uL)cUtOejk2b*_&BOq1!!EHbTYnkM^BM?aVg(H5YlOP!"U#rhWNiW*XTYf)
IR4OC!!NH?>*kn^ri64&\"Q>+!2ff'&=:](k2tdd]JAUL_>jZ^F2lB#^B:Tp>SPH`g&M3d>-P7/XTPi/
;\leAnc/b$123BYWs#ArAL%AT!!,O,r8n(3G64]C";=k@e&D:#"LaJ4/->/<]`80A3/bPYrN-4+Ui\R"
e,\#!"9TreNM?BP"K8JN0a>8jlMpu<WnI@5!oK"QVuQu,7\%lF^](tO^7Kp:#Q^n)"9g0!Z`sA0"L!hK
#m'Ss\,ZX6*bU/$r2Tt1QUD>bg&TCu!ZQX=rT41C_`tm9kPtZ/`5MVh"MCh%Af@QI%0.-2Y-"k/Xfeq"
CEESl!9jIl'6g:QWiN2#Wj$dn"/c,+!(bMsjlY^de:e@.!!+mmrP&KHO`WVkoDl/s!@P&KXTY])N][a*
!6P9C-DIO>Ws#N9Le/,q!9!nYalNH`!o9h,WW;kq#W9<1^U^M3:_BH&#q;sXXfSRb<#>`6!36)#.B3<I
"L,(C'*dFr_>jehk2tOCCBDQWgAhI9]tCe4BIj:j!:p0q.BK\RUi%ObU&YKKWN*#+I5;62!2BMse)]/8
&*3f)!!WH][\eL2#L*8!!!WHRXKmI:%CH3'!!WHQWN;=O&>&q'f$"+LT)\up-\Q@Ol2\6m"9Bd=E>d1)
c2\"K-*;A3!P8?m!!-aET`G#k!X^Ofg].?a"N19A$o/:]!:9dd"N19A%6b?Y!!<B+!!%TNh>dQ['AWWj
$XJ<"cN*Y=!<`V_!!<<aA.c`[!<WN!!9aCb">3pjT)eij!!gFB!s'L$6/MYF,)4aZ,OPQa!!<67A0Kh1
";b^SUDqban,NOk'iZ.0!!ENrL70(!!!!6%!9!nZ"FuTP!!NB\aN7<hkQ(M\"qaM0f>=s>`;g&B-a&t#
$KD*j"u2FaXf!'0!7:cM!@XFY+p6j*"pHDaLT$sdh#QU<!NnrM!!=UKhQ"Ko#66Zr`n?%m"m,di,_aFY
_8!B$g]6R="tH^Ya(c:ijo>W(?(nO-XecoR!!XmNUiT!>!Tj@e%75cEVlQL0_Z0eifPLcZ!;6Br!bp6E
k,6)s#;s30_oK/`"mH!i%RRJR_Z%:NZm,AIaoDYqXKAe9MCetq!!<EYT>LQ/!N@$u!9*t`.B0ADQujMS
kl:hh+^0c%ri6'p)p86W!!Ld5h7,<'!!4IDh#?F9X2=oC0tP$4^VnB2&GZ=u!"/fQMSmEK^V@LlQl3gB
#Uc^VXf\e)7geS_$3:lGWO/k2XfS\)!#WWS#UcRNX/i(B0aI"E":[nZTW.pk!i_b*l2]N<"jQ,jk1<c"
!!i[Qe)TTQjPPL8!:p0t&UfkR^V@V9QSS^3!!<6_\(1Dk"1!YY#/gKJ%XPmmXf\b>HlW1fmJm;>TXF^"
"0A"j#K-TL&:q!`X/i.O<Y>H$!!=-EPH+S^"0Ah.#/^EG+1gFnk1bh+lMpu7YN5ZE!nD2in,Uo;$4p?q
\A,eoagu-pnGiY&>ee>X^BD-9H7T3O!:'Ul'P48FXf\e8R7.8K!!EKmYIC\6XTYf2G;9B?!!339?i[V6
Ws#DkGV]Nn!!EHXDP*s.Ws#E.NB7B]!!`XehWEt\`(9@trW!!ld,k8h!ogL0^AnTF5DH)J^V@S<N?Ifm
"#Q:e_u7=PY)#sdo`3/8$3rnWYHG"0Y.AZho)Jn7E3QXNriH:(SlQ?W!94%d#u71tWiN2!KL,q8!!Es9
MPI3NWs#T&=W.=\!;QU"8]TlRk1k^rnGiY"LY:egjoWtE!PJI@"!)'@[_KSofW7gYquHWp";G%TbeX4m
"LjkD.g<Td$O%Mf['-U6YK;qZ"SVlu#XkDorN-4*VgL3'qZ+M6$O/&$W2QbtVhJ_8"SVm!"Ya_]WrB%%
WO7gG#3,^:!!`q.hra(YW%%<<!^4<YroO:>W[5aenGin':P>pc^VRe0LEZKo$j/DKd_rr9^V$S(;A-M?
#7ak;WNE;,YQCM**Voa=![)9mZM^g,Ti2X+\c<'J:o^b#X/DbL6jrhk%072EJYT6GX/`@s?lK3Y!!iUU
dH0NLentQ`!!s!be`5fSj3D??k5`m0$O&2.Y.VNa_UttC"8r3&'3i>q_>_1P\X[^k"j[25!"0&jI]0EO
XffR3*s)<?":@JfYcn#-"/UDr#Ia[@#<nldWiN1uM-(Mor;Zs(0Pd5Xri61%[ZW?N[/^Fe^?"G=h52=j
!!56qi;Vj?hlA'0!"]rPPd\9?^rj>q&c`"hPLRPM^BD3RMbt)Q!6>-P(g+#FXf\e;VEG4c!uu9sYcdu-
"0S7k("<6B!#Yk^A>Z?+X/VP*/I)7V(0#m]WiN2#WM<`;]E%[+#6L@NjlYUF7Jm,l$]NZuk2t[QCB;i`
huEi_7Y%Q=^B_["QRu(N`khYh"MC(@.K[0]p](d/8=-E[Xfen2E>gd,ZEX;0"0?i""gJ%;#th2%X/i7s
N_p?7F.K6.Ws#H6M_GF?!";oQk2td[N!fUc7Dn*`joXSK+R]<G!!E?HDO7m4^B;iqai"+m"MV+";@qF[
fDl9],AaB`Xf\b9V6R6&XTPbp:(tABn,Nh!/q^F.X/i7bCO;oVWro?$@2Z-H";@Ngk2lg.[Q\9VroO=E
enP5d!!is%Ln_Vu^Vdne^BD34G:Wjh!4Mq6$qZeiXf\b3Yl:a-Y-3@-"l01)!!j36T!YQ!WhZHjWs#H7
LGK1S!9F1b;TIn]jk8GgjoXSJ,c^qD!!4'i^AGYI]Tu)!VuQl$+Fa0h"0%,R')DU3!!<?NOfJ;Z"0%_r
(?,>5!!+_4qrRq(9?7+j!!3EdRJOZ"\q;64!;?Hp"=&BlXTGM=&Z5U1!YfYNWro/*%KN@+!$_:%!PT!*
!5SX;++;AZrkA`N]t_=rd],bBdK%r#!uP4<^&G,6Y5PI)^3_R<\cD7#!sUu-OT)9dWiE,#Vh%nh!N?&#
!_9NpjoFEFjlY^[K+t<c'+@+*gVgnB^UKN'\\5bpb0b8O!qQE)!!NNUQH-/3riHL5XK/J+YI),M%b^p4
!"oDX=,*TOX/i8(YH+\'Vk%ci%Di,1!"U*CgZ.GYgTe->jlPC@?NI8/!uum0`"Bi#^V.%0:JQbL]YD5!
af@r:YQ+e=<2$Y&riH@(RSl_EZ2Uj.ZF#'/"oA;.!#5i,LS1QGX/`8*>$7PsWiN1rQ"h6@irI=(&cl[n
iTB:adqAa_=juBmk2!*^aT1N)"9gljfYRR%$+ZFI/HPo!FHaB:^B;I$G8@Oc"TSWRS%Pp'XU));GUs"#
.=&#nXTP`5@LBFA"9KH@NMuiW$)t1d3!TX?K>+AbWr\u:!Ak%d!!41<hu;a>iO0m-!!4+Bj8S0Bcs-V:
!6P9E++M#G_#D(NZA)Ekr;Zp0:m8Qk^BDI%VFq*C!9*t]$rWk/Y5PI(T3)^(!!3[.Oo;BbZGD)>!PJL0
!!EWsL7P=BWrfA-(]==9'jdi=ri60uMJjO:e,\J.!s3;bjSn9CenbEb!!310iVqs@hPVa4!;um""@'-B
rP&KHR<L1bqZ$a%/rQF8rkAQPb^:>>!!<9WPdLCk"KnqQ1^<gW!!WNUL:+2_XTGA1&\.lE!>Sh%WrB%%
WO.RD#5\B'#<7sLWrB%$VL(<-oDlf0![4B#roO:AZQ]&C!^+QaroO:3>QNRZhZ+$0I)a@F^V@L`MGau[
!!E<?A;dnq^B;@)Ubp$jpAb:*=0oL9XTP.p%KcG+"9KNaUT4<q"0fn'+1hLU$;,Z6WrB%&Y,#5<!W`&s
"9TW^]<;.6"/^fe)7feS"(oa:k2tdPAc_Q)!Xk%AroO:<VBu*>_>juM8$UFU^q[XnSTH7`o`,@+4bg,O
^V@V$Zrdq&!87D]"ZV@EYHP(1YG?M!#5%s(%R>fQY-"h0YECpPc2dD8$iq;TQDpjaX/NFd1'[CO$Oft,
W2co!W24hi"MFd>+Kj_ak2tP%V^(^3#=QYnk2t[M7(rX/%<:"B^q[XsWf0aenc/jq*H7=R^V9re_:+Gp
"2Y$?#?8gQr2g'r:D*^"!!EHGEO2bGXTP`5C``!Ee,Tm`7;\TqX/i8(TO/Z?o)Jjs,':*gWs#>P8eM0V
!9sOi@ERQkk2Xa(!Ug!i&@($ijoX1^#/C3?/A/k*^V@LnS9$1amf3_*;MMNj^V@Y4\5X*Y!!=@BZ*+).
"0-o&#4V[&!!!U2SZ8ipXff:.2@@>%$6bn8WiN2#[?<6Nmf3_.?a6]4X/i.^C+'8[!6bEJUYY%ojkm6h
li7:mDUIP-k2*I)h#QO:#WBB2^V$e.:D)pn$Nr#(R(9uH^r+<O%`eYK!!+RMriH:*ThcEi!!<HVG..CP
"Knu0AdQBU#UuaRX/`+l>o<88pAbR,2i=`;X/i4qMa[fe!!_';k2Xs*!U0Ri*jsqgk2b*F"TAD@!!bBo
^V,kQ.g"r8!t\CbZMqT?_8@>W!8[\\.BBSQYC.r*kl:bs;P!cg!j8R=cN*Y=#:ZXQWkXEC#jD<k(L!rB
ri6+!M%[]+"OZAn[3GGIm/R1gC"N@H!TACC!!P6n]olP0jo>Jd/:F`$^B(bd_uKriX/r"%''9/r"u1q4
riH4!)=@LV!!OgNX2]2rjo>Jf3Ms(\Wr\t6ec>+<"4uV)#3,[a5LBDl!33s;"p$EFP!]HSj8]B)DO%NB
[3<Kh"T^3fQTtoA!;um&!Zc!VYcX`>`;g&B.BK+A&EEfr"##/'W2lU1o`3;<!PDas!!En$h<(Wj!9jId
!>o>q!oX+_$:09F[j/il"9BH`/Har3"UdnnW2U`k!9sOe!>]H("l]Ld!=_Vo[%nYZ!!*',h#ILYc*,"b
!<W\p!;$6o![DiS+N+6]":bLj!!EHRG)mO<!6P9C":G=h!!EHYR@kP[!4r43,Zr1hdf9Fc3=E.nlMpu)
3=;>X!WaK8!"=J[ZN("-!R^tl!!30)!kJBm!!30*!ho[H!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3Q!!NK_>>S?[g]6:5"V4F1<)4J!!!NKS8O,Zp_uTT5"UdR`69c1M!!NKS8jPou]Dr*C5t47,(&%]g
!"04#]"#;O4"`E"!!("=#lu&-/o\>2\?fE5!;6C!$A#4UWL5Ca.LO)o#lten,@%7KWM<&N!!rs^VPL&R
0I8.SrW't=#lten-!d@EV4^HG!!Fph]tS4?!8@JV"gl"WQ0J>X%%=l@\[f)RY[@t`&CCLS!"8uL)C1KQ
ZaRHU]=2,4!"93gXK/A#V5'\X$Q';p!"8uE'HMRtUSk/mWi/Sh!:Kmr$&,@VVPTuZSPBP0%*APY";MUj
H_I+-Vl$Ae:$M]]2q>^X^&spkL&o0l#:?11Wkc?nXQfcs""6W$4E%pJ]sXrFNX,gq!qZKM!"]/7$3`>d
YHGIN^TBga5W]_H!"]8S3&!$iXKAV$R[eX-"pY7c!;?I)!<`Z2/!c]rX0&Ln1bUX<&*j3,"!0EU0O1TX
WM,ZHGQn?W"4@/Y!<i`4/!?<hW2cnc1b\te0G*@H#6ilEgo#(<+is]g@XNXAhr]4I!;ca($<C>7[(jAh
VPp.5d/X8ZX/<-#^B9fq>W:UA$OB-l8YrPkXHSs0*W#ig!!?&cPFqiV"+iX-/)^I9#Y%EYTrY5nOHPMA
irJNJ"&bDGSc5YlJNZ[Xh#IYKk2t2r@7SZE"T`=<KBD:sjtYQi"&!uXTDlS-Vi[?IfDl9cJt/(7^V@F3
DfI#f!:Tsj4D.iUriH9fHA+c>!"0$JLjuA*XfH5@>oVJt"$L:$M#OFWP'VgNfDl9aD2!G6X/i17>[8<%
!!3N26N6*K?6hJr!:'Uk&j7_Gk2snu"U3QZ%KZ_5/<#FJ]>)+dI"H8BhZ*g4Kn,?"^BhQVJW+LT!!E>V
!"K&5!?uZ-H`O9NU1\:G#2]Cj,B%@FXKARpCirne!!E>n!9jIn!WrHIG'&)/X/hh*D-R;&!"L;nCO<%]
Wg[aI>R:B5!SRPP!!sYa,f]!/PRA*-h#I`q%OTZeiI2=Y"k*G]!Xf>NJY8F8]tV+-@r!Rk!:0[q"&!TF
Tte=RV3m`P"q(^c!"K):#S:g3KV,?IWbG70+Q`Y*"?]os;iRo\X-&$i6j<o$df9j[#m_,ZMh@S"Wi'Q.
=!6W*%Kek"</[fVW/cI`70X&&o`3_H#nTT`KA5A.%06Oj!!i`/8ESaQ<&-Je!:p1#&/lBnXf8G5]=OCt
:HAOD!"KT994+p:]!SB9SM1]o#g<8Q$ks=KR[9KBWW[u45:lp'!"KH%4A;BKX/)#KLF!HD#0[&W$ks@M
R$3o7Vl55+5:lp(!"T&=5!;W2WMlMRQ\Hgt'*cPY#6AmWF2#i=2!"]AK@@]7?>Vq"!7:cV$7@&ZX1,CC
\%&P)-nl/'!!`NF2(Wm[\@;IE"Gn9K*<P'tkl;2!*ZH]!WM6;hWL>R`,ms8E%fmFp,%7INW26;cEZ#i4
"3(<N#Tap:Q)("HUSO85*[V9e!"T)G.3`2rV50fXTlM%l('DDR#&19*WiWdQoDn[e#6qcHXeM/Z(r$%\
!@g#fP.eK=['?fJ$lTZQ!"K,K(F#*NZ+%?W[q%0N(\n'O!"K#P.kH+MWiMqgSl5t1$i0i5";2:cJ#/g:
WiN'p,q9Mc!8dbd!?`pFIAs-BTq.ZP#o!gE!"K,F&K?4nSYN*]UJ`Ef&]k%E!!an+bJ9L+J-#6A#;)F-
XNSqk!Smb2!$)tL5\n!H]XOrDOU2$n!<WN-3300b]>)+]5XRR<`;oN1*>COj<i`@(W0s-%#6=u/"9nrZ
R@B_HXf\!I2(]$B!"'E$1KUNUWM>cHHP-Pa"p"f1""fe*RA[*dQ8:EN#.4F9!mg#_XD<),q#CV5H$mft
k%j_l\c<6H<aoF@^V@IYV4K5=WM6Wr^B9]q@l<0EdJsCS6r$FKriHEfObk8MQ]Ig=XTO&::FX?bl2V>!
7ScaLX/i4\NeS`IP)Pt2Wrmf7;(8^L%KHM0O65T[<E)0_!+\cXroO85!!02%"9D&BFe8TI#cP,F^Ueo<
F<LJ]YQ+e,3,)fXriHHlUogc!C11Kfj8d7$"9CPt@>=c^#a1j]X/KcC?l@/gh>dTd#!`+L#@Wt]k/\#<
#."=(!"T,7!\01hPe"&QO`1R-"TbV'%0H_7+Er$ZWM"0V>Qt61"9GM&%g)t:+Er$YV4DOO>m:?6!UB`u
!!aVh/A@#V,R)KoeGojV%LjA,@L*JN[fGdq#QkD?'P^AI$O<F,!s8o<'a/8I"q([.!!*Q1lN"6k!W`f=
df@Pk!W`Z7])^jk!W`]8UB#lGJcLB&JcLB&JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcO4!!!3'#!!0M.JcGiP!!.cRZiC:71Jp_:1'6#,bQ%hN*&&in)?RVQj8]Ae'I"VB
'EY-3PlM""R`iUfQj*-_XT/P5H**j=H3E%(`;g)MF-2NIE<X;]g].I$OF)j-X8qnn!>VX6^B(D>T`>*(
Qi=)fRK`ThV>pW.PQ%Q_PQg+J]`8%Dro=&nb5g)n"r4,P^V6`PZiKLo"qR'&XfRoob5g,o"q[!!X/_Hh
ZN0Cn"D-`XiG5(d"Vn#O^V6`K"ebo#&!sE#XI07W!4W"5&<j/qWg3h:!7(WJA`i.6CUjH/!!X1;^V@L`
"eku%!"YEuXfRooT`>9.PH1aaQ3HdYYQ+f;k2tW<fDs"n"r4,P^V6`P_#WEo"qR'&XfRooW;u_o"q[!!
X/_HhTE#++k2tW<pAh2n"r4,P^V6`PhuLUo"qR'&XfRooa8joo"q[!!X/_HhYQ41n"D-`XiG5(d#Sj>R
^V6`P!!&bo"qR'&XfRook5`*o"q[!!X/_HhcN)An"D-`XiG5k%lMq,%WP?3^Ws#*r!=kG!Xf\[m"JGf"
%?dcmWg*_T!4)Y.AEN%5C"347!!!&q!XSi;XM;NaX9JY,q?"\;j8]AhQE@9jQij;frW2ru#QP3rX/i7c
"9A5uW;m'5k2tW:oDl?#!u#a1I/JBuG([ND^V7:/F8L@eK5h[i!7(WH$sIKE@L-:SX0&M*XCkf8@KL4E
&C1@>!!<Qp9h5+P#XM1RX/i7h8j<,C!_Yff[fHC-!<EE%!seo2UZU^tV$$hr!rrJ1!!4atd/),id/Lc^
^;&%CrQtbqdEooj[/^7O^;0W_!lMjWriH7+_8Q2e!OsTH!6>-A*JKUPN<kK(VQ6btV2gH1N<5,l,h;tQ
!!/1iqlpF1[+ja*j4UcAqlp1/I_>aV!!4jf_>1nE^B)-dqS3-F3n45h!!+CJpoa\#riH1'poa_#/\M/[
!!4FBW;3CmWrB%#Wi;rnW<&YDZiC-Oiq_U7jo4BBjT4E$qVqRfZiC+\[.q-2^&GbH^%f)<YW)1S_>jTa
Y5#3uXn](#XtJK0g&M.$W;*=lWrB%!Wq`OoVCf^dnGiR7pu)57roO4Bpu)4eZiC.OJ:dZL#_.K6^V@Li
JpmNI!e>kL[/^7Q[E86[!3Z='!jBDWqnN9QZR>VM])VmSV6]s$#I(,,X/`)$Y5>C(Z^rE%!7CiKJZbUB
TEq$]f&l,TetJT1TE1s2aoL`-!XL\Kq`+s<6`Ii8^8jCK3rCu>4#@;P!!*Ei!(ZoP#s1YOXf\\&6odU3
5lsJ9$afs9#WP0J3sdc5TW>,nTKb1or&XpC2?4&`!!JDGk2DW`!6Y?D!<N?#!=8`<WP?3^Ws&J)quHg"
!RUo-!!30%!rN'*!"G9sXfRoo!!<'!!<N;4!;ccq!rN'*!"P3nX/_Hi!!<'!rrT/""D-`XiG8DmUAtK3
WP?3^Ws.Yd])W$GQ`[BkR0:h9df9R_P,kX`Pm+Vsl2Urtk2tW:TE#!-W<BuN^8hF2!!Wt#Xf\[m"muAt
!!X!uX/i7d"kE[s!!Hlqk2C*h!9=+a'res_^8hF7!;lg$&!sE#XI06c!!X!uX/i7d"n_ks!!Hlqk2C+2
!6"pB'res_^8hFV!8RVZ&!sE#XI06o!;-<r&<j/qWg3g]!!Hlqk2C+Q!2]`#'res_^8hFu!58F;&!sE#
XI079!7h,S&<j/qWg3gq!:9ahA`i.6CWZY/!!X1;^V@L`"g\3t!!Wt#Xf\[m"ebo"&<j/qWg3VgTE#++
k2tW<klA3n"r4,P^V6`PdK%Vo"qR'&XfRoo\cCpo"q[!!X/_HhU&YAt!+k<TiG5(d!>_d9^B(G?nGofo
!>(_!XT=pqf`9+o!>1^uWr\Ul_#WBn!-/##!.(RDq#CU,Eg2ZJEW`!8"q"guLl5gIp].;o"po18P*0S`
huLRn":@jh6OCd5g&M<Y%2]co%KWd6nc/js%2T]o%0E4'#Qkhc*?Ppr!!%TNJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcN%UJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&Y5eV)"U=o/
!<r\_!65'@!<`W*"T\f1`;ncq!W`H/r<33+"K_Zc!!k!LX/;emW2kRK!2ol!*g)liPQI/=D<(]4!!44&
Qi<*KP*U"0!7q2U<GboE>[_C^ZiK[t"'M:[W;=73]9nkG-E7%J7uVk^qlL%(X+PtM*3&u@8W%qZqPsat
Jq/1gmf9s"!^nDFqW7n*1+jj'!8%8X$Zq,TZG4/bN.q7i$&OD2^;%@SH\+o-!:Tsp#[hRgU91PsGAmJ'
$$1$GXKAR_B5Tib!8.>Y$".^hSu\ogG&RA'$$:-FWiN+VB5KfJ!:Tso"r.c8k2sB!'`K*Y)APs)k1`<4
'!hQF.rAaG]=khZQ_8g/&.AFG$k"t_T:`U+]rtpX=q8%B$m8\JCT=J:SUlc8$jce<$j\><Mi4R9XIN'b
8IG@q]`8H`>#/t4Wi2A:MeWY,r<`r>.><S6UoC>];,g-qj8d[0#m12=c.pTn01QNJ!!kSO6Ef.uHiX8j
!:^%!!]j(GR_-2BXK/@-&f;/U!"K)H(F4sDWO'4K[W+B'+hn!^!\QYrKr_5Q#+M$J9+DRBq>_!.&.oq*
T9l=QX/B5V4;km6%K\7H3.n0-V3mO49aqaDq>^g(&J6"+SWf_EW!&l$0Kg>d!!Y=,bJ&.6BCZ$-*J7pg
c-<6llN#H8%Lk!:5d%Z,\?rcF1ER_Go)K76,U$s4\@/oV\<.m`+U$L!m/R7q+riD0ri$*uWg>%L)$fa5
%M'Qt<iN'qWi;tE)'Be"`W-)J,98QIR\cgUTqmi!(`<SM!"KMZ)HW`1U8=Z]HPmqE"Mt-CI_N"jU:+V%
!;um&!jAl.['-_[`W-JL%MB1b['[9R]Y0CW/g9Q]%LOg@7^0V=]!SlD/d;spquG.F%KQnH$<<muVQ-\u
H6=FMli7M$,9o1?XfJItV3W>1%gM(pl2V:p$OmDDTqS3YWMt1d,oZ+M%L=:(31R"IVP'WG,mFkabQ.VB
#6LcnWQW]>,io"1J`G"iQ_7g3!"K#2!">4!YdqN`]OWof)>!q#!"K&_6p@'S^V7(ZX^_>2!n.,Z!<N6.
JY8X7Xf\X#.lA"&!!r]O2)0feXfS=j"I`*d!!:UL%KQV2$%SS:V5pYr;CaX=jo>km,r[T3X/i4nS=!.R
!!;QgiW'3:O+G%-k0X4e!!bCDk1uDUErj_irW!<XVP^9)^V@$O>Ytda!"1#\<d_Tq^UTu9K`]a($R1du
PcV!hTL)79#5A2^!"0`@6t`U'Xf7;GDZeJh$R:apOf>C^SO6(;#2fIi!#n^'BW8&5Ul1CS"4I5S<`iV]
k2qTU!!rZ+$esh+Yt/:;o`3tO%:>ZdWP?3^QYUn9!!!&U!"Ar/&8?B7YeRrbQ]d@[i;i]S"&+JqQi=)k
JlcPC!!!&U!"Ar/$rpbIT<55rJphngg&MRVL3\r_X/^_QAiB\i!WE)W!"Ar/$rpeJS?&]hJUMbef`2:B
,%Tiuh_>3?iW/WO#lt>=J`c+?0e":%!"KN^It+i?^:9,\L*cs-"5!S^!<r`8;Ncp3]t_4SFTHtfi;a>q
@;9PRXfSOHF`AB'"pEQY%KQb<#XWr]O0,OcO'ucflN$YZ%LZ][C8%].V07$$*<QKJfDlB^"pP?#I<CLJ
X/V%dC-UVV#mLkLS*&\:*ZZ$q!7CiQ-Q5V4k1WE3%c[Nr/SeOA]=kk\R\P?2%KHRn!:'Up#7q>$R\QRb
]tLXZ?<.[%!"'oN8SkH/X.4m*C&SG>"47)L"UkeG.#!bBVlZtl:.mtakPtr7=%[>.WMl5=NbSJ#!!CUK
%L*=K.#!Y=UT(5_:JF:fp&OX`#m()>ceH]l2c:+,!!bGY8?14pJH=p6$N_iO]=PMUXfY\?)ZUDk!"8rG
)CC<HXg5OL[W;fL!;6C$![*K'X/MPXRRRf%$d&GX";)=fF.o%sX/`()#jVI!![*E"W2,iKQq.c'$d&GX
!tc4fFInkkW2QJ!#jD<n8'\ubI!Kep!8[\\)No0+`5nq_l2V+uQbBi<V^ir8#gNGD!!j2b+_/!k\[GW+
!!rp^XJ`(`+<)7(_Z0cK*Z7cQW<&kcr;c9d#ml-]USa1s)]K"!!!j#T)H!<,V4pNG!!Ft*WkMfP!!E>+
]tUK2!!Nq/SLcH;klB35"UH_6<NCB1!!NdmLE\#^d/`M5"U61s7%%NM!!NdkL*@r^]Dr!;,:*C[Q=K1[
!E).i!!-jAli7+f"=tS%!!3<S*:!S+"<nWK!6P9C"<\HF!!39I(=`EE!!3<H(8Lq^!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3lNU!.k3&!.k3&!.k3&!.k3&!.k40!!EWh4Ve-t!;QTs"<&9d
ScAlp%h]!Gp&K[E_uL&I<ggnNX,UC8a8juq#R3eHQD&tK6kcd)oDf.".:R[KE`aOmT`>349Md8Jr;`\p
$O^Y)_mutR[Gf,/#3c-%!"0*7d^$'\YIE,V63Ya:ec6'\06EncW2cG6BIEtn!:0[jH.1Nue]j4:U]:NR
gV^:M#B4g;Q+5=d%As17.abT&XH]!QYHZJb"RuK$!"9ceUT^hbS=ZROFuff[!6tQOFkP8s1d>iE^jZ="
!9X=k6G^6`-4^_/115gKMAN8m%fcSdYcNI.'GMK=BXkuq$`F%70r1kJ3YE2M4a*<J<"&L%Y5eXUffo<6
!t'F9#N,U'!!>R"[70un":-H#U4:8bhuEj:XK"D\!!ET\IA1>Y!;HNs26*TB"9&9(!XpfMZ!F7-!SY<a
!!=[C#QUh(""/u362CQ`(ilH[klAO"""1+K1&:kP(O)iUd/_i"""Cp`0)GVO!@3eb-g1QH!!/M+p](=<
C!Qe5!!NO&N4MmoqZ$[BT;B$tnc/gu=2D:%"8i-$!?dbnW;m),>,Z*P"TAB)!!!$FM/]Bn!WoDip](=l
2"(FU!!`[0P,bF#2[B<^":&"k3s""7dJsLXAZ2\t<YYZ7!!EKtHRJp2!9sOh#[<LM?RlTfrW!$)<,r\O
!!<=8E[:J]!<F=C!"f5J8Jj%&T<"TDF?L*6%!AEOp].]%&HNJ-(bpQ=To+A,,6@iQ?A&O@!6kKU!=9YV
5`1&8HsniD!WW[/AHg-ThuEp,;FWP[!W<!!"<jrKr;[E17DL2L&117sQ+<lL?oa=K!iuA8!BIJ,!>$PW
Kr2/5Dc&$)Plh!dXoK%7.V]b%'JO0[Mf3QD2%F,U"6T[&!!#Of!!r]V>YH^[!!!U4c2cZ#&ji[3"98E,
&h$LpMmp13Zoo'(\H):&&N-=[!WW3+'IHV'V7W4iV(DqR!"1`S70*Aj$Pb="Ngg5n?]LEl!s,J'!/(+J
"p#oZ==SHHm/Xj#!tB7a<r;q+";*1YC6loZP>s.I"5<h,!!<XFYseKi$O7@q96?r;ZY)?B$c2o3!!<p^
IkCU!%06bN/Q.)!SR5)F'a4WA!!<dK!!)iq"T]<pau9O*!!=pkh+[YF$3LutY]bP`^nk9RqZ+&)""C\,
3r/g`";c<]FcEN6H8ZAq!7(WJ!A'OW+Sl'F#TJ#fI@?I881P+l!9F1]ZZGj@"s1#d5'KL(YlOb'"pf1`
flnSEqu@$]_Pn1j=a,jiCp3mD#\LH`=:><0!!jL0RM[;OGEJU"BWqI@$#uPc3sl/h!!s6`RNF+eEKZht
l2\g(!t3,)!Vl^$8TFe2!Ye(C#1<M/!#5MHHb%>3R:.g!03uB#Du]kA%kh3T\cDI)'`engY.0pL5o11M
4.N'`!!!351LNGO!"ArFMPled;'c\[$mTVk#DN6Z#8f^=5HXth+4Iko%f?;.4L>k$!!!/k!58FA'm#hP
c.g(G^tQYb'`A"5!sf.b!7h,Y'Pk(]]Y0_qQb'Sq)>sO:!sf,#!5JRD!?citV3cd_I!gU?Ua5m=!X/l7
fDsJ&$51)-`J75Z98Cu3\,bps$4TacS>ia%Z_NUYV#UW/=IQ4p#-tG;Z(+VkVZ7,+&m(X7X/;hnYc^_&
n,Tls#m"&1e(EI/b]<g:!6tQN"WL*NI#!/[.gWlijo>\l+&@N^W1\2_#,_J#!!riV@Z6\BQ@_7*U&Y>t
+\H0:&bH(*!!NK4'-%\lg]5:n"pYYS)\re^`;n]o"pb\Q*Yo1fXT3qQJcLB&JcLB&JcLB&ec5aT('UoB
mJm:j$3Zn""9Si2!!%TNhZ*`Z#pTQ/!!=!gS/fiTpAb9r"V:dm!!<F)IMKg%!s&Q3!qu]Y!!<EmF;CJK
!rr<&-H#le!@OaM!oO%]26#9>,OPQa!!<6AJMuBc"=T8=V&Rtcn,NRl)Jgi'huElh<KNgl_Z0Z_r;bdV
!Z8#0_uKrA28e*h([(ks!!XBW^s9a(+iOEb!@b+T=qTcp"q!l#]re.Lo`3A>"T^'IJ2IGh!!WTjG*]/&
)VkDV!!9uX!T3q[;T.On_uL#B28-o_UH8hG!!iWaUsm)o^U56?!9jIf.BK`!M'E/c!!as#XKA\.V&@2O
"t?OLIpO6!jo>W!=H]V^X.^HL!!C^+RiLhrp&G71RbQlbVo&K>28-c@_ocj)kl:i'?d$[/rkAK>,5VA_
!!asSXfnq$6Nu]S!t.N0[f*</WZ0suiW'34WN2tmJhdJn!!ENbAt#b!Wr\t7b5h><"OlMmcX>i7!_C;h
roO3]_Z0rq[^s2f_:4Aaq#L$e$Ni>eaMG[,^V7+?(W6:Z,c\#LXff!A'C5]+"<_ilYcb+1XKA<!(;p1Y
-`F#FX/Lh@&*s9"!Z,12V5aEo!LOPc!87DW_;aS=gkGpq!!j=EgZ7MZjP4Lt!:p0t$Xe[t^V@S1[nI"p
!!<C%d)Q!u"0$T("2k0G$"1HMXf\b=TIp3Hmf3Ik5esS+rN-1'N&1[U!"'-IXf/;$W01a:"7H3m![VWV
Wr8t#Z(sGa_Z0oFT&8\mhmPB-!!6*Cjo+<Ba[5Frdf9IU4b0m<^B;BoN>M*b!uum;_u7=Q[uFc6!n[M>
!"/f67@^H]Xfeq0AIJ#.!tAVPZMgm.YGb_G"2b*?!=M*tXfSS(WhYGA#Oqcr#XX!8rMp("Y]:rk^]4UK
g#hGYeU[kn!!E9%!e/i$joXJ'#/:-F"Y"S^]"c"qeZ(Cs!!EEuZHC&`^BD9CIlRf-!6Y?L"YFl"Y-"h-
]TXT3!!=m6Za'J2"0[YE#2K:>!"&oeNjbpfX/V.Z$hOE%!?Q!CVZ!Ot\"#Sk`;o]6#9^A4k2tR()=[\.
/%+75joXYa5.gk'!>&+eYeRrhc+\!4quHWp"!E!<`r3XT[$5&=!keRA!t\A2Z)t.3\u%t'pAb=,@C!)>
riH=,Tk,;KqZ+M6$Nh;PV5LApW0hos"SVm!#sij2WrB%%WNp^l"QKL8!!iUUgZIYX_cQs4!!<:6d,k8h
!o8\?aT1i2$3`><V8'd\^XJu7q>^X'9rcUWrkATJSqK$.\Guj>5G+sWXfec-YC8"u!!EB[KY=SfXTYkj
3=,_t!"&riT=:l%WMbhW')DS;"!VE>VlHeuWje<`%Ka-?#?T".k2b9b'))A3,Hfh_k2t[@6KS9q!"/iK
C8JMU^VS.56jW_k$mBrH_na%%]XF/7(';e^kl:eg+)IYLXTQ,D1^![V!u,"JY5YO,Y-":1)$IDK$Nql7
Y,\P'WL79?!rW*-$:T-7WiN2#Wj-jk"gn=8';"1Ek2=*Aq>^^$@F=,tk2ZTsL^UNh&.1R]ZFmrf`6`cN
!!buqd)#^r"M:I]2$iOKa8cb[5,>?_Xff"F;\&j2.uh?JrN-1.P;W`s!9!n[!>.bpri6C*U3]08!!FKT
OJi)Y"KJSi7h!$1p&G><gYq;Ue8bTg!!4CPh#?F;il4@5!8mhm""nbi^;%G!a0J!Ie%ri7^V7=>?5NaT
!;HNr">#/+riHF.Y)Ff([BHe5XTY`#AebHR!"K5hR(95tX/DLq)E*&@WW&q$Wk<Nq"g7n=0Z)l4k2*Zm
!!%#jj6#Lch3A97!5JR;!>AOn[/RfB`m)oJrkATLVLg`4f)XG'"9K?=U9OX!"0oMPY5PI)Z]$[G^B!a'
"9TQRXf26""/'jmVuE_"WiMRW%BKO4!dWYbjojhhCQREPjoXYh5cOei"YOq\^;%G!_#D(O\qa`5!qcQ&
!!<H[K<Y?W!O/d+XTPJ3)?\dqcN"%Q22f9LWr]&qri61%]l"ko`;o!""t$qCk2tIWroO:@O9hler;Zm0
HbTBl"1X(;#H%P'&8nTHXTPMF2@0-ZY5eY+(kJ^`Wre2E$fV0*!!*qqqrRq!-HH2E!!3g6W;=71]9+kR
!;?Hp"u_V>XT<YbVZ6c%+EI=Z"/K?8!2]_r2>ZG9_\;25_#OQkS_D-`^B(pYrkAQb`F]V.!8.>S,^?]'
riHI/Y-"h/]phb(\cD7#!tJ:^T)PbrWN*#"ViGRD!iZ/$%slFujoFBEj6#LZXuiW`";kC\cb]Uq$aGb[
[Cj8i_r-b4"nM`,!##]&Ye.'@Xf\b-VQ-f$YHZE")Znaoe,TXU2/AMVWrB%+W2QetX/VnA<"oAN!9sOp
8&4$Dk2t3QO4E=Rj40(tXoJS*0;6\,&\u/q]W?K7/UO/$^V@V$`+'7\!#6YsXfnq1Xfe^b0e8*gXKAV/
YF.W^qZ+&)%1uR*VQ$VsWir*\30LBBWs#>pHRT-Y!6kKV%A2D8k2kXB5l^mA`S]h?iQFp:!9aCp&6@&s
^q[Xu[u=T-!WWs=KtI?!"Mri^-N^[U"98Wj_6a*B$*LL@(]sdS?)+J"XTPZGKbUin"9p>bSuVdj#cXqE
*WuT`C;9_J!N:ML7hN!+#XcYmk2td^QNd<f!X+A8roO:9OUULTaoDMtUVjtI^B:N^2@06]!sgZ8]DfPJ
_8Ns"%+P@;!!F*[Z*CJ1XTFJ@#lO`*#r@16riH=,ZC*fY]`@m/";4n*UoOEp"0eL_%/g/.$:'uYri61#
T8#''e,\J.!thTfjo4BCbs2"(!B8d4joXPa>e0q6!!<L2bK0Xs"Lj@t(]sR7"9KH^O1G5(!n<hl\Gu^7
8@>Z"XTYi+?6'.F!!!*')K3BnriH:([YPp6!!<9IBqbL+"K8SF,6RfC"9futYc7W&"/q&J$M4>:!!,X/
rT41=P6Ua]!Y`'%roO:9Nt0nEhZ*a:S'8kN^BD9BIlRf/!!<^)K<bEj"Mi9k9`rB8pAb:4EP8dYXTPee
3XGH[!tJ=uWrB+&Y.L2Y])VsG@u$_Wri644QTkr[!;ZZu!>8D;Yl:[+W0_r_!P8=;'UI80k2tdD4S/UT
!G'a[joXGV;#:70!!<[?a2n4o"LXG%(BX70$O%l$VRjOW^q[^4*p*IV!"9*.Uogf&Xf\asB,q-J!"0#\
EiuRIXfee!<=R4Rnc0(#-uP`YWiN2#Z?@Aoo`,@)3/al;X/i4tM*D3X!!Yj2jlPXeg]<$7nGih8\DlZ5
jP+GN^An?KN8qkU^BD->KJs2-!!WH8=H0T#^BMBefVgq=_>jZGDpu#jXTYnk3=#ZW!!E?7>-+h(XTQ1h
.Kf,>e,Tmc>C*$DX/i8.Psl,`o)Jmr'47lDri61#NE[D(f)Y+:#RljFjQ>U`_a3\j!WnP:roO::Tc1]H
!\_7'#J\$e\<UG:!q-*t#<.+5]>)+raNJQE!Q4s?,HJ#NriH9qC)-sB!!N?&$9=0HriH=+Za!19_Z1#i
USt2nWiECQ*!G^1$OT;!Z)Xk*WLe>t$24GD!!g3qjlY[ZNsk7R#=lbmk2t[F@GLqF!!kHq^V@CVJi*i#
!"/lG@#qb0^V@S3U(YNIr;ZjIXT#=(Z'.!Nli7Cq)I]eNXKAY.[s\Y&!!k$QX/i8&Q9u)S!;?I$"Wqce
WiN2#W01*b_Z0kjk2t[E6g+LU#FO?.k2kC!&cMdM!!bBo^V#M2(BWh$!sgf3W;aO5^qUuS!8[\\.BBSP
W+?_Ikl:ek2N+[8XT>C;cN*Y=#:ZXQX1WKk"R,mg$U(;jri6+#P8;%9"OZAjQj<Hfli7&Qbl6`*j,V%X
"p$Wq]Sf&[jo>Jb)K2GN^B(bd`;g)C.]]Y;71&)V!s0H`W;`n"VA\e%fDl*V.B0Aa=pjBl!sBm7])J`2
U)MS_mJm=?iHjJ`!?T5ZjoDC!!!WHWMh3G^!9=+a&QFXj^U><)!!NBU]S%X:kQ(M\"qj_.ZE9uA`;g&B
.C"sp#NGdg*+>V?X.gO*!7(WGX>Ji8"9EJqk,I,9kPt\t9c3uj!!NNVFe,rd`;g#@'NQ+Ri;a#c0ScX*
*S^YZ!!<d1*s:L&"p"uaOMI_5_uKf<!Sm_W/]4g1!!*-)lN$PW"9K3ELE+54!WrW-hZ*c](LVk2qZ+b=
!WiN+hZ*c]*.=%hirH[k!=Cd.!7LoL$R#_\!:'Ud%3>bF!!*W[!!\&UgAh9V"p*Q\!s1)N&CLRM!!30'
!T!eY!?!g&_Z9];q>fUW!s&ug$_dX7!!<6;>TDW$":%cC[j(>BeGo[P$p>*X!!EH]R%>8M!:9ag!=CIe
hZ*c^-#\k__#W9k!BkMB!!E<[`2OsG!;HNt)hQqa[j&ck"9BmKG7`^5"Uo(kY,E<7!6tQI!@O+7$/kjf
$9iU0UDr+kj8]4@'Aicl!diS$`rQ)="p$Wrb/6jRjT#Mf::\3X^U56(!!NBRXKerhnc87]#6HB:Z*CF-
)8uRZ!@t.A?lA#*#m)/hT;JZ_)?9cV!!:Wg2;nN<36'k<Vre!9!!Y<n^rFHY.-CR4)Mm"_rkAKA+jU/^
!!XmQY-kQJ&*Eoo$u`cVXT>79_uKujWMuML=:+j)m/R4l4FF%*Wr\n4_Z0hejO0%qjT#>bFk?WT!2m^7
!B.Xj^B2Zf39gJH#?@hP_u@CP]qun>!7q2U.]ohUXfdO(l2Uqg09!cQrN-+**7b,Y!!asPX/`1k@1hc)
"9BllNMQQS!ii+9_Z0hpk2kR6!$UM*!].1;roO7CZ,6PJ*gj"@^VJ"1A/4J3";Q^A^qfra"1XJ9$cE#O
(R;8.Xff",:'g4e"V>LNXfei+XTG_P$M=DG!!sL4WN*"uSSp:em/RM!6%Pr5WiN2#]64P;!9X=d?e=?#
il4LR!!rdFg#V8Wk2*<Y_uL2G"!VlV]"c%ueX8AunGi[o0;-k2rkAWLZ&DHd!Sd\>!"/lWOg_?nY->fc
+Th06"9BU$`if<C"g4tl<t,5L!"/r\KsRh\WMG2N('3q*"9B*9Ml?WU"feW)@h/XX!!b$mi9'+OQOiZf
qZ$[6ZeYQB"6@pC!l+dC&Rgm8]t_A$a]&E7!!Em=^<+1i^BD*7FX..d!6G3K!>fUMXKAV.YbsSdo)Jn!
4e]?griH=)[=9J-i;hg:$3Cle\uMd2WM+,Rnc/dq06*J\rMp%,Lbf:X!;?Hu%%uG<k2XQOmf3DWalEB_
!oCI4]`8BF3J4EG^V@\AI2`(bq#Cg).@Ac&^q[Xt\;*ig]`8BI30gbOXf\kS@LDc.";u6mY-.c+#-47o
%06G/^]4]N8=ZTXX/i%<3XPHZ$kc9iVQ$VsWiWX9%g1tpec5qIdcBQQeo_&c!!rsqgZ7MZjk+STblI24
$Nh;eR_6DM_8Nl["Si$#%pZrl_#D(O]:!df"hOa<!uc[#XfVc/Yd'3>"Si$"#!8lnrN-4*\9T>(])W3B
*d=`dX/i+hF<(JZ!!EKVDOmg,Wr]6)!fAZ:\GujN`oH4DhSD2E!!5^4iVqs@j1QQ"!6tQH&m'n%rkAQQ
epn)(!!=aBb/!tj"LiqY%0=oXjo>Js?(7qpXTP`?D$Be:";c6aYHIl,"K\1k&-9BCrW!!4A]4PJ"/U9%
"oA9&&PnReWrB%%XL;4F"1J73"FoD0joX+R!r2ft%%#ZJjo4BDg26r!!"&ucJZ?Du^V\Qh/cG_Q$sgWm
_#D(O]9m[j"n2N3!!<K\IBrjS"0p!t)?'U<"[oE"rN-4*[<!o(fDsb.$4K4WW2co!V1_bVrW!''-uYNR
ri61%Z\ULD^]=!,#:Rp[k2tKl&,Q>.8\X6ajoXSR)mTGO!Y]F.\%f\nb.(mg$n7Uf`5'.&^93/d%0Ej9
&-EVcXfSY,YIKf^";Z!_Z`a;0"KS+m&-MV+^&S6<(j*IjWsP_lGV0%+=,WfPri61*X&^#=h>l%*#7dNa
k2tU:6N-rk%?&`sk2tdSB*#pNli7G%7Z"4Z^VI\9P-<3GrkATGSTZCbY5eV58WXOcY-"k0\8dV=Xfee.
Y,Zb"#-S"@%T]I0WiN+rInsRAWiE,#WO7^B"oA;+!"`2Sj6#FTGmYn4i8s+`i3=Kb!6bEU"<)*?ZbO8k
b/M02^V-_,:(%-G!9=+^"s.`eriH7*\[249"/AX%"0qq)!"oJ`HEO?MX/DDZWiN2#YG5>;"02D5&Ydt@
k1mr'j6#Lcctrd`!36)(#W%4K^V@S`^BD6FC*<`C!5nj>!=:]LriHI/Y-"h,TQ_[ecN)`#%g!2/Y,\P'
WN*#"Wih12"h+L%!"*#nk2tadk2tBf)U&39!!3d`^AGYH[r<%g!:p0k#\X"9!iB04V>pZ*CT@94!2op.
&Z#I.%H@9I!O`3t!58F9!^j0=^AGYI_8^m?e,\&"!s0^#_>:89Ycgk/]E%@""9KH?Ju\^K"/L#s#H%P'
'o_2MjoO%4VuQr4IFlKSrkAK>\,O,E_pu7\oDlB$":/SVY-7i,!O/d,XTPf>VCgR'ci=1O1j5Xlri6='
W2lu!UlSOi_uSs#!s*>ch>ZOAg#2#Timt+UX8i5$"&5l>_u@CZ]oR/UPISBB^raKF+0GSG.#Y[BrN-I4
H#]phXf\e:Y#l#/!3uS,+*!O@ri6I-]RkaDWN3)!RtjZ@jT*C&!\^t9roOUMYSn=UiTB:_b]s<7!9=+^
(OXZKrkA`QZ&VWh%7uDSrP&H`YsJK#!;lg,%:u`EY-+n/YEr/t$r*2iXTYf/[#[,M!"o;lH`!gCX/i4s
@1a&MU9Uc"WWT5b>SF=A'EMdojlPXdfOFs_!!-BMk2td]XWQm0`rH5J9;L.UrkAfMO`i&T!!!0IDkR*E
"Mi4,Fsbf@hZ*c].Yc$KriHg7Y^e,+!!!3NG,24AXff4K<"?YCpAb?u,AN"1WrB%*]7VjD!!!6TNO&Pa
"K@i38IDd(#UQS+jQ>U]YT`uGrW!3DUZLY#ilPg6[/^URJ'l$H^V@FeN)'f^r;[6,%8`b*]YD7tbI'eB
p]/,1$klsEXKSb.Y,n!i%0HJ.$j$l3Ts(W$Y-"j]1^)_:f`2Ed4as?/X/i8$XCVkEr;[3-'O7Q8WiN+t
Rq!GY!:Tsp!b'^@k2t^SCBF;3#Q]q@j6#FY[32sZ":.,ke\M1!!P"KuF<Lh`!!EHZH_nFT^B;I/EtQ"a
!sBs9`Vch?[=0>)q#CO%2P@:TriH=0bZG,N]Dr'9+Bsc&ri61%Z\^C@q#Cd.3gHnMX/i7nD`nBi!7CiK
+L9f%joXDM,4tpA8BToRk2ap%!RCc5!"0TncG@<2^V7739FLOo$iq)NR(pAM^VIdQ,QYUZ!tA/.Y5kd*
XTY\q;%3R#!!EB@A"g()XTYi1D@lo`!!EWlLo.0MWroe9%0Q>)"9TTn_5dL8"/h`!%(lQH!IWP[k2tdY
E<5Y2#R[HjjlY^]\.J*/ci=1O34I>OrkATKRWTnZo)Jju2iG$@^B;<f<!CtUkPt_f-E+VYriH=+\9B8(
o)Jju23tKFXTP_r2?Uer"TST=<KO6[Ws#H*M_GD-!!<ZsR]-1c"/Bf["PEe<!!4COhYuX=j1lc*!!,sQ
rT4.(5JI1#,dtb0rkATFJPZdVnGiXn,]f(G^B;C&N[2IA!udf?YPkR*Skoq!o`4pj!s9]pZ2Ld,YJ+ue
_>jZWNh*-JWs#H2=;(f,!!<BPM8T:m"/UK@$Ma\D!!7)bir8'AgM6iW!!+:SrT414J-b'5iW'!9]`,YK
\sRRi"mu?n!YSFkYPu9>_8iui#g35E!!t'SY-"h/Z>qT&mJm@k'N1:%riH=,Z]dQV_uL)lW2co!WOIaC
"o85l!!EB@@]67)Ws#>jFXI:/!!^d2k2t[6*9mM*!b0j^joaMS3rm.u#W990^8m&d%0Ghq"9g2tO1G8)
!lMhml2]Q=!@b)KXTP.p%g2+t"9pE-Z)mr,!jA@3dK&k=#UuaRX0AR)(^01*"9AfbK=_&_"0//A%`88M
dH9Q<B`\25l2V&4YMSF(jOI)E!!Y<o^86'#"m>pe!=o6/MRWT"!P'Al!!XmRXK$h&#3Z$n!teS*Wi`D+
V]#")e,T\%WN3S"0EpY?#m1cL_QBl>Wgt$\!:'Uee)\P(j8]AcLt_"RjeK`o!s(3^V?1HH!Ta:d#<IdL
\%f<o`;g)C/[;9g)Zo@+q>^a,5)ZPHXecoS!!WHRVQu"("6BLf$WF+*W2lU1p]/M<!n4Xki;a!ZcJ[i_
hZ2d="9B`n8-n2T"p5ZQMRg/=a8l2>"T]s@9F([Z!!WTBFM4]P)8uRZ!?dS&$3Kbunc/ju+EOokUDh#M
!(>ZD!tDBfWr<"<!!3?@"lB:_#X=$D-0G9b!!3?A#2]C`$pTrI*R=`Z!!3?B#2]C`$V\C<*4Gq2!!-f&
ScAln""[XhScAir.od/K!3lM+"upH4ec<_j!!Bn7huEf\#Qgk'p](?u$O!"#!X9):o`0RDJcN%UJcLB&
JcLB&JcLB&JcLB&JcLB&JcNmm"9K5^+VMNiqu?j')^HI3lMq%i%ilMt\c;j9'HItqo)SRd"9T/S)@a7X
"9fM[(C8aqWW3;5QasVq"U#,5iW.p;#QY)7!^<p#Z<Z\q#RZ-_WJ:W[#6N$Jq#C[$"9nr_TrOhZlMq1s
J>T,s"U#&3_>jiB"U5&aSu/)Qq>g$c"#%C"41P=mP.m1G!!j+7^V@Fd[&bXl!!iUA\$<EW^V+UP!!it!
Xf\[tUm`@h!87DU!Ec:nW;`n!>jD@q$^.QkWL]]K*mjuY!!iU.URe3]X/TCi!!Zurk1YWXDnl>X"0@Qc
k2tG&lMq%j3a>LErkAQ;USq\D!"0=#X/!2>^U\,T<ZgW-!<atU8jIh(XTP)TQ;>R%$O_BNOK,FbWE)2N
)!_/)">*;5IK$8LR>mA,o)R>A$OhHMNhi_VV,oiM)!:l!.K8H3H;@uNgApU@#:XLf[cZ_d!p9On!X&TN
H$"PH^V@1:P^j(d!!bELP+K>$]r;3OG[(XY"9Rig%Kch:*FrPmWNE;!H%0T7cN"G*K7/WXXfRji@S-t/
"9S&mqZ%*."9TWS?tuO=X.acfC^88d%P*-ZLoIGSP?26f#m(52jo>\o"qJB0k+EkL&,cLU!!k>-5ge`K
AHE1t!"K&9#7u-HN30h.]8:NS0^/T*!"K39J97X&^:TnmO\5i`"lfRm!X8f:@Y&ZjXKALC?"YJ7!!EKr
CLE82XfSOYFF-+R"pO#e%KZh=$tFg2R&R*`Ea<<)ec60a8ShdpX/`(OFaH7T"pOSum/RG!0-,,ij38DE
$e#(]%gH"qiQXM(,hi;$#S%AF#cOMt]=khK:cR//%1Z*NZG!oZU8F/&$Od4-!:Bgq"pt`+QB7H5X/h.D
/D:(5$9VLdXK/4ZPCFVZ$3f2b"9o5B7?Rn8PGbCYLd<WH!"B<!>b7poU5Y1_*XN,VfDl+b;.\#(cU.(#
kPthkPhXTb8ldLn!"B,F&1aZeYdh<G2D6lniW')^)EKKd$+[[TZ*]&n&Inln!"B,B$m:h5TW5&\.O6DI
iW'Gh'J1P1WiMthUhgGK$3Kf!j8]Vn%1FABURe3ZPpn"-#N>^n!>I+1=/MpiSY9j.%1<6l!;HNt?E/ag
c"Yl3"p2N`SVrjHcN"IV&/Q@A]t1ee[T<bV%KHLo!!E?@)&n_;]*5jS:(nBMcN"CT$kX7pX/i8$VF:_+
$KqHi!sB8N'RQkZWs#7_%hK#m!"Ar;&Jf>bW2QVg7gBh<kPt_f',)+-rhfpuTfru!#ke8L!!O.i`5ort
huEp+bJqQHS([l1!"BAZCVIQr]"#83!!EN.mf3e!#6?E\]",Jf^T]L0#06cI#oHaFXU)#.WN(7E"9ekq
!"B&7!@"/9WiN8(TI(3Sa8cYV(g*f=WMlYhH2n'P!qH?j!"B#7!@+,3VPpMqSL5!R`W-5GiTAk8]s]3L
!!\"h^<kp&LA(\m!"08u3(pZo^V-kWVAen'"'i4<[JmoDROUEN!oO(?!"0,e/3Kc2XfS.hP8*Hc"%oA^
V>dS"Kci&n!ltB?!"0/g/Nof.X/VV\O;.-`"&,DZU&M(qK-2il!l+d?Vrm-jJWs:3!;6BoVMLoEjo@9R
!"Ar/#!uZrS%l_PX.uOkp&GR/M6!AZ^V@C%9j8qE!<N0"`;g>J!!Y8R6AM\FXI5066M:Bh#BH5nVQHu$
?T^n"!!*,_!8RVa!<<<\9gj`:X/_MGO@8dB%L7$?N2!ARW*hb\*<6*@c2d;5#!:u0iGD@koDf+5CJ:_i
k04+@!!iZ0"YY:ILV(;)^T`QXGQn$G%P3d*Qb'rGX`/T#&-;t9]DrEE"9g&a@</ENXe9``@Kl]1%3g4I
JuYrSS6TW*$j-V4!k\LC!sAcRBk)1]X/he5I:EHZ!"L3$H\&,rWL7%(<=As4!pTd3!!s&>(WPV"L)MKI
qZ$pM,VdC&h0K54!R:]/!#ktF#8ViXOKcF4\V"E1079D+^:U+uPu\(p"p)15(]XXB"V>I&HD%@@WbkQG
,\N%:XfIM,JOKJA!!0M.('=aF&Sm#FSZ8]eDGh,oBS`[gW/PnM!(Qql!!0A*&e6`DL>:b%'EJ16$UWh0
cUo62klA^''EJLL&7hi<XLu)uT"VY1VjoFJ$jG&Zh>e5j#71f8R?<r=WGdWpWf`O%,mXh]\cDF('EJFG
$rWCPR&Qp$L8gu/ObG+f#mI@0#Q\^@ERDK85MH:K<*VSa!"B/F%lLGu]",/+%hK3PmJsj!%0[1K.@R6:
WM=YF$jm*f!7LoW"q:tiQ_^OUTQU_P$Nn*Ck5Y[(Z,")=*mju8!!WK;1S]dA%(QB&!!WN8-BN9Z$D@G(
!t?W<F:\bM!!,t9mJsHk!Wj5Mec<bk!Wj#C^&['k!Wj#DV>u2JJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&YlL3mJ,~>

%%EndBinary
grestore
np
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/OIDHLP+SymbolMT*1 uf
/OIDHLP+SymbolMT uf
/PBAAAA+SymbolMT uf
/OIDHLO+ArialMT*1 uf
/OIDHLO+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
