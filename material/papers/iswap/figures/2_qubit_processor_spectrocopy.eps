%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 2_qubit_processor_spectrocopy.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: adewes
%%CreationDate: 17/01/2012, 17:48:02
%%BoundingBox: 0 0 417 202
%%HiResBoundingBox: 0 0 416.3938 201.2571
%%CropBox: 0 0 416.3938 201.2571
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1163 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:ModifyDate="2012-01-17T17:45:05+01:00"
   xmp:CreateDate="2012-01-17T17:44:53+01:00"
   xmp:MetadataDate="2012-01-17T17:45:05+01:00"
   xmp:CreatorTool="Acrobat PDFMaker 9.0 pour PowerPoint"
   xmpMM:DocumentID="uuid:09c49c48-0d23-46d5-9d49-16702ac4517b"
   xmpMM:InstanceID="uuid:303d0373-1a5e-4a25-9eaf-3ff1387f37bb"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 9.0"
   pdfx:Company="CEA">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Présentation PowerPoint</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>VION Denis</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 221 
/Lookup <~
!<<*"!W`<%!s/N("9JW)"Tni,"Tni,"p>&/#6Y/0#R(A3#mLS6#mLS6$3pe9$O@"<$jd4?%13FB%gi[E
&.8jG&I]'J&e,9M'+GEO'FkWR'b:iU((_&X(D%2Z(_IA\)%mS_)A<eb)\a"e*#'.g*#07i*>TFk*Z#Xn
*uGjq+;l't+W;:",9%U&,T@^',odp*-64---QX?0.3BZ4.Nfl7.j,u8/0Q2;/KuD>/gDVA0-hhD0I8%G
0d\:K1FFUO1ajdQ2(:!T2C^3W2_-EZ3%QW]3@ui`4"`/d4>/Ag4YSSj4u"em5;G"p5Vk4s5r:G!6T$b%
6o?n'75d+*7Q3:,7lWL/83&^28if$6905699KYH<9g(Z?:-LlB:Hq)E:d@;H;F*VL;aNhO<'s%R<CB7U
<^fIX=%5[[=[u!_>"D6c>=qNg>t[ik?;+)o?qjDs@89W!@S]i%@o-&(A5Q8+AQ)P/B2_e2BN.t4BiS18
C0"C;CKFU>CfjgAD-:$EDH^6HDd-HKE*HTME*QZOEEulREaE)VF'i;YFC8M]F^\_`G%"kcG@G(fG[k7i
H":ImH=^[qHY-mtHtR("I;!:&IVEL*Iqi^.J8/g0JST$4Jo#67Jo#68K5GH<KPkZ@KPtcCKl:lEL2_)I
LN.;MLiRMQM0!\TM0*eWMKO"[Mfs4_N-BCbNH]OeNd,ajO*PsnO*Z$pOEu0tOaDC#P'hU(P'q[*PC@m/
P^\$2Q%+66Q%4?:Q@XN=Q[sZAR"BlER"KrGR=g)KRY6;ORtZMTRtcSVS;)_ZS;2e]SVW"aSr&4fSr&4g
T8JFlT8SLoTSnXrTT"b!ToFt&U5b()U5k1,UQ:C1UQ:F4Ul^U8Ul^X:V3-g>V36pBVNR$EVN[-IVj*<L
Vj3BOW0NNSW0WTVWL&f[WL&f]WL&i`WgK&eWgK&gX-o8lX-o8nX.#ArXI>JuXIGT$Xdb`(Xdkf,Y+1r0
Y+;#3Y+;&7YF_5;YF_8>Yb.JCYb.JFYb7PIZ(R\MZ([bQZ([bSZ([eVZD*tZZD+"^ZD4(aZ_O1dZ_O4g
Z_X:j[%sFn[%sFq[ABY#[AK_&[AK_([\oq/[\oq1\#6(5\#?.:\>Z7<\>c@B\Z2RM\uM[O~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -201.257 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 201.257 li
416.394 201.257 li
416.394 0 li
cp
clp
[1 0 0 1 -52.0492 0 ]ct
108.95 160.738 mo
108.95 158.223 li
false sop
.75021 .679683 .670222 .90164 cmyk
7 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[.0739288 0 0 .0739746 108.95 160.738 ]ct
@
grestore newpath
130.168 160.738 mo
130.168 159.481 li
gsave
[.0739288 0 0 .0739746 130.168 160.738 ]ct
@
grestore newpath
151.385 160.738 mo
151.385 158.223 li
gsave
[.0739288 0 0 .0739746 151.385 160.738 ]ct
@
grestore newpath
172.603 160.738 mo
172.603 159.481 li
gsave
[.0739288 0 0 .0739746 172.603 160.738 ]ct
@
grestore newpath
193.82 160.738 mo
193.82 158.223 li
gsave
[.0739288 0 0 .0739746 193.82 160.738 ]ct
@
grestore newpath
215.038 160.738 mo
215.038 159.481 li
gsave
[.0739288 0 0 .0739746 215.038 160.738 ]ct
@
grestore newpath
236.256 160.738 mo
236.256 158.223 li
gsave
[.0739288 0 0 .0739746 236.256 160.738 ]ct
@
grestore newpath
98.3784 160.738 mo
246.827 160.738 li
gsave
[.0739288 0 0 .0739746 98.3784 160.738 ]ct
@
grestore newpath
98.3783 160.738 mo
98.3783 160.738 li
gsave
[.0739288 0 0 .0739746 98.3783 160.738 ]ct
@
grestore newpath
98.3783 143.502 mo
100.892 143.502 li
gsave
[.0739288 0 0 .0739746 98.3783 143.502 ]ct
@
grestore newpath
98.3783 126.192 mo
98.3783 126.192 li
gsave
[.0739288 0 0 .0739746 98.3783 126.192 ]ct
@
grestore newpath
98.3783 108.956 mo
100.892 108.956 li
gsave
[.0739288 0 0 .0739746 98.3783 108.956 ]ct
@
grestore newpath
98.3783 91.6458 mo
98.3783 91.6458 li
gsave
[.0739288 0 0 .0739746 98.3783 91.6458 ]ct
@
grestore newpath
98.3783 74.4097 mo
100.892 74.4097 li
gsave
[.0739288 0 0 .0739746 98.3783 74.4097 ]ct
@
grestore newpath
98.3783 57.0997 mo
98.3783 57.0997 li
gsave
[.0739288 0 0 .0739746 98.3783 57.0997 ]ct
@
grestore newpath
98.3783 39.8636 mo
100.892 39.8636 li
gsave
[.0739288 0 0 .0739746 98.3783 39.8636 ]ct
@
grestore newpath
98.3783 22.5535 mo
98.3783 22.5535 li
gsave
[.0739288 0 0 .0739746 98.3783 22.5535 ]ct
@
grestore newpath
98.3783 160.738 mo
98.3783 12.1971 li
gsave
[.0739288 0 0 .0739746 98.3783 160.738 ]ct
@
grestore newpath
108.95 12.1971 mo
108.95 12.1971 li
gsave
[.0739288 0 0 .0739746 108.95 12.1971 ]ct
@
grestore newpath
130.168 12.1971 mo
130.168 12.1971 li
gsave
[.0739288 0 0 .0739746 130.168 12.1971 ]ct
@
grestore newpath
151.385 12.1971 mo
151.385 12.1971 li
gsave
[.0739288 0 0 .0739746 151.385 12.1971 ]ct
@
grestore newpath
172.603 12.1971 mo
172.603 12.1971 li
gsave
[.0739288 0 0 .0739746 172.603 12.1971 ]ct
@
grestore newpath
193.82 12.1971 mo
193.82 12.1971 li
gsave
[.0739288 0 0 .0739746 193.82 12.1971 ]ct
@
grestore newpath
215.038 12.1971 mo
215.038 12.1971 li
gsave
[.0739288 0 0 .0739746 215.038 12.1971 ]ct
@
grestore newpath
236.255 12.1971 mo
236.255 12.1971 li
gsave
[.0739288 0 0 .0739746 236.255 12.1971 ]ct
@
grestore newpath
98.3782 12.1971 mo
246.827 12.1971 li
gsave
[.0739288 0 0 .0739746 98.3782 12.1971 ]ct
@
grestore newpath
246.827 160.738 mo
246.827 160.738 li
gsave
[.0739288 0 0 .0739746 246.827 160.738 ]ct
@
grestore newpath
246.827 143.502 mo
246.827 143.502 li
gsave
[.0739288 0 0 .0739746 246.827 143.502 ]ct
@
grestore newpath
246.827 126.192 mo
246.827 126.192 li
gsave
[.0739288 0 0 .0739746 246.827 126.192 ]ct
@
grestore newpath
246.827 108.956 mo
246.827 108.956 li
gsave
[.0739288 0 0 .0739746 246.827 108.956 ]ct
@
grestore newpath
246.827 91.6458 mo
246.827 91.6458 li
gsave
[.0739288 0 0 .0739746 246.827 91.6458 ]ct
@
grestore newpath
246.827 74.4097 mo
246.827 74.4097 li
gsave
[.0739288 0 0 .0739746 246.827 74.4097 ]ct
@
grestore newpath
246.827 57.0997 mo
246.827 57.0997 li
gsave
[.0739288 0 0 .0739746 246.827 57.0997 ]ct
@
grestore newpath
246.827 39.8636 mo
246.827 39.8636 li
gsave
[.0739288 0 0 .0739746 246.827 39.8636 ]ct
@
grestore newpath
246.827 22.5535 mo
246.827 22.5535 li
gsave
[.0739288 0 0 .0739746 246.827 22.5535 ]ct
@
grestore newpath
246.827 160.738 mo
246.827 12.1971 li
gsave
[.0739288 0 0 .0739746 246.827 160.738 ]ct
@
grestore newpath
gsave
98.388 160.769 mo
246.925 160.769 li
246.925 12.142 li
98.388 12.142 li
cp
clp
96.8996 26.5112 mo
96.8996 25.5865 97.6388 24.8468 98.563 24.8468 cv
99.4871 24.8468 100.226 25.5865 100.226 26.5112 cv
100.226 27.4359 99.4871 28.1756 98.563 28.1756 cv
97.6388 28.1756 96.8996 27.4359 96.8996 26.5112 cv
.873014 .24213 1 .129183 cmyk
ef
96.8996 26.5112 mo
96.8996 25.5865 97.6388 24.8467 98.563 24.8467 cv
99.4871 24.8467 100.226 25.5865 100.226 26.5112 cv
100.226 27.4359 99.4871 28.1756 98.563 28.1756 cv
97.6388 28.1756 96.8996 27.4359 96.8996 26.5112 cv
cp
3 lw
gsave
[.0739288 0 0 .0739746 96.8996 26.5112 ]ct
@
grestore newpath
100.374 25.6235 mo
100.374 24.6989 101.113 23.9591 102.038 23.9591 cv
102.962 23.9591 103.701 24.6989 103.701 25.6235 cv
103.701 26.5482 102.962 27.2879 102.038 27.2879 cv
101.113 27.2879 100.374 26.5482 100.374 25.6235 cv
ef
100.374 25.6235 mo
100.374 24.6988 101.113 23.959 102.038 23.959 cv
102.962 23.959 103.701 24.6988 103.701 25.6235 cv
103.701 26.5482 102.962 27.2879 102.038 27.2879 cv
101.113 27.2879 100.374 26.5482 100.374 25.6235 cv
cp
gsave
[.0739288 0 0 .0739746 100.374 25.6235 ]ct
@
grestore newpath
105.549 24.8098 mo
105.549 23.8851 106.288 23.1454 107.213 23.1454 cv
108.137 23.1454 108.876 23.8851 108.876 24.8098 cv
108.876 25.7344 108.137 26.4742 107.213 26.4742 cv
106.288 26.4742 105.549 25.7344 105.549 24.8098 cv
ef
105.549 24.8098 mo
105.549 23.8851 106.288 23.1453 107.213 23.1453 cv
108.137 23.1453 108.876 23.8851 108.876 24.8098 cv
108.876 25.7344 108.137 26.4742 107.213 26.4742 cv
106.288 26.4742 105.549 25.7344 105.549 24.8098 cv
cp
gsave
[.0739288 0 0 .0739746 105.549 24.8098 ]ct
@
grestore newpath
109.024 24.8098 mo
109.024 23.8851 109.763 23.1454 110.687 23.1454 cv
111.611 23.1454 112.351 23.8851 112.351 24.8098 cv
112.351 25.7344 111.611 26.4742 110.687 26.4742 cv
109.763 26.4742 109.024 25.7344 109.024 24.8098 cv
ef
109.024 24.8098 mo
109.024 23.8851 109.763 23.1453 110.687 23.1453 cv
111.611 23.1453 112.351 23.8851 112.351 24.8098 cv
112.351 25.7344 111.611 26.4742 110.687 26.4742 cv
109.763 26.4742 109.024 25.7344 109.024 24.8098 cv
cp
gsave
[.0739288 0 0 .0739746 109.024 24.8098 ]ct
@
grestore newpath
112.499 25.0317 mo
112.499 24.1071 113.238 23.3673 114.162 23.3673 cv
115.086 23.3673 115.825 24.1071 115.825 25.0317 cv
115.825 25.9564 115.086 26.6961 114.162 26.6961 cv
113.238 26.6961 112.499 25.9564 112.499 25.0317 cv
ef
112.499 25.0317 mo
112.499 24.107 113.238 23.3672 114.162 23.3672 cv
115.086 23.3672 115.825 24.107 115.825 25.0317 cv
115.825 25.9564 115.086 26.6961 114.162 26.6961 cv
113.238 26.6961 112.499 25.9564 112.499 25.0317 cv
cp
gsave
[.0739288 0 0 .0739746 112.499 25.0317 ]ct
@
grestore newpath
115.899 25.6235 mo
115.899 24.6989 116.639 23.9591 117.563 23.9591 cv
118.487 23.9591 119.226 24.6989 119.226 25.6235 cv
119.226 26.5482 118.487 27.2879 117.563 27.2879 cv
116.639 27.2879 115.899 26.5482 115.899 25.6235 cv
ef
115.899 25.6235 mo
115.899 24.6988 116.638 23.959 117.563 23.959 cv
118.487 23.959 119.226 24.6988 119.226 25.6235 cv
119.226 26.5482 118.487 27.2879 117.563 27.2879 cv
116.638 27.2879 115.899 26.5482 115.899 25.6235 cv
cp
gsave
[.0739288 0 0 .0739746 115.899 25.6235 ]ct
@
grestore newpath
119.374 26.4372 mo
119.374 25.5126 120.113 24.7728 121.037 24.7728 cv
121.961 24.7728 122.701 25.5126 122.701 26.4372 cv
122.701 27.3619 121.961 28.1016 121.037 28.1016 cv
120.113 28.1016 119.374 27.3619 119.374 26.4372 cv
ef
119.374 26.4372 mo
119.374 25.5125 120.113 24.7728 121.037 24.7728 cv
121.961 24.7728 122.701 25.5125 122.701 26.4372 cv
122.701 27.3619 121.961 28.1016 121.037 28.1016 cv
120.113 28.1016 119.374 27.3619 119.374 26.4372 cv
cp
gsave
[.0739288 0 0 .0739746 119.374 26.4372 ]ct
@
grestore newpath
121.074 27.029 mo
121.074 26.1044 121.814 25.3646 122.738 25.3646 cv
123.662 25.3646 124.401 26.1044 124.401 27.029 cv
124.401 27.9537 123.662 28.6934 122.738 28.6934 cv
121.814 28.6934 121.074 27.9537 121.074 27.029 cv
ef
121.074 27.029 mo
121.074 26.1043 121.813 25.3646 122.738 25.3646 cv
123.662 25.3646 124.401 26.1043 124.401 27.029 cv
124.401 27.9537 123.662 28.6934 122.738 28.6934 cv
121.813 28.6934 121.074 27.9537 121.074 27.029 cv
cp
gsave
[.0739288 0 0 .0739746 121.074 27.029 ]ct
@
grestore newpath
124.549 28.3605 mo
124.549 27.4359 125.288 26.6962 126.212 26.6962 cv
127.136 26.6962 127.876 27.4359 127.876 28.3605 cv
127.876 29.2852 127.136 30.025 126.212 30.025 cv
125.288 30.025 124.549 29.2852 124.549 28.3605 cv
ef
124.549 28.3605 mo
124.549 27.4359 125.288 26.6961 126.212 26.6961 cv
127.136 26.6961 127.876 27.4359 127.876 28.3605 cv
127.876 29.2852 127.136 30.025 126.212 30.025 cv
125.288 30.025 124.549 29.2852 124.549 28.3605 cv
cp
gsave
[.0739288 0 0 .0739746 124.549 28.3605 ]ct
@
grestore newpath
128.024 30.1359 mo
128.024 29.2113 128.763 28.4716 129.687 28.4716 cv
130.611 28.4716 131.35 29.2113 131.35 30.1359 cv
131.35 31.0606 130.611 31.8004 129.687 31.8004 cv
128.763 31.8004 128.024 31.0606 128.024 30.1359 cv
ef
128.024 30.1359 mo
128.024 29.2112 128.763 28.4715 129.687 28.4715 cv
130.611 28.4715 131.35 29.2112 131.35 30.1359 cv
131.35 31.0606 130.611 31.8004 129.687 31.8004 cv
128.763 31.8004 128.024 31.0606 128.024 30.1359 cv
cp
gsave
[.0739288 0 0 .0739746 128.024 30.1359 ]ct
@
grestore newpath
131.498 32.2072 mo
131.498 31.2826 132.237 30.5428 133.162 30.5428 cv
134.086 30.5428 134.825 31.2826 134.825 32.2072 cv
134.825 33.1319 134.086 33.8716 133.162 33.8716 cv
132.237 33.8716 131.498 33.1319 131.498 32.2072 cv
ef
131.498 32.2072 mo
131.498 31.2825 132.237 30.5428 133.162 30.5428 cv
134.086 30.5428 134.825 31.2825 134.825 32.2072 cv
134.825 33.1319 134.086 33.8716 133.162 33.8716 cv
132.237 33.8716 131.498 33.1319 131.498 32.2072 cv
cp
gsave
[.0739288 0 0 .0739746 131.498 32.2072 ]ct
@
grestore newpath
147.023 46.3364 mo
147.023 45.4117 147.762 44.672 148.687 44.672 cv
149.611 44.672 150.35 45.4117 150.35 46.3364 cv
150.35 47.261 149.611 48.0008 148.687 48.0008 cv
147.762 48.0008 147.023 47.261 147.023 46.3364 cv
ef
147.023 46.3364 mo
147.023 45.4117 147.762 44.6719 148.687 44.6719 cv
149.611 44.6719 150.35 45.4117 150.35 46.3364 cv
150.35 47.261 149.611 48.0008 148.687 48.0008 cv
147.762 48.0008 147.023 47.261 147.023 46.3364 cv
cp
gsave
[.0739288 0 0 .0739746 147.023 46.3364 ]ct
@
grestore newpath
152.198 51.7365 mo
152.198 50.8119 152.937 50.0721 153.862 50.0721 cv
154.786 50.0721 155.525 50.8119 155.525 51.7365 cv
155.525 52.6612 154.786 53.4009 153.862 53.4009 cv
152.937 53.4009 152.198 52.6612 152.198 51.7365 cv
ef
152.198 51.7365 mo
152.198 50.8118 152.937 50.0721 153.862 50.0721 cv
154.786 50.0721 155.525 50.8118 155.525 51.7365 cv
155.525 52.6612 154.786 53.4009 153.862 53.4009 cv
152.937 53.4009 152.198 52.6612 152.198 51.7365 cv
cp
gsave
[.0739288 0 0 .0739746 152.198 51.7365 ]ct
@
grestore newpath
183.322 102.779 mo
183.322 101.854 184.062 101.115 184.986 101.115 cv
185.91 101.115 186.649 101.854 186.649 102.779 cv
186.649 103.704 185.91 104.443 184.986 104.443 cv
184.062 104.443 183.322 103.704 183.322 102.779 cv
ef
183.322 102.779 mo
183.322 101.854 184.061 101.115 184.986 101.115 cv
185.91 101.115 186.649 101.854 186.649 102.779 cv
186.649 103.704 185.91 104.443 184.986 104.443 cv
184.061 104.443 183.322 103.704 183.322 102.779 cv
cp
gsave
[.0739288 0 0 .0739746 183.322 102.779 ]ct
@
grestore newpath
186.723 109.437 mo
186.723 108.512 187.462 107.772 188.386 107.772 cv
189.31 107.772 190.05 108.512 190.05 109.437 cv
190.05 110.361 189.31 111.101 188.386 111.101 cv
187.462 111.101 186.723 110.361 186.723 109.437 cv
ef
186.723 109.437 mo
186.723 108.512 187.462 107.772 188.386 107.772 cv
189.31 107.772 190.05 108.512 190.05 109.437 cv
190.05 110.361 189.31 111.101 188.386 111.101 cv
187.462 111.101 186.723 110.361 186.723 109.437 cv
cp
gsave
[.0739288 0 0 .0739746 186.723 109.437 ]ct
@
grestore newpath
188.497 112.766 mo
188.497 111.841 189.237 111.101 190.161 111.101 cv
191.085 111.101 191.824 111.841 191.824 112.766 cv
191.824 113.69 191.085 114.43 190.161 114.43 cv
189.237 114.43 188.497 113.69 188.497 112.766 cv
ef
188.497 112.766 mo
188.497 111.841 189.236 111.101 190.161 111.101 cv
191.085 111.101 191.824 111.841 191.824 112.766 cv
191.824 113.69 191.085 114.43 190.161 114.43 cv
189.236 114.43 188.497 113.69 188.497 112.766 cv
cp
gsave
[.0739288 0 0 .0739746 188.497 112.766 ]ct
@
grestore newpath
191.898 119.719 mo
191.898 118.795 192.637 118.055 193.561 118.055 cv
194.485 118.055 195.225 118.795 195.225 119.719 cv
195.225 120.644 194.485 121.384 193.561 121.384 cv
192.637 121.384 191.898 120.644 191.898 119.719 cv
ef
191.898 119.719 mo
191.898 118.794 192.637 118.055 193.561 118.055 cv
194.485 118.055 195.225 118.794 195.225 119.719 cv
195.225 120.644 194.485 121.384 193.561 121.384 cv
192.637 121.384 191.898 120.644 191.898 119.719 cv
cp
gsave
[.0739288 0 0 .0739746 191.898 119.719 ]ct
@
grestore newpath
198.847 131.999 mo
198.847 131.074 199.587 130.335 200.511 130.335 cv
201.435 130.335 202.174 131.074 202.174 131.999 cv
202.174 132.924 201.435 133.663 200.511 133.663 cv
199.587 133.663 198.847 132.924 198.847 131.999 cv
ef
198.847 131.999 mo
198.847 131.074 199.587 130.335 200.511 130.335 cv
201.435 130.335 202.174 131.074 202.174 131.999 cv
202.174 132.924 201.435 133.663 200.511 133.663 cv
199.587 133.663 198.847 132.924 198.847 131.999 cv
cp
gsave
[.0739288 0 0 .0739746 198.847 131.999 ]ct
@
grestore newpath
212.672 147.238 mo
212.672 146.313 213.411 145.573 214.335 145.573 cv
215.259 145.573 215.999 146.313 215.999 147.238 cv
215.999 148.162 215.259 148.902 214.335 148.902 cv
213.411 148.902 212.672 148.162 212.672 147.238 cv
ef
212.672 147.238 mo
212.672 146.313 213.411 145.573 214.335 145.573 cv
215.259 145.573 215.999 146.313 215.999 147.238 cv
215.999 148.162 215.259 148.902 214.335 148.902 cv
213.411 148.902 212.672 148.162 212.672 147.238 cv
cp
gsave
[.0739288 0 0 .0739746 212.672 147.238 ]ct
@
grestore newpath
223.022 143.095 mo
223.022 142.171 223.761 141.431 224.685 141.431 cv
225.609 141.431 226.349 142.171 226.349 143.095 cv
226.349 144.02 225.609 144.76 224.685 144.76 cv
223.761 144.76 223.022 144.02 223.022 143.095 cv
ef
223.022 143.095 mo
223.022 142.17 223.761 141.431 224.685 141.431 cv
225.609 141.431 226.349 142.17 226.349 143.095 cv
226.349 144.02 225.609 144.76 224.685 144.76 cv
223.761 144.76 223.022 144.02 223.022 143.095 cv
cp
gsave
[.0739288 0 0 .0739746 223.022 143.095 ]ct
@
grestore newpath
226.497 139.101 mo
226.497 138.176 227.236 137.436 228.16 137.436 cv
229.084 137.436 229.823 138.176 229.823 139.101 cv
229.823 140.025 229.084 140.765 228.16 140.765 cv
227.236 140.765 226.497 140.025 226.497 139.101 cv
ef
226.497 139.101 mo
226.497 138.176 227.236 137.436 228.16 137.436 cv
229.084 137.436 229.823 138.176 229.823 139.101 cv
229.823 140.025 229.084 140.765 228.16 140.765 cv
227.236 140.765 226.497 140.025 226.497 139.101 cv
cp
gsave
[.0739288 0 0 .0739746 226.497 139.101 ]ct
@
grestore newpath
229.897 133.478 mo
229.897 132.554 230.637 131.814 231.561 131.814 cv
232.485 131.814 233.224 132.554 233.224 133.478 cv
233.224 134.403 232.485 135.143 231.561 135.143 cv
230.637 135.143 229.897 134.403 229.897 133.478 cv
ef
229.897 133.478 mo
229.897 132.554 230.637 131.814 231.561 131.814 cv
232.485 131.814 233.224 132.554 233.224 133.478 cv
233.224 134.403 232.485 135.143 231.561 135.143 cv
230.637 135.143 229.897 134.403 229.897 133.478 cv
cp
gsave
[.0739288 0 0 .0739746 229.897 133.478 ]ct
@
grestore newpath
233.372 127.856 mo
233.372 126.932 234.111 126.192 235.035 126.192 cv
235.959 126.192 236.699 126.932 236.699 127.856 cv
236.699 128.781 235.959 129.521 235.035 129.521 cv
234.111 129.521 233.372 128.781 233.372 127.856 cv
ef
233.372 127.856 mo
233.372 126.932 234.111 126.192 235.035 126.192 cv
235.959 126.192 236.699 126.932 236.699 127.856 cv
236.699 128.781 235.959 129.521 235.035 129.521 cv
234.111 129.521 233.372 128.781 233.372 127.856 cv
cp
gsave
[.0739288 0 0 .0739746 233.372 127.856 ]ct
@
grestore newpath
240.321 114.541 mo
240.321 113.616 241.061 112.877 241.985 112.877 cv
242.909 112.877 243.648 113.616 243.648 114.541 cv
243.648 115.466 242.909 116.205 241.985 116.205 cv
241.061 116.205 240.321 115.466 240.321 114.541 cv
ef
240.321 114.541 mo
240.321 113.616 241.061 112.877 241.985 112.877 cv
242.909 112.877 243.648 113.616 243.648 114.541 cv
243.648 115.466 242.909 116.205 241.985 116.205 cv
241.061 116.205 240.321 115.466 240.321 114.541 cv
cp
gsave
[.0739288 0 0 .0739746 240.321 114.541 ]ct
@
grestore newpath
243.722 107.957 mo
243.722 107.033 244.461 106.293 245.385 106.293 cv
246.309 106.293 247.049 107.033 247.049 107.957 cv
247.049 108.882 246.309 109.622 245.385 109.622 cv
244.461 109.622 243.722 108.882 243.722 107.957 cv
ef
243.722 107.957 mo
243.722 107.033 244.461 106.293 245.385 106.293 cv
246.309 106.293 247.049 107.033 247.049 107.957 cv
247.049 108.882 246.309 109.622 245.385 109.622 cv
244.461 109.622 243.722 108.882 243.722 107.957 cv
cp
gsave
[.0739288 0 0 .0739746 243.722 107.957 ]ct
@
grestore newpath
247.197 101.226 mo
247.197 100.301 247.936 99.5612 248.86 99.5612 cv
249.784 99.5612 250.523 100.301 250.523 101.226 cv
250.523 102.15 249.784 102.89 248.86 102.89 cv
247.936 102.89 247.197 102.15 247.197 101.226 cv
ef
247.197 101.226 mo
247.197 100.301 247.936 99.5611 248.86 99.5611 cv
249.784 99.5611 250.523 100.301 250.523 101.226 cv
250.523 102.15 249.784 102.89 248.86 102.89 cv
247.936 102.89 247.197 102.15 247.197 101.226 cv
cp
gsave
[.0739288 0 0 .0739746 247.197 101.226 ]ct
@
grestore newpath
250.671 95.3815 mo
250.671 94.4569 251.411 93.7172 252.335 93.7172 cv
253.259 93.7172 253.998 94.4569 253.998 95.3815 cv
253.998 96.3062 253.259 97.046 252.335 97.046 cv
251.411 97.046 250.671 96.3062 250.671 95.3815 cv
ef
250.671 95.3815 mo
250.671 94.4568 251.411 93.7171 252.335 93.7171 cv
253.259 93.7171 253.998 94.4568 253.998 95.3815 cv
253.998 96.3062 253.259 97.046 252.335 97.046 cv
251.411 97.046 250.671 96.3062 250.671 95.3815 cv
cp
gsave
[.0739288 0 0 .0739746 250.671 95.3815 ]ct
@
grestore newpath
grestore
103.479 44.45 mo
105.549 40.8992 li
107.545 44.45 li
cp
.873014 .24213 1 .129183 cmyk
f
105.549 40.8992 mo
107.545 44.45 li
103.479 44.45 li
cp
3 lw
gsave
[.0739288 0 0 .0739746 105.549 40.8992 ]ct
@
grestore newpath
105.18 44.228 mo
107.25 40.6774 li
109.246 44.228 li
cp
f
107.25 40.6773 mo
109.246 44.2281 li
105.18 44.2281 li
cp
gsave
[.0739288 0 0 .0739746 107.25 40.6773 ]ct
@
grestore newpath
106.88 44.1542 mo
108.95 40.6033 li
110.946 44.1542 li
cp
f
108.95 40.6033 mo
110.946 44.1541 li
106.88 44.1541 li
cp
gsave
[.0739288 0 0 .0739746 108.95 40.6033 ]ct
@
grestore newpath
108.654 44.45 mo
110.724 40.8992 li
112.72 44.45 li
cp
f
110.724 40.8992 mo
112.72 44.45 li
108.654 44.45 li
cp
gsave
[.0739288 0 0 .0739746 110.724 40.8992 ]ct
@
grestore newpath
110.354 44.0801 mo
112.424 40.5293 li
114.421 44.0801 li
cp
f
112.425 40.5294 mo
114.421 44.0801 li
110.355 44.0801 li
cp
gsave
[.0739288 0 0 .0739746 112.425 40.5294 ]ct
@
grestore newpath
112.129 44.376 mo
114.199 40.8252 li
116.195 44.376 li
cp
f
114.199 40.8253 mo
116.195 44.376 li
112.129 44.376 li
cp
gsave
[.0739288 0 0 .0739746 114.199 40.8253 ]ct
@
grestore newpath
113.829 44.5239 mo
115.899 40.9733 li
117.895 44.5239 li
cp
f
115.899 40.9732 mo
117.895 44.524 li
113.829 44.524 li
cp
gsave
[.0739288 0 0 .0739746 115.899 40.9732 ]ct
@
grestore newpath
115.53 44.7459 mo
117.6 41.1951 li
119.596 44.7459 li
cp
f
117.6 41.1951 mo
119.596 44.7459 li
115.53 44.7459 li
cp
gsave
[.0739288 0 0 .0739746 117.6 41.1951 ]ct
@
grestore newpath
117.304 44.9678 mo
119.374 41.4172 li
121.37 44.9678 li
cp
f
119.374 41.4171 mo
121.37 44.9678 li
117.304 44.9678 li
cp
gsave
[.0739288 0 0 .0739746 119.374 41.4171 ]ct
@
grestore newpath
119.004 45.2637 mo
121.074 41.713 li
123.07 45.2637 li
cp
f
121.074 41.713 mo
123.07 45.2637 li
119.004 45.2637 li
cp
gsave
[.0739288 0 0 .0739746 121.074 41.713 ]ct
@
grestore newpath
120.705 46.9651 mo
122.775 43.4144 li
124.771 46.9651 li
cp
f
122.775 43.4144 mo
124.771 46.9651 li
120.705 46.9651 li
cp
gsave
[.0739288 0 0 .0739746 122.775 43.4144 ]ct
@
grestore newpath
124.179 48.2966 mo
126.249 44.746 li
128.245 48.2966 li
cp
f
126.249 44.7459 mo
128.245 48.2967 li
124.179 48.2967 li
cp
gsave
[.0739288 0 0 .0739746 126.249 44.7459 ]ct
@
grestore newpath
125.88 48.9624 mo
127.95 45.4117 li
129.946 48.9624 li
cp
f
127.95 45.4117 mo
129.946 48.9625 li
125.88 48.9625 li
cp
gsave
[.0739288 0 0 .0739746 127.95 45.4117 ]ct
@
grestore newpath
127.654 49.4803 mo
129.724 45.9294 li
131.72 49.4803 li
cp
f
129.724 45.9295 mo
131.72 49.4803 li
127.654 49.4803 li
cp
gsave
[.0739288 0 0 .0739746 129.724 45.9295 ]ct
@
grestore newpath
129.354 50.6637 mo
131.424 47.1131 li
133.42 50.6637 li
cp
f
131.424 47.1131 mo
133.42 50.6639 li
129.354 50.6639 li
cp
gsave
[.0739288 0 0 .0739746 131.424 47.1131 ]ct
@
grestore newpath
167.354 97.3419 mo
169.424 93.791 li
171.42 97.3419 li
cp
f
169.424 93.7911 mo
171.42 97.3419 li
167.354 97.3419 li
cp
gsave
[.0739288 0 0 .0739746 169.424 93.7911 ]ct
@
grestore newpath
182.953 129.891 mo
185.023 126.34 li
187.019 129.891 li
cp
f
185.023 126.34 mo
187.019 129.891 li
182.953 129.891 li
cp
gsave
[.0739288 0 0 .0739746 185.023 126.34 ]ct
@
grestore newpath
188.128 142.91 mo
190.197 139.359 li
192.194 142.91 li
cp
f
190.198 139.359 mo
192.194 142.91 li
188.128 142.91 li
cp
gsave
[.0739288 0 0 .0739746 190.198 139.359 ]ct
@
grestore newpath
191.528 151.565 mo
193.598 148.014 li
195.594 151.565 li
cp
f
193.598 148.014 mo
195.594 151.565 li
191.528 151.565 li
cp
gsave
[.0739288 0 0 .0739746 193.598 148.014 ]ct
@
grestore newpath
195.305 160.812 mo
197.073 157.779 li
198.778 160.812 li
cp
f
gsave
98.388 160.769 mo
246.925 160.769 li
246.925 12.142 li
98.388 12.142 li
cp
clp
197.073 157.779 mo
199.069 161.33 li
195.003 161.33 li
cp
gsave
[.0739288 0 0 .0739746 197.073 157.779 ]ct
@
grestore newpath
grestore
233.002 158.889 mo
235.072 155.338 li
237.068 158.889 li
cp
f
235.072 155.338 mo
237.068 158.889 li
233.002 158.889 li
cp
gsave
[.0739288 0 0 .0739746 235.072 155.338 ]ct
@
grestore newpath
236.477 149.864 mo
238.547 146.313 li
240.543 149.864 li
cp
f
238.547 146.313 mo
240.543 149.864 li
236.477 149.864 li
cp
gsave
[.0739288 0 0 .0739746 238.547 146.313 ]ct
@
grestore newpath
239.952 140.691 mo
242.022 137.14 li
244.018 140.691 li
cp
f
242.022 137.14 mo
244.018 140.691 li
239.952 140.691 li
cp
gsave
[.0739288 0 0 .0739746 242.022 137.14 ]ct
@
grestore newpath
243.352 132.332 mo
245.422 128.781 li
246.901 131.411 li
246.901 132.332 li
cp
f
gsave
98.388 160.769 mo
246.925 160.769 li
246.925 12.142 li
98.388 12.142 li
cp
clp
245.422 128.781 mo
247.418 132.332 li
243.352 132.332 li
cp
gsave
[.0739288 0 0 .0739746 245.422 128.781 ]ct
@
grestore newpath
grestore
246.827 124.269 mo
246.901 124.141 li
246.901 124.269 li
cp
f
gsave
98.388 160.769 mo
246.925 160.769 li
246.925 12.142 li
98.388 12.142 li
cp
clp
248.897 120.718 mo
250.893 124.269 li
246.827 124.269 li
cp
gsave
[.0739288 0 0 .0739746 248.897 120.718 ]ct
@
grestore newpath
98.3042 44.8939 mo
98.5999 44.7459 li
98.9696 44.598 li
99.3392 44.524 li
99.6349 44.376 li
100.005 44.3021 li
100.374 44.2281 li
100.67 44.0801 li
101.04 44.0062 li
101.409 43.9322 li
101.705 43.8582 li
102.075 43.7842 li
102.444 43.7103 li
102.74 43.6363 li
103.11 43.5623 li
103.479 43.4883 li
103.775 43.4144 li
104.145 43.3404 li
104.514 43.2664 li
104.81 43.1924 li
105.18 43.1924 li
105.549 43.1185 li
105.845 43.0445 li
106.215 43.0445 li
106.584 42.9705 li
106.88 42.9705 li
107.25 42.8965 li
107.619 42.8965 li
107.915 42.8965 li
108.285 42.8965 li
108.654 42.8226 li
108.95 42.8226 li
109.32 42.8226 li
109.689 42.8226 li
109.985 42.8226 li
110.355 42.8226 li
110.724 42.8226 li
111.02 42.8226 li
111.39 42.8226 li
111.759 42.8965 li
112.055 42.8965 li
112.425 42.8965 li
112.794 42.8965 li
113.164 42.9705 li
113.46 42.9705 li
113.829 43.0445 li
114.199 43.0445 li
114.495 43.1185 li
114.864 43.1924 li
115.234 43.1924 li
115.53 43.2664 li
115.899 43.3404 li
116.269 43.4144 li
116.565 43.4883 li
116.934 43.5623 li
117.304 43.6363 li
117.6 43.7103 li
117.969 43.7842 li
118.339 43.8582 li
118.635 43.9322 li
119.004 44.0062 li
119.374 44.0801 li
119.67 44.2281 li
120.039 44.3021 li
120.409 44.376 li
120.705 44.524 li
121.074 44.598 li
121.444 44.7459 li
121.74 44.8939 li
122.109 44.9678 li
122.479 45.1158 li
122.775 45.2637 li
123.144 45.4117 li
123.514 45.4857 li
123.81 45.6336 li
124.179 45.7816 li
124.549 45.9295 li
124.845 46.0774 li
125.214 46.2254 li
125.584 46.3733 li
125.88 46.5953 li
126.249 46.7432 li
126.619 46.8912 li
126.915 47.1131 li
127.284 47.261 li
127.654 47.409 li
127.95 47.6309 li
128.319 47.7789 li
128.689 48.0008 li
128.985 48.1487 li
129.354 48.3707 li
129.724 48.5926 li
130.02 48.8145 li
130.389 48.9625 li
130.759 49.1844 li
131.129 49.4063 li
131.424 49.6282 li
131.794 49.8502 li
132.164 50.0721 li
132.459 50.294 li
132.829 50.5899 li
133.199 50.8118 li
133.494 51.0337 li
133.864 51.2557 li
134.234 51.5516 li
134.529 51.7735 li
134.899 51.9954 li
135.269 52.2913 li
135.564 52.5132 li
135.934 52.8091 li
136.304 53.105 li
136.599 53.327 li
136.969 53.6229 li
137.339 53.9188 li
137.634 54.2147 li
138.004 54.5106 li
138.374 54.8065 li
138.669 55.1024 li
139.039 55.3983 li
139.409 55.6941 li
139.704 55.99 li
140.074 56.2859 li
140.444 56.5818 li
140.739 56.9517 li
141.109 57.2476 li
141.479 57.5435 li
141.774 57.9134 li
142.144 58.2093 li
142.514 58.5792 li
142.809 58.8751 li
143.179 59.2449 li
143.549 59.6148 li
143.844 59.9107 li
144.214 60.2806 li
144.584 60.6504 li
144.879 61.0203 li
145.249 61.3902 li
145.619 61.7601 li
145.914 62.1299 li
146.284 62.4998 li
146.654 62.8697 li
146.949 63.2396 li
147.319 63.6094 li
147.689 64.0533 li
148.058 64.4231 li
148.354 64.793 li
148.724 65.2369 li
149.093 65.6067 li
149.389 66.0506 li
149.759 66.4205 li
150.128 66.8643 li
150.424 67.3082 li
150.794 67.752 li
151.163 68.1219 li
151.459 68.5657 li
151.829 69.0096 li
152.198 69.4534 li
152.494 69.8973 li
152.864 70.3411 li
153.233 70.785 li
153.529 71.2288 li
153.899 71.6727 li
154.268 72.1905 li
154.564 72.6343 li
154.934 73.0782 li
155.303 73.596 li
155.599 74.0398 li
155.969 74.5577 li
156.338 75.0015 li
156.634 75.5193 li
157.004 76.0372 li
157.373 76.481 li
157.669 76.9988 li
158.039 77.5167 li
158.408 78.0345 li
158.704 78.5523 li
159.074 79.0701 li
159.443 79.5879 li
159.739 80.1058 li
160.109 80.6236 li
160.478 81.1414 li
160.774 81.6592 li
161.144 82.251 li
161.513 82.7689 li
161.809 83.2867 li
162.179 83.8785 li
162.548 84.3963 li
162.844 84.9881 li
163.214 85.5799 li
163.583 86.0977 li
163.879 86.6895 li
164.249 87.2813 li
164.618 87.8731 li
164.914 88.4649 li
165.284 89.0567 li
165.653 89.6485 li
166.023 90.2403 li
166.319 90.8321 li
166.688 91.4239 li
167.058 92.0157 li
167.354 92.6075 li
167.723 93.2732 li
168.093 93.865 li
168.389 94.4568 li
168.758 95.1226 li
169.128 95.7144 li
169.424 96.3802 li
169.793 97.046 li
170.163 97.6377 li
170.459 98.3035 li
170.828 98.9693 li
171.198 99.6351 li
171.494 100.301 li
171.863 100.967 li
172.233 101.632 li
172.529 102.298 li
172.898 102.964 li
173.268 103.63 li
173.564 104.369 li
173.933 105.035 li
174.303 105.701 li
174.599 106.441 li
174.968 107.106 li
175.338 107.846 li
175.634 108.512 li
176.003 109.252 li
176.373 109.992 li
176.669 110.657 li
177.038 111.397 li
177.408 112.137 li
177.704 112.877 li
178.073 113.616 li
178.443 114.356 li
178.739 115.096 li
179.108 115.836 li
179.478 116.649 li
179.774 117.389 li
180.143 118.129 li
180.513 118.942 li
180.809 119.682 li
181.178 120.496 li
181.548 121.236 li
181.844 122.049 li
182.213 122.789 li
182.583 123.603 li
182.953 124.417 li
183.248 125.23 li
183.618 126.044 li
183.988 126.858 li
184.283 127.671 li
184.653 128.485 li
185.023 129.299 li
185.318 130.113 li
185.688 130.926 li
186.058 131.74 li
186.353 132.628 li
186.723 133.441 li
187.093 134.255 li
187.388 135.143 li
187.758 135.957 li
188.128 136.844 li
188.423 137.658 li
188.793 138.546 li
189.163 139.433 li
189.458 140.321 li
189.828 141.135 li
190.198 142.023 li
190.493 142.91 li
190.863 143.798 li
191.233 144.686 li
191.528 145.573 li
191.898 146.461 li
192.268 147.349 li
192.563 148.236 li
192.933 149.124 li
193.303 150.012 li
193.598 150.973 li
193.968 151.861 li
194.338 152.749 li
194.633 153.637 li
195.003 154.598 li
195.373 155.486 li
195.668 156.374 li
196.038 157.335 li
196.408 158.223 li
196.703 159.185 li
197.073 160.072 li
197.443 160.96 li
197.738 161.922 li
198.108 162.809 li
198.478 163.771 li
198.773 164.659 li
199.143 165.546 li
199.513 166.508 li
199.882 167.396 li
200.178 168.283 li
200.548 169.171 li
200.917 170.133 li
201.213 171.021 li
201.583 171.908 li
201.952 172.796 li
202.248 173.684 li
202.618 174.571 li
202.987 175.385 li
203.283 176.273 li
203.653 177.16 li
204.022 177.974 li
204.318 178.788 li
204.688 179.676 li
205.057 180.489 li
205.353 181.303 li
205.723 182.043 li
206.092 182.856 li
206.388 183.596 li
206.758 184.336 li
207.127 185.076 li
207.423 185.815 li
207.793 186.481 li
208.162 187.221 li
208.458 187.887 li
208.828 188.479 li
209.197 189.144 li
209.493 189.736 li
209.863 190.254 li
210.232 190.846 li
210.528 191.364 li
210.898 191.807 li
211.267 192.251 li
211.563 192.695 li
211.933 193.139 li
212.302 193.509 li
212.598 193.805 li
212.968 194.101 li
213.337 194.397 li
213.633 194.618 li
214.003 194.84 li
214.372 194.988 li
214.668 195.136 li
215.038 195.21 li
215.407 195.284 li
215.703 195.284 li
216.073 195.284 li
216.442 195.21 li
216.738 195.136 li
217.108 194.988 li
217.477 194.84 li
217.847 194.618 li
218.143 194.397 li
218.512 194.101 li
218.882 193.805 li
219.178 193.509 li
219.547 193.139 li
219.917 192.695 li
220.213 192.251 li
220.582 191.807 li
220.952 191.364 li
221.248 190.846 li
221.617 190.254 li
221.987 189.736 li
222.283 189.144 li
222.652 188.479 li
223.022 187.887 li
223.318 187.221 li
223.687 186.481 li
224.057 185.815 li
224.353 185.076 li
224.722 184.336 li
225.092 183.596 li
225.388 182.856 li
225.757 182.043 li
226.127 181.303 li
226.423 180.489 li
226.792 179.676 li
227.162 178.788 li
227.458 177.974 li
227.827 177.16 li
228.197 176.273 li
228.493 175.385 li
228.862 174.571 li
229.232 173.684 li
229.528 172.796 li
229.897 171.908 li
230.267 171.021 li
230.563 170.133 li
230.932 169.171 li
231.302 168.283 li
231.598 167.396 li
231.967 166.508 li
232.337 165.546 li
232.633 164.659 li
233.002 163.771 li
233.372 162.809 li
233.668 161.922 li
234.037 160.96 li
234.407 160.072 li
234.777 159.185 li
235.072 158.223 li
235.442 157.335 li
235.812 156.374 li
236.107 155.486 li
236.477 154.598 li
236.847 153.637 li
237.142 152.749 li
237.512 151.861 li
237.882 150.973 li
238.177 150.012 li
238.547 149.124 li
238.917 148.236 li
239.212 147.349 li
239.582 146.461 li
239.952 145.573 li
240.247 144.686 li
240.617 143.798 li
240.987 142.91 li
241.283 142.023 li
241.652 141.135 li
242.022 140.321 li
242.318 139.433 li
242.687 138.546 li
243.057 137.658 li
243.353 136.844 li
243.722 135.957 li
244.092 135.143 li
244.388 134.255 li
244.757 133.441 li
245.127 132.628 li
245.423 131.74 li
245.792 130.926 li
246.162 130.113 li
246.458 129.299 li
246.827 128.485 li
9 lw
gsave
[.0739288 0 0 .0739746 98.3042 44.8939 ]ct
@
grestore newpath
98.3042 26.6961 mo
98.526 26.6221 li
gsave
[.0739288 0 0 .0739746 98.3042 26.6961 ]ct
@
grestore newpath
98.526 26.6221 mo
98.8956 26.4742 li
gsave
[.0739288 0 0 .0739746 98.526 26.6221 ]ct
@
grestore newpath
98.8956 26.4742 mo
99.2653 26.4002 li
gsave
[.0739288 0 0 .0739746 98.8956 26.4742 ]ct
@
grestore newpath
99.2653 26.4002 mo
99.561 26.3262 li
gsave
[.0739288 0 0 .0739746 99.2653 26.4002 ]ct
@
grestore newpath
99.561 26.3262 mo
99.9306 26.1783 li
gsave
[.0739288 0 0 .0739746 99.561 26.3262 ]ct
@
grestore newpath
grestore
99.9306 26.1783 mo
100.3 26.1043 li
9 lw
gsave
[.0739288 0 0 .0739746 99.9306 26.1783 ]ct
@
grestore newpath
100.3 26.1043 mo
100.596 26.0303 li
gsave
[.0739288 0 0 .0739746 100.3 26.1043 ]ct
@
grestore newpath
100.596 26.0303 mo
100.67 25.9564 li
gsave
[.0739288 0 0 .0739746 100.596 26.0303 ]ct
@
grestore newpath
103.997 25.2166 mo
104.071 25.2166 li
gsave
[.0739288 0 0 .0739746 103.997 25.2166 ]ct
@
grestore newpath
104.071 25.2166 mo
104.44 25.1426 li
gsave
[.0739288 0 0 .0739746 104.071 25.2166 ]ct
@
grestore newpath
104.44 25.1426 mo
104.736 25.1426 li
gsave
[.0739288 0 0 .0739746 104.44 25.1426 ]ct
@
grestore newpath
104.736 25.1426 mo
105.106 25.0687 li
gsave
[.0739288 0 0 .0739746 104.736 25.1426 ]ct
@
grestore newpath
105.106 25.0687 mo
105.475 24.9947 li
gsave
[.0739288 0 0 .0739746 105.106 25.0687 ]ct
@
grestore newpath
105.475 24.9947 mo
105.771 24.9947 li
gsave
[.0739288 0 0 .0739746 105.475 24.9947 ]ct
@
grestore newpath
105.771 24.9947 mo
106.141 24.9207 li
gsave
[.0739288 0 0 .0739746 105.771 24.9947 ]ct
@
grestore newpath
106.141 24.9207 mo
106.362 24.9207 li
gsave
[.0739288 0 0 .0739746 106.141 24.9207 ]ct
@
grestore newpath
109.689 24.6988 mo
109.911 24.6988 li
gsave
[.0739288 0 0 .0739746 109.689 24.6988 ]ct
@
grestore newpath
109.911 24.6988 mo
110.281 24.6988 li
gsave
[.0739288 0 0 .0739746 109.911 24.6988 ]ct
@
grestore newpath
110.281 24.6988 mo
110.65 24.6988 li
gsave
[.0739288 0 0 .0739746 110.281 24.6988 ]ct
@
grestore newpath
110.65 24.6988 mo
110.946 24.7728 li
gsave
[.0739288 0 0 .0739746 110.65 24.6988 ]ct
@
grestore newpath
110.946 24.7728 mo
111.316 24.7728 li
gsave
[.0739288 0 0 .0739746 110.946 24.7728 ]ct
@
grestore newpath
111.316 24.7728 mo
111.685 24.7728 li
gsave
[.0739288 0 0 .0739746 111.316 24.7728 ]ct
@
grestore newpath
111.685 24.7728 mo
111.981 24.7728 li
gsave
[.0739288 0 0 .0739746 111.685 24.7728 ]ct
@
grestore newpath
111.981 24.7728 mo
112.055 24.7728 li
gsave
[.0739288 0 0 .0739746 111.981 24.7728 ]ct
@
grestore newpath
115.382 25.1426 mo
115.455 25.1426 li
gsave
[.0739288 0 0 .0739746 115.382 25.1426 ]ct
@
grestore newpath
115.455 25.1426 mo
115.825 25.2166 li
gsave
[.0739288 0 0 .0739746 115.455 25.1426 ]ct
@
grestore newpath
115.825 25.2166 mo
116.195 25.2906 li
gsave
[.0739288 0 0 .0739746 115.825 25.2166 ]ct
@
grestore newpath
116.195 25.2906 mo
116.49 25.3646 li
gsave
[.0739288 0 0 .0739746 116.195 25.2906 ]ct
@
grestore newpath
116.49 25.3646 mo
116.86 25.4385 li
gsave
[.0739288 0 0 .0739746 116.49 25.3646 ]ct
@
grestore newpath
116.86 25.4385 mo
117.23 25.5125 li
gsave
[.0739288 0 0 .0739746 116.86 25.4385 ]ct
@
grestore newpath
117.23 25.5125 mo
117.525 25.5865 li
gsave
[.0739288 0 0 .0739746 117.23 25.5125 ]ct
@
grestore newpath
117.525 25.5865 mo
117.747 25.5865 li
gsave
[.0739288 0 0 .0739746 117.525 25.5865 ]ct
@
grestore newpath
121.074 26.4742 mo
121.37 26.6221 li
gsave
[.0739288 0 0 .0739746 121.074 26.4742 ]ct
@
grestore newpath
121.37 26.6221 mo
121.665 26.6961 li
gsave
[.0739288 0 0 .0739746 121.37 26.6221 ]ct
@
grestore newpath
121.665 26.6961 mo
122.035 26.8441 li
gsave
[.0739288 0 0 .0739746 121.665 26.6961 ]ct
@
grestore newpath
122.035 26.8441 mo
122.405 26.918 li
gsave
[.0739288 0 0 .0739746 122.035 26.8441 ]ct
@
grestore newpath
122.405 26.918 mo
122.7 26.992 li
gsave
[.0739288 0 0 .0739746 122.405 26.918 ]ct
@
grestore newpath
122.7 26.992 mo
123.07 27.2139 li
gsave
[.0739288 0 0 .0739746 122.7 26.992 ]ct
@
grestore newpath
123.07 27.2139 mo
123.44 27.3619 li
gsave
[.0739288 0 0 .0739746 123.07 27.2139 ]ct
@
grestore newpath
126.766 28.7674 mo
126.84 28.7674 li
gsave
[.0739288 0 0 .0739746 126.766 28.7674 ]ct
@
grestore newpath
126.84 28.7674 mo
127.21 28.9893 li
gsave
[.0739288 0 0 .0739746 126.84 28.7674 ]ct
@
grestore newpath
127.21 28.9893 mo
127.58 29.1373 li
gsave
[.0739288 0 0 .0739746 127.21 28.9893 ]ct
@
grestore newpath
127.58 29.1373 mo
127.875 29.2852 li
gsave
[.0739288 0 0 .0739746 127.58 29.1373 ]ct
@
grestore newpath
127.875 29.2852 mo
128.245 29.5071 li
gsave
[.0739288 0 0 .0739746 127.875 29.2852 ]ct
@
grestore newpath
128.245 29.5071 mo
128.615 29.7291 li
gsave
[.0739288 0 0 .0739746 128.245 29.5071 ]ct
@
grestore newpath
128.615 29.7291 mo
128.91 29.877 li
gsave
[.0739288 0 0 .0739746 128.615 29.7291 ]ct
@
grestore newpath
128.91 29.877 mo
129.132 30.025 li
gsave
[.0739288 0 0 .0739746 128.91 29.877 ]ct
@
grestore newpath
132.459 31.9483 mo
132.755 32.0962 li
gsave
[.0739288 0 0 .0739746 132.459 31.9483 ]ct
@
grestore newpath
132.755 32.0963 mo
133.124 32.3921 li
gsave
[.0739288 0 0 .0739746 132.755 32.0963 ]ct
@
grestore newpath
133.124 32.3922 mo
133.42 32.6141 li
gsave
[.0739288 0 0 .0739746 133.124 32.3922 ]ct
@
grestore newpath
133.42 32.6141 mo
133.79 32.836 li
gsave
[.0739288 0 0 .0739746 133.42 32.6141 ]ct
@
grestore newpath
133.79 32.836 mo
134.159 33.0579 li
gsave
[.0739288 0 0 .0739746 133.79 32.836 ]ct
@
grestore newpath
134.159 33.0579 mo
134.455 33.2798 li
gsave
[.0739288 0 0 .0739746 134.159 33.0579 ]ct
@
grestore newpath
134.455 33.2798 mo
134.825 33.5757 li
gsave
[.0739288 0 0 .0739746 134.455 33.2798 ]ct
@
grestore newpath
138.151 36.0909 mo
138.299 36.1649 li
gsave
[.0739288 0 0 .0739746 138.151 36.0909 ]ct
@
grestore newpath
138.299 36.1649 mo
138.595 36.4608 li
gsave
[.0739288 0 0 .0739746 138.299 36.1649 ]ct
@
grestore newpath
138.595 36.4608 mo
138.965 36.7566 li
gsave
[.0739288 0 0 .0739746 138.595 36.4608 ]ct
@
grestore newpath
138.965 36.7567 mo
139.334 37.0525 li
gsave
[.0739288 0 0 .0739746 138.965 36.7567 ]ct
@
grestore newpath
139.334 37.0526 mo
139.63 37.3484 li
gsave
[.0739288 0 0 .0739746 139.334 37.0526 ]ct
@
grestore newpath
139.63 37.3484 mo
140 37.6443 li
gsave
[.0739288 0 0 .0739746 139.63 37.3484 ]ct
@
grestore newpath
140 37.6443 mo
140.369 37.9402 li
gsave
[.0739288 0 0 .0739746 140 37.6443 ]ct
@
grestore newpath
140.369 37.9402 mo
140.517 38.0882 li
gsave
[.0739288 0 0 .0739746 140.369 37.9402 ]ct
@
grestore newpath
143.696 41.0472 mo
143.77 41.1212 li
gsave
[.0739288 0 0 .0739746 143.696 41.0472 ]ct
@
grestore newpath
143.77 41.1212 mo
144.14 41.491 li
gsave
[.0739288 0 0 .0739746 143.77 41.1212 ]ct
@
grestore newpath
144.14 41.491 mo
144.509 41.7869 li
gsave
[.0739288 0 0 .0739746 144.14 41.491 ]ct
@
grestore newpath
144.509 41.7869 mo
144.805 42.1568 li
gsave
[.0739288 0 0 .0739746 144.509 41.7869 ]ct
@
grestore newpath
144.805 42.1568 mo
145.175 42.5267 li
gsave
[.0739288 0 0 .0739746 144.805 42.1568 ]ct
@
grestore newpath
145.175 42.5267 mo
145.544 42.8226 li
gsave
[.0739288 0 0 .0739746 145.175 42.5267 ]ct
@
grestore newpath
145.544 42.8226 mo
145.84 43.1924 li
gsave
[.0739288 0 0 .0739746 145.544 42.8226 ]ct
@
grestore newpath
145.84 43.1924 mo
145.914 43.2664 li
gsave
[.0739288 0 0 .0739746 145.84 43.1924 ]ct
@
grestore newpath
149.093 46.5953 mo
149.315 46.9651 li
gsave
[.0739288 0 0 .0739746 149.093 46.5953 ]ct
@
grestore newpath
149.315 46.9651 mo
149.684 47.335 li
gsave
[.0739288 0 0 .0739746 149.315 46.9651 ]ct
@
grestore newpath
149.684 47.335 mo
150.054 47.7049 li
gsave
[.0739288 0 0 .0739746 149.684 47.335 ]ct
@
grestore newpath
150.054 47.7049 mo
150.35 48.1487 li
gsave
[.0739288 0 0 .0739746 150.054 47.7049 ]ct
@
grestore newpath
150.35 48.1487 mo
150.719 48.5186 li
gsave
[.0739288 0 0 .0739746 150.35 48.1487 ]ct
@
grestore newpath
150.719 48.5186 mo
151.089 48.8885 li
gsave
[.0739288 0 0 .0739746 150.719 48.5186 ]ct
@
grestore newpath
151.089 48.8885 mo
151.163 48.9625 li
gsave
[.0739288 0 0 .0739746 151.089 48.8885 ]ct
@
grestore newpath
153.824 52.2913 mo
153.824 52.2913 li
gsave
[.0739288 0 0 .0739746 153.824 52.2913 ]ct
@
grestore newpath
153.824 52.2913 mo
154.194 52.7352 li
gsave
[.0739288 0 0 .0739746 153.824 52.2913 ]ct
@
grestore newpath
154.194 52.7352 mo
154.489 53.179 li
gsave
[.0739288 0 0 .0739746 154.194 52.7352 ]ct
@
grestore newpath
154.489 53.179 mo
154.859 53.6229 li
gsave
[.0739288 0 0 .0739746 154.489 53.179 ]ct
@
grestore newpath
154.859 53.6229 mo
155.229 54.0667 li
gsave
[.0739288 0 0 .0739746 154.859 53.6229 ]ct
@
grestore newpath
155.229 54.0667 mo
155.524 54.5106 li
gsave
[.0739288 0 0 .0739746 155.229 54.0667 ]ct
@
grestore newpath
155.524 54.5106 mo
155.672 54.6585 li
gsave
[.0739288 0 0 .0739746 155.524 54.5106 ]ct
@
grestore newpath
158.186 57.9874 mo
158.334 58.2093 li
gsave
[.0739288 0 0 .0739746 158.186 57.9874 ]ct
@
grestore newpath
158.334 58.2093 mo
158.629 58.6531 li
gsave
[.0739288 0 0 .0739746 158.334 58.2093 ]ct
@
grestore newpath
158.629 58.6531 mo
158.999 59.171 li
gsave
[.0739288 0 0 .0739746 158.629 58.6531 ]ct
@
grestore newpath
158.999 59.171 mo
159.369 59.6148 li
gsave
[.0739288 0 0 .0739746 158.999 59.171 ]ct
@
grestore newpath
159.369 59.6148 mo
159.664 60.1326 li
gsave
[.0739288 0 0 .0739746 159.369 59.6148 ]ct
@
grestore newpath
159.664 60.1326 mo
159.812 60.3545 li
gsave
[.0739288 0 0 .0739746 159.664 60.1326 ]ct
@
grestore newpath
162.178 63.6834 mo
162.474 64.1273 li
gsave
[.0739288 0 0 .0739746 162.178 63.6834 ]ct
@
grestore newpath
162.474 64.1273 mo
162.769 64.6451 li
gsave
[.0739288 0 0 .0739746 162.474 64.1273 ]ct
@
grestore newpath
162.769 64.6451 mo
163.139 65.1629 li
gsave
[.0739288 0 0 .0739746 162.769 64.6451 ]ct
@
grestore newpath
163.139 65.1629 mo
163.509 65.6807 li
gsave
[.0739288 0 0 .0739746 163.139 65.1629 ]ct
@
grestore newpath
163.509 65.6807 mo
163.73 66.0506 li
gsave
[.0739288 0 0 .0739746 163.509 65.6807 ]ct
@
grestore newpath
165.948 69.3795 mo
165.948 69.4534 li
gsave
[.0739288 0 0 .0739746 165.948 69.3795 ]ct
@
grestore newpath
165.948 69.4534 mo
166.244 69.9712 li
gsave
[.0739288 0 0 .0739746 165.948 69.4534 ]ct
@
grestore newpath
166.244 69.9713 mo
166.614 70.563 li
gsave
[.0739288 0 0 .0739746 166.244 69.9713 ]ct
@
grestore newpath
166.614 70.563 mo
166.983 71.0809 li
gsave
[.0739288 0 0 .0739746 166.614 70.563 ]ct
@
grestore newpath
166.983 71.0809 mo
167.279 71.6727 li
gsave
[.0739288 0 0 .0739746 166.983 71.0809 ]ct
@
grestore newpath
167.279 71.6727 mo
167.353 71.7466 li
gsave
[.0739288 0 0 .0739746 167.279 71.6727 ]ct
@
grestore newpath
169.349 75.0755 mo
169.349 75.0755 li
gsave
[.0739288 0 0 .0739746 169.349 75.0755 ]ct
@
grestore newpath
169.349 75.0755 mo
169.719 75.5933 li
gsave
[.0739288 0 0 .0739746 169.349 75.0755 ]ct
@
grestore newpath
169.719 75.5933 mo
170.088 76.1851 li
gsave
[.0739288 0 0 .0739746 169.719 75.5933 ]ct
@
grestore newpath
170.088 76.1851 mo
170.384 76.7769 li
gsave
[.0739288 0 0 .0739746 170.088 76.1851 ]ct
@
grestore newpath
170.384 76.7769 mo
170.754 77.3687 li
gsave
[.0739288 0 0 .0739746 170.384 76.7769 ]ct
@
grestore newpath
170.754 77.3687 mo
170.828 77.4427 li
gsave
[.0739288 0 0 .0739746 170.754 77.3687 ]ct
@
grestore newpath
172.75 80.7715 mo
172.824 80.9195 li
gsave
[.0739288 0 0 .0739746 172.75 80.7715 ]ct
@
grestore newpath
172.824 80.9195 mo
173.193 81.5113 li
gsave
[.0739288 0 0 .0739746 172.824 80.9195 ]ct
@
grestore newpath
173.193 81.5113 mo
173.563 82.1771 li
gsave
[.0739288 0 0 .0739746 173.193 81.5113 ]ct
@
grestore newpath
173.563 82.1771 mo
173.859 82.7689 li
gsave
[.0739288 0 0 .0739746 173.563 82.1771 ]ct
@
grestore newpath
173.859 82.7689 mo
174.08 83.1387 li
gsave
[.0739288 0 0 .0739746 173.859 82.7689 ]ct
@
grestore newpath
175.929 86.4676 mo
175.929 86.4676 li
gsave
[.0739288 0 0 .0739746 175.929 86.4676 ]ct
@
grestore newpath
175.929 86.4676 mo
176.298 87.1334 li
gsave
[.0739288 0 0 .0739746 175.929 86.4676 ]ct
@
grestore newpath
176.298 87.1334 mo
176.594 87.7252 li
gsave
[.0739288 0 0 .0739746 176.298 87.1334 ]ct
@
grestore newpath
176.594 87.7252 mo
176.964 88.3909 li
gsave
[.0739288 0 0 .0739746 176.594 87.7252 ]ct
@
grestore newpath
176.964 88.3909 mo
177.259 88.8348 li
gsave
[.0739288 0 0 .0739746 176.964 88.3909 ]ct
@
grestore newpath
179.034 92.1636 mo
179.034 92.1636 li
gsave
[.0739288 0 0 .0739746 179.034 92.1636 ]ct
@
grestore newpath
179.034 92.1636 mo
179.403 92.8294 li
gsave
[.0739288 0 0 .0739746 179.034 92.1636 ]ct
@
grestore newpath
179.403 92.8294 mo
179.773 93.4952 li
gsave
[.0739288 0 0 .0739746 179.403 92.8294 ]ct
@
grestore newpath
179.773 93.4952 mo
180.069 94.1609 li
gsave
[.0739288 0 0 .0739746 179.773 93.4952 ]ct
@
grestore newpath
180.069 94.1609 mo
180.29 94.5308 li
gsave
[.0739288 0 0 .0739746 180.069 94.1609 ]ct
@
grestore newpath
182.065 97.8597 mo
182.139 98.0816 li
gsave
[.0739288 0 0 .0739746 182.065 97.8597 ]ct
@
grestore newpath
182.139 98.0816 mo
182.508 98.7474 li
gsave
[.0739288 0 0 .0739746 182.139 98.0816 ]ct
@
grestore newpath
182.508 98.7474 mo
182.878 99.4131 li
gsave
[.0739288 0 0 .0739746 182.508 98.7474 ]ct
@
grestore newpath
182.878 99.4131 mo
183.247 100.079 li
gsave
[.0739288 0 0 .0739746 182.878 99.4131 ]ct
@
grestore newpath
183.247 100.079 mo
183.321 100.227 li
gsave
[.0739288 0 0 .0739746 183.247 100.079 ]ct
@
grestore newpath
185.022 103.556 mo
185.317 104.148 li
gsave
[.0739288 0 0 .0739746 185.022 103.556 ]ct
@
grestore newpath
185.317 104.148 mo
185.613 104.813 li
gsave
[.0739288 0 0 .0739746 185.317 104.148 ]ct
@
grestore newpath
185.613 104.813 mo
185.983 105.479 li
gsave
[.0739288 0 0 .0739746 185.613 104.813 ]ct
@
grestore newpath
185.983 105.479 mo
186.205 105.923 li
gsave
[.0739288 0 0 .0739746 185.983 105.479 ]ct
@
grestore newpath
187.905 109.252 mo
188.053 109.548 li
gsave
[.0739288 0 0 .0739746 187.905 109.252 ]ct
@
grestore newpath
188.053 109.548 mo
188.422 110.213 li
gsave
[.0739288 0 0 .0739746 188.053 109.548 ]ct
@
grestore newpath
188.422 110.213 mo
188.718 110.879 li
gsave
[.0739288 0 0 .0739746 188.422 110.213 ]ct
@
grestore newpath
188.718 110.879 mo
189.088 111.545 li
gsave
[.0739288 0 0 .0739746 188.718 110.879 ]ct
@
grestore newpath
189.088 111.545 mo
189.162 111.619 li
gsave
[.0739288 0 0 .0739746 189.088 111.545 ]ct
@
grestore newpath
190.788 114.948 mo
190.788 114.948 li
gsave
[.0739288 0 0 .0739746 190.788 114.948 ]ct
@
grestore newpath
190.788 114.948 mo
191.158 115.614 li
gsave
[.0739288 0 0 .0739746 190.788 114.948 ]ct
@
grestore newpath
191.158 115.614 mo
191.527 116.279 li
gsave
[.0739288 0 0 .0739746 191.158 115.614 ]ct
@
grestore newpath
191.527 116.279 mo
191.823 116.945 li
gsave
[.0739288 0 0 .0739746 191.527 116.279 ]ct
@
grestore newpath
191.823 116.945 mo
192.045 117.315 li
gsave
[.0739288 0 0 .0739746 191.823 116.945 ]ct
@
grestore newpath
193.745 120.644 mo
193.893 121.014 li
gsave
[.0739288 0 0 .0739746 193.745 120.644 ]ct
@
grestore newpath
193.893 121.014 mo
194.263 121.679 li
gsave
[.0739288 0 0 .0739746 193.893 121.014 ]ct
@
grestore newpath
194.263 121.68 mo
194.632 122.345 li
gsave
[.0739288 0 0 .0739746 194.263 121.68 ]ct
@
grestore newpath
194.632 122.345 mo
194.928 122.937 li
gsave
[.0739288 0 0 .0739746 194.632 122.345 ]ct
@
grestore newpath
194.928 122.937 mo
195.002 123.011 li
gsave
[.0739288 0 0 .0739746 194.928 122.937 ]ct
@
grestore newpath
196.776 126.34 mo
196.998 126.858 li
gsave
[.0739288 0 0 .0739746 196.776 126.34 ]ct
@
grestore newpath
196.998 126.858 mo
197.368 127.45 li
gsave
[.0739288 0 0 .0739746 196.998 126.858 ]ct
@
grestore newpath
197.368 127.45 mo
197.737 128.115 li
gsave
[.0739288 0 0 .0739746 197.368 127.45 ]ct
@
grestore newpath
197.737 128.115 mo
198.033 128.707 li
gsave
[.0739288 0 0 .0739746 197.737 128.115 ]ct
@
grestore newpath
199.955 132.036 mo
200.103 132.406 li
gsave
[.0739288 0 0 .0739746 199.955 132.036 ]ct
@
grestore newpath
200.103 132.406 mo
200.473 132.998 li
gsave
[.0739288 0 0 .0739746 200.103 132.406 ]ct
@
grestore newpath
200.473 132.998 mo
200.842 133.589 li
gsave
[.0739288 0 0 .0739746 200.473 132.998 ]ct
@
grestore newpath
200.842 133.589 mo
201.138 134.107 li
gsave
[.0739288 0 0 .0739746 200.842 133.589 ]ct
@
grestore newpath
201.138 134.107 mo
201.36 134.403 li
gsave
[.0739288 0 0 .0739746 201.138 134.107 ]ct
@
grestore newpath
203.43 137.732 mo
203.578 137.954 li
gsave
[.0739288 0 0 .0739746 203.43 137.732 ]ct
@
grestore newpath
203.578 137.954 mo
203.947 138.472 li
gsave
[.0739288 0 0 .0739746 203.578 137.954 ]ct
@
grestore newpath
203.947 138.472 mo
204.243 138.99 li
gsave
[.0739288 0 0 .0739746 203.947 138.472 ]ct
@
grestore newpath
204.243 138.99 mo
204.613 139.433 li
gsave
[.0739288 0 0 .0739746 204.243 138.99 ]ct
@
grestore newpath
204.613 139.433 mo
204.982 139.951 li
gsave
[.0739288 0 0 .0739746 204.613 139.433 ]ct
@
grestore newpath
204.982 139.951 mo
205.13 140.099 li
gsave
[.0739288 0 0 .0739746 204.982 139.951 ]ct
@
grestore newpath
207.718 143.428 mo
207.718 143.428 li
gsave
[.0739288 0 0 .0739746 207.718 143.428 ]ct
@
grestore newpath
207.718 143.428 mo
208.087 143.798 li
gsave
[.0739288 0 0 .0739746 207.718 143.428 ]ct
@
grestore newpath
208.087 143.798 mo
208.383 144.168 li
gsave
[.0739288 0 0 .0739746 208.087 143.798 ]ct
@
grestore newpath
208.383 144.168 mo
208.753 144.464 li
gsave
[.0739288 0 0 .0739746 208.383 144.168 ]ct
@
grestore newpath
208.753 144.464 mo
209.122 144.834 li
gsave
[.0739288 0 0 .0739746 208.753 144.464 ]ct
@
grestore newpath
209.122 144.834 mo
209.418 145.129 li
gsave
[.0739288 0 0 .0739746 209.122 144.834 ]ct
@
grestore newpath
209.418 145.129 mo
209.788 145.499 li
gsave
[.0739288 0 0 .0739746 209.418 145.129 ]ct
@
grestore newpath
209.788 145.499 mo
210.009 145.721 li
gsave
[.0739288 0 0 .0739746 209.788 145.499 ]ct
@
grestore newpath
213.336 147.867 mo
213.558 147.94 li
gsave
[.0739288 0 0 .0739746 213.336 147.867 ]ct
@
grestore newpath
213.558 147.94 mo
213.928 148.088 li
gsave
[.0739288 0 0 .0739746 213.558 147.94 ]ct
@
grestore newpath
213.928 148.088 mo
214.297 148.236 li
gsave
[.0739288 0 0 .0739746 213.928 148.088 ]ct
@
grestore newpath
214.297 148.236 mo
214.593 148.31 li
gsave
[.0739288 0 0 .0739746 214.297 148.236 ]ct
@
grestore newpath
214.593 148.31 mo
214.963 148.384 li
gsave
[.0739288 0 0 .0739746 214.593 148.31 ]ct
@
grestore newpath
214.963 148.384 mo
215.332 148.458 li
gsave
[.0739288 0 0 .0739746 214.963 148.384 ]ct
@
grestore newpath
215.332 148.458 mo
215.628 148.458 li
gsave
[.0739288 0 0 .0739746 215.332 148.458 ]ct
@
grestore newpath
215.628 148.458 mo
215.702 148.458 li
gsave
[.0739288 0 0 .0739746 215.628 148.458 ]ct
@
grestore newpath
219.029 148.088 mo
219.102 148.014 li
gsave
[.0739288 0 0 .0739746 219.029 148.088 ]ct
@
grestore newpath
219.103 148.014 mo
219.472 147.867 li
gsave
[.0739288 0 0 .0739746 219.103 148.014 ]ct
@
grestore newpath
219.472 147.867 mo
219.842 147.719 li
gsave
[.0739288 0 0 .0739746 219.472 147.867 ]ct
@
grestore newpath
219.842 147.719 mo
220.137 147.571 li
gsave
[.0739288 0 0 .0739746 219.842 147.719 ]ct
@
grestore newpath
220.137 147.571 mo
220.507 147.349 li
gsave
[.0739288 0 0 .0739746 220.137 147.571 ]ct
@
grestore newpath
220.507 147.349 mo
220.877 147.201 li
gsave
[.0739288 0 0 .0739746 220.507 147.349 ]ct
@
grestore newpath
220.877 147.201 mo
221.172 146.979 li
gsave
[.0739288 0 0 .0739746 220.877 147.201 ]ct
@
grestore newpath
221.172 146.979 mo
221.394 146.831 li
gsave
[.0739288 0 0 .0739746 221.172 146.979 ]ct
@
grestore newpath
224.647 143.946 mo
224.647 143.946 li
gsave
[.0739288 0 0 .0739746 224.647 143.946 ]ct
@
grestore newpath
224.647 143.946 mo
225.017 143.576 li
gsave
[.0739288 0 0 .0739746 224.647 143.946 ]ct
@
grestore newpath
225.017 143.576 mo
225.312 143.132 li
gsave
[.0739288 0 0 .0739746 225.017 143.576 ]ct
@
grestore newpath
225.312 143.132 mo
225.682 142.762 li
gsave
[.0739288 0 0 .0739746 225.312 143.132 ]ct
@
grestore newpath
225.682 142.762 mo
226.052 142.318 li
gsave
[.0739288 0 0 .0739746 225.682 142.762 ]ct
@
grestore newpath
226.052 142.318 mo
226.347 141.875 li
gsave
[.0739288 0 0 .0739746 226.052 142.318 ]ct
@
grestore newpath
226.347 141.875 mo
226.569 141.579 li
gsave
[.0739288 0 0 .0739746 226.347 141.875 ]ct
@
grestore newpath
229.083 138.25 mo
229.157 138.102 li
gsave
[.0739288 0 0 .0739746 229.083 138.25 ]ct
@
grestore newpath
229.157 138.102 mo
229.452 137.584 li
gsave
[.0739288 0 0 .0739746 229.157 138.102 ]ct
@
grestore newpath
229.452 137.584 mo
229.822 137.066 li
gsave
[.0739288 0 0 .0739746 229.452 137.584 ]ct
@
grestore newpath
229.822 137.066 mo
230.192 136.474 li
gsave
[.0739288 0 0 .0739746 229.822 137.066 ]ct
@
grestore newpath
230.192 136.474 mo
230.487 135.957 li
gsave
[.0739288 0 0 .0739746 230.192 136.474 ]ct
@
grestore newpath
230.487 135.957 mo
230.561 135.883 li
gsave
[.0739288 0 0 .0739746 230.487 135.957 ]ct
@
grestore newpath
232.557 132.554 mo
232.557 132.554 li
gsave
[.0739288 0 0 .0739746 232.557 132.554 ]ct
@
grestore newpath
232.557 132.554 mo
232.927 131.962 li
gsave
[.0739288 0 0 .0739746 232.557 132.554 ]ct
@
grestore newpath
232.927 131.962 mo
233.297 131.37 li
gsave
[.0739288 0 0 .0739746 232.927 131.962 ]ct
@
grestore newpath
233.297 131.37 mo
233.666 130.704 li
gsave
[.0739288 0 0 .0739746 233.297 131.37 ]ct
@
grestore newpath
233.666 130.704 mo
233.962 130.187 li
gsave
[.0739288 0 0 .0739746 233.666 130.704 ]ct
@
grestore newpath
235.81 126.858 mo
236.106 126.34 li
gsave
[.0739288 0 0 .0739746 235.81 126.858 ]ct
@
grestore newpath
236.106 126.34 mo
236.402 125.748 li
gsave
[.0739288 0 0 .0739746 236.106 126.34 ]ct
@
grestore newpath
236.402 125.748 mo
236.771 125.082 li
gsave
[.0739288 0 0 .0739746 236.402 125.748 ]ct
@
grestore newpath
236.771 125.082 mo
237.067 124.491 li
gsave
[.0739288 0 0 .0739746 236.771 125.082 ]ct
@
grestore newpath
238.841 121.162 mo
238.841 121.162 li
gsave
[.0739288 0 0 .0739746 238.841 121.162 ]ct
@
grestore newpath
238.841 121.162 mo
239.211 120.496 li
gsave
[.0739288 0 0 .0739746 238.841 121.162 ]ct
@
grestore newpath
239.211 120.496 mo
239.507 119.83 li
gsave
[.0739288 0 0 .0739746 239.211 120.496 ]ct
@
grestore newpath
239.507 119.83 mo
239.876 119.164 li
gsave
[.0739288 0 0 .0739746 239.507 119.83 ]ct
@
grestore newpath
239.876 119.164 mo
240.098 118.794 li
gsave
[.0739288 0 0 .0739746 239.876 119.164 ]ct
@
grestore newpath
241.798 115.466 mo
241.946 115.096 li
gsave
[.0739288 0 0 .0739746 241.798 115.466 ]ct
@
grestore newpath
241.946 115.096 mo
242.316 114.43 li
gsave
[.0739288 0 0 .0739746 241.946 115.096 ]ct
@
grestore newpath
242.316 114.43 mo
242.612 113.764 li
gsave
[.0739288 0 0 .0739746 242.316 114.43 ]ct
@
grestore newpath
242.612 113.764 mo
242.981 113.098 li
gsave
[.0739288 0 0 .0739746 242.612 113.764 ]ct
@
grestore newpath
244.682 109.77 mo
244.682 109.696 li
gsave
[.0739288 0 0 .0739746 244.682 109.77 ]ct
@
grestore newpath
244.682 109.696 mo
245.051 109.03 li
gsave
[.0739288 0 0 .0739746 244.682 109.696 ]ct
@
grestore newpath
245.051 109.03 mo
245.421 108.29 li
gsave
[.0739288 0 0 .0739746 245.051 109.03 ]ct
@
grestore newpath
gsave
98.388 160.769 mo
246.925 160.769 li
246.925 12.142 li
98.388 12.142 li
cp
clp
245.421 108.29 mo
245.717 107.624 li
gsave
[.0739288 0 0 .0739746 245.421 108.29 ]ct
@
grestore newpath
245.717 107.624 mo
245.864 107.402 li
gsave
[.0739288 0 0 .0739746 245.717 107.624 ]ct
@
grestore newpath
98.3781 79.8839 mo
99.8567 79.8839 li
101.409 79.8839 li
102.888 79.8839 li
104.366 79.8839 li
105.845 79.8839 li
107.397 79.8839 li
108.876 79.8839 li
110.355 79.8839 li
111.907 79.8839 li
113.386 79.8839 li
114.864 79.8839 li
116.343 79.8839 li
117.895 79.8839 li
119.374 79.8839 li
120.852 79.8839 li
122.405 79.8839 li
123.884 79.8839 li
125.362 79.8839 li
126.841 79.8839 li
128.393 79.8839 li
129.872 79.8839 li
131.35 79.8839 li
132.903 79.8839 li
134.381 79.8839 li
135.86 79.8839 li
137.339 79.8839 li
138.891 79.8839 li
140.37 79.8839 li
141.848 79.8839 li
143.327 79.8839 li
144.879 79.8839 li
146.358 79.8839 li
147.837 79.8839 li
149.389 79.8839 li
150.868 79.8839 li
152.346 79.8839 li
153.825 79.8839 li
155.377 79.8839 li
156.856 79.8839 li
158.334 79.8839 li
159.887 79.8839 li
161.365 79.8839 li
162.844 79.8839 li
164.323 79.8839 li
165.875 79.8839 li
167.354 79.8839 li
168.832 79.8839 li
170.385 79.8839 li
171.863 79.8839 li
173.342 79.8839 li
174.821 79.8839 li
176.373 79.8839 li
177.852 79.8839 li
179.33 79.8839 li
180.883 79.8839 li
182.361 79.8839 li
183.84 79.8839 li
185.318 79.8839 li
186.871 79.8839 li
188.349 79.8839 li
189.828 79.8839 li
191.381 79.8839 li
192.859 79.8839 li
194.338 79.8839 li
195.816 79.8839 li
197.369 79.8839 li
198.847 79.8839 li
200.326 79.8839 li
201.878 79.8839 li
203.357 79.8839 li
204.836 79.8839 li
206.314 79.8839 li
207.867 79.8839 li
209.345 79.8839 li
210.824 79.8839 li
212.302 79.8839 li
213.855 79.8839 li
215.333 79.8839 li
216.812 79.8839 li
218.365 79.8839 li
219.843 79.8839 li
221.322 79.8839 li
222.8 79.8839 li
224.353 79.8839 li
225.831 79.8839 li
227.31 79.8839 li
228.862 79.8839 li
230.341 79.8839 li
231.82 79.8839 li
233.298 79.8839 li
234.851 79.8839 li
236.329 79.8839 li
237.808 79.8839 li
239.36 79.8839 li
240.839 79.8839 li
242.318 79.8839 li
243.796 79.8839 li
245.349 79.8839 li
246.827 79.8839 li
.883665 .769161 3.0518e-5 3.0518e-5 cmyk
13 lw
gsave
[.0739288 0 0 .0739746 98.3781 79.8839 ]ct
@
grestore newpath
98.3781 84.7662 mo
99.7828 84.7662 li
gsave
[.0739288 0 0 .0739746 98.3781 84.7662 ]ct
@
grestore newpath
99.7828 84.7662 mo
101.335 84.7662 li
gsave
[.0739288 0 0 .0739746 99.7828 84.7662 ]ct
@
grestore newpath
grestore
101.335 84.7662 mo
101.853 84.7662 li
.883665 .769161 3.0518e-5 3.0518e-5 cmyk
13 lw
gsave
[.0739288 0 0 .0739746 101.335 84.7662 ]ct
@
grestore newpath
106.51 84.7662 mo
107.323 84.7662 li
gsave
[.0739288 0 0 .0739746 106.51 84.7662 ]ct
@
grestore newpath
107.323 84.7662 mo
108.802 84.7662 li
gsave
[.0739288 0 0 .0739746 107.323 84.7662 ]ct
@
grestore newpath
108.802 84.7662 mo
109.985 84.7662 li
gsave
[.0739288 0 0 .0739746 108.802 84.7662 ]ct
@
grestore newpath
114.642 84.7662 mo
114.79 84.7662 li
gsave
[.0739288 0 0 .0739746 114.642 84.7662 ]ct
@
grestore newpath
114.79 84.7662 mo
116.269 84.7662 li
gsave
[.0739288 0 0 .0739746 114.79 84.7662 ]ct
@
grestore newpath
116.269 84.7662 mo
117.821 84.7662 li
gsave
[.0739288 0 0 .0739746 116.269 84.7662 ]ct
@
grestore newpath
117.821 84.7662 mo
118.117 84.7662 li
gsave
[.0739288 0 0 .0739746 117.821 84.7662 ]ct
@
grestore newpath
122.775 84.7662 mo
123.81 84.7662 li
gsave
[.0739288 0 0 .0739746 122.775 84.7662 ]ct
@
grestore newpath
123.81 84.7662 mo
125.288 84.7662 li
gsave
[.0739288 0 0 .0739746 123.81 84.7662 ]ct
@
grestore newpath
125.288 84.7662 mo
126.249 84.7662 li
gsave
[.0739288 0 0 .0739746 125.288 84.7662 ]ct
@
grestore newpath
130.907 84.7662 mo
131.276 84.7662 li
gsave
[.0739288 0 0 .0739746 130.907 84.7662 ]ct
@
grestore newpath
131.276 84.7662 mo
132.829 84.7662 li
gsave
[.0739288 0 0 .0739746 131.276 84.7662 ]ct
@
grestore newpath
132.829 84.7662 mo
134.307 84.7662 li
gsave
[.0739288 0 0 .0739746 132.829 84.7662 ]ct
@
grestore newpath
134.307 84.7662 mo
134.381 84.7662 li
gsave
[.0739288 0 0 .0739746 134.307 84.7662 ]ct
@
grestore newpath
139.039 84.7662 mo
140.296 84.7662 li
gsave
[.0739288 0 0 .0739746 139.039 84.7662 ]ct
@
grestore newpath
140.296 84.7662 mo
141.774 84.7662 li
gsave
[.0739288 0 0 .0739746 140.296 84.7662 ]ct
@
grestore newpath
141.774 84.7662 mo
142.513 84.7662 li
gsave
[.0739288 0 0 .0739746 141.774 84.7662 ]ct
@
grestore newpath
147.171 84.7662 mo
147.762 84.7662 li
gsave
[.0739288 0 0 .0739746 147.171 84.7662 ]ct
@
grestore newpath
147.762 84.7662 mo
149.315 84.7662 li
gsave
[.0739288 0 0 .0739746 147.762 84.7662 ]ct
@
grestore newpath
149.315 84.7662 mo
150.646 84.7662 li
gsave
[.0739288 0 0 .0739746 149.315 84.7662 ]ct
@
grestore newpath
155.303 84.7662 mo
155.303 84.7662 li
gsave
[.0739288 0 0 .0739746 155.303 84.7662 ]ct
@
grestore newpath
155.303 84.7662 mo
156.782 84.7662 li
gsave
[.0739288 0 0 .0739746 155.303 84.7662 ]ct
@
grestore newpath
156.782 84.7662 mo
158.26 84.7662 li
gsave
[.0739288 0 0 .0739746 156.782 84.7662 ]ct
@
grestore newpath
158.26 84.7662 mo
158.778 84.7662 li
gsave
[.0739288 0 0 .0739746 158.26 84.7662 ]ct
@
grestore newpath
163.435 84.7662 mo
164.248 84.7662 li
gsave
[.0739288 0 0 .0739746 163.435 84.7662 ]ct
@
grestore newpath
164.248 84.7662 mo
165.801 84.7662 li
gsave
[.0739288 0 0 .0739746 164.248 84.7662 ]ct
@
grestore newpath
165.801 84.7662 mo
166.91 84.7662 li
gsave
[.0739288 0 0 .0739746 165.801 84.7662 ]ct
@
grestore newpath
171.567 84.7662 mo
171.789 84.7662 li
gsave
[.0739288 0 0 .0739746 171.567 84.7662 ]ct
@
grestore newpath
171.789 84.7662 mo
173.268 84.7662 li
gsave
[.0739288 0 0 .0739746 171.789 84.7662 ]ct
@
grestore newpath
173.268 84.7662 mo
174.746 84.7662 li
gsave
[.0739288 0 0 .0739746 173.268 84.7662 ]ct
@
grestore newpath
174.746 84.7662 mo
175.042 84.7662 li
gsave
[.0739288 0 0 .0739746 174.746 84.7662 ]ct
@
grestore newpath
179.7 84.7662 mo
180.808 84.7662 li
gsave
[.0739288 0 0 .0739746 179.7 84.7662 ]ct
@
grestore newpath
180.808 84.7662 mo
182.287 84.7662 li
gsave
[.0739288 0 0 .0739746 180.808 84.7662 ]ct
@
grestore newpath
182.287 84.7662 mo
183.174 84.7662 li
gsave
[.0739288 0 0 .0739746 182.287 84.7662 ]ct
@
grestore newpath
187.832 84.7662 mo
188.275 84.7662 li
gsave
[.0739288 0 0 .0739746 187.832 84.7662 ]ct
@
grestore newpath
188.275 84.7662 mo
189.754 84.7662 li
gsave
[.0739288 0 0 .0739746 188.275 84.7662 ]ct
@
grestore newpath
189.754 84.7662 mo
191.306 84.7662 li
gsave
[.0739288 0 0 .0739746 189.754 84.7662 ]ct
@
grestore newpath
195.964 84.7662 mo
197.295 84.7662 li
gsave
[.0739288 0 0 .0739746 195.964 84.7662 ]ct
@
grestore newpath
197.295 84.7662 mo
198.773 84.7662 li
gsave
[.0739288 0 0 .0739746 197.295 84.7662 ]ct
@
grestore newpath
198.773 84.7662 mo
199.438 84.7662 li
gsave
[.0739288 0 0 .0739746 198.773 84.7662 ]ct
@
grestore newpath
204.096 84.7662 mo
204.761 84.7662 li
gsave
[.0739288 0 0 .0739746 204.096 84.7662 ]ct
@
grestore newpath
204.761 84.7662 mo
206.24 84.7662 li
gsave
[.0739288 0 0 .0739746 204.761 84.7662 ]ct
@
grestore newpath
206.24 84.7662 mo
207.571 84.7662 li
gsave
[.0739288 0 0 .0739746 206.24 84.7662 ]ct
@
grestore newpath
212.228 84.7662 mo
212.228 84.7662 li
gsave
[.0739288 0 0 .0739746 212.228 84.7662 ]ct
@
grestore newpath
212.228 84.7662 mo
213.781 84.7662 li
gsave
[.0739288 0 0 .0739746 212.228 84.7662 ]ct
@
grestore newpath
213.781 84.7662 mo
215.259 84.7662 li
gsave
[.0739288 0 0 .0739746 213.781 84.7662 ]ct
@
grestore newpath
215.259 84.7662 mo
215.703 84.7662 li
gsave
[.0739288 0 0 .0739746 215.259 84.7662 ]ct
@
grestore newpath
220.36 84.7662 mo
221.247 84.7662 li
gsave
[.0739288 0 0 .0739746 220.36 84.7662 ]ct
@
grestore newpath
221.247 84.7662 mo
222.726 84.7662 li
gsave
[.0739288 0 0 .0739746 221.247 84.7662 ]ct
@
grestore newpath
222.726 84.7662 mo
223.835 84.7662 li
gsave
[.0739288 0 0 .0739746 222.726 84.7662 ]ct
@
grestore newpath
228.492 84.7662 mo
228.788 84.7662 li
gsave
[.0739288 0 0 .0739746 228.492 84.7662 ]ct
@
grestore newpath
228.788 84.7662 mo
230.267 84.7662 li
gsave
[.0739288 0 0 .0739746 228.788 84.7662 ]ct
@
grestore newpath
230.267 84.7662 mo
231.745 84.7662 li
gsave
[.0739288 0 0 .0739746 230.267 84.7662 ]ct
@
grestore newpath
231.745 84.7662 mo
231.967 84.7662 li
gsave
[.0739288 0 0 .0739746 231.745 84.7662 ]ct
@
grestore newpath
236.625 84.7662 mo
237.733 84.7662 li
gsave
[.0739288 0 0 .0739746 236.625 84.7662 ]ct
@
grestore newpath
237.733 84.7662 mo
239.286 84.7662 li
gsave
[.0739288 0 0 .0739746 237.733 84.7662 ]ct
@
grestore newpath
239.286 84.7662 mo
240.099 84.7662 li
gsave
[.0739288 0 0 .0739746 239.286 84.7662 ]ct
@
grestore newpath
gsave
98.388 160.769 mo
246.925 160.769 li
246.925 12.142 li
98.388 12.142 li
cp
clp
244.757 84.7662 mo
245.274 84.7662 li
gsave
[.0739288 0 0 .0739746 244.757 84.7662 ]ct
@
grestore newpath
245.274 84.7662 mo
246.753 84.7662 li
gsave
[.0739288 0 0 .0739746 245.274 84.7662 ]ct
@
grestore newpath
grestore
188.941 135.957 mo
188.941 142.318 li
3.0518e-5 .993988 1 3.0518e-5 cmyk
6 lw
gsave
[.0739288 0 0 .0739746 188.941 135.957 ]ct
@
grestore newpath
185.762 139.138 mo
192.12 139.138 li
gsave
[.0739288 0 0 .0739746 185.762 139.138 ]ct
@
grestore newpath
187.241 131.74 mo
187.241 138.102 li
gsave
[.0739288 0 0 .0739746 187.241 131.74 ]ct
@
grestore newpath
184.062 134.921 mo
190.419 134.921 li
gsave
[.0739288 0 0 .0739746 184.062 134.921 ]ct
@
grestore newpath
204.392 135.957 mo
204.392 142.318 li
gsave
[.0739288 0 0 .0739746 204.392 135.957 ]ct
@
grestore newpath
201.213 139.138 mo
207.571 139.138 li
gsave
[.0739288 0 0 .0739746 201.213 139.138 ]ct
@
grestore newpath
191.233 112.655 mo
191.233 119.016 li
.883665 .769161 3.0518e-5 3.0518e-5 cmyk
gsave
[.0739288 0 0 .0739746 191.233 112.655 ]ct
@
grestore newpath
188.054 115.836 mo
194.412 115.836 li
gsave
[.0739288 0 0 .0739746 188.054 115.836 ]ct
@
grestore newpath
179.922 114.356 mo
179.922 120.718 li
gsave
[.0739288 0 0 .0739746 179.922 114.356 ]ct
@
grestore newpath
176.743 117.537 mo
183.1 117.537 li
gsave
[.0739288 0 0 .0739746 176.743 117.537 ]ct
@
grestore newpath
246.827 140.395 mo
251.115 140.395 li
.75021 .679683 .670222 .90164 cmyk
5 lw
gsave
[.0739288 0 0 .0739746 246.827 140.395 ]ct
@
grestore newpath
246.827 137.806 mo
251.115 137.806 li
gsave
[.0739288 0 0 .0739746 246.827 137.806 ]ct
@
grestore newpath
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c79660ef78fec000068a40003e76268656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f63610e6169320000284800001a2c6d6178700b470ca80000
4274000000206e616d65c0f2653b0000429400001b0d7072657052fec4e9
00005da400000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d00000001000000030000e6e8baea5f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a000000d60000017e00000320000005a60000
074e000009380000097e000009fe00000aa400000b8400000bec00000c64
00000caa00000ce600000d5600000f1200000fee00001218000013f20000
15520000170c000018e20000198e00001c2200001e5600001eb200001f70
00001ff200002062000020e8000021da000023da000025840000271c0000
28560000299e00002a6200002b1800002ca800002dae00002e9200002f7a
000031b00000323a000035640000370e000038420000394800003b3c0000
3da800004052000041000000422400004398000045d6000048e200004a88
00004bc800004c3200004c9c00004d0000004d8800004dbc00004e380000
510a000052e80000549c000056500000580e0000596200005b5200005cf6
00005dea00005f020000619a00006296000064c60000668c0000684e0000
6a1200006ba800006cae000070560000717a0000731800007536000079a0
00007bc400007e1c00008004000081020000814e00008250000082f00000
833c00008370000083ac000083ee000084540000849a000084ce00008504
0000853a0000858a000085cc0000861e00008656000086a8000086de0000
871e000087600000879e000087e800008828000088560000888e000088de
00008914000089540000898e000089d200008a1c00008a5800008a880000
8acc00008b0400008b9400008c1a00008e2800008fbc0000916c000091b8
0000924c00009470000096c4000098b4000099a000009a2200009a8c0000
9baa00009d0600009f4e0000a0b00000a13e0000a1e80000a2ac0000a3f4
0000a59e0000a68c0000a7520000a7b60000a8240000a94e0000aa720000
ab020000ace40000af3e0000b2900000b3860000b42c0000b47c0000b532
0000b6520000b7f00000b88a0000b94e0000ba0e0000ba760000bab20000
bb0a0000bb580000bd700000bfb60000bfee0000c0200000c14a0000c276
0000c3240000c3c80000c46a0000c53c0000c5900000c5c60000c61e0000
c7700000c7e20000c83c0000c9b40000cb200000cc000000cc320000ccce
0000cdf20000d0680000d0a20000d0e60000d1220000d1840000d1c60000
d20c0000d2580000d28a0000d2de0000d31c0000d34c0000d38a0000d3d0
0000d4120000d4500000d4d20000d5400000d6260000d6620000d6e20000
d7160000d7b80000d8400000d8ac0000d9380000d9a40000da900000db82
0000dbb60000dbea0000dc1a0000dc5e0000dcd60000de500000e06a0000
e09c0000e0d60000e1d00000e35e0000e3940000e4f80000e5740000e654
0000e74a0000e8da0000ea440000ec320000ed2e0000ed740000eda80000
edea0000ee240000ee780000eec00000ef0a0000ef3a0000ef6a0000f152
0000f1900000f1ca0000f1fa0000f22e0000f25e0000f28a0000f2d20000
f4880000f6020000f62e0000f6700000f6b40000f6e40000f7140000f76a
0000f8480000f95a0000f99e0000f9d40000fa2e0000fa6c0000faa00000
fad00000fb0c0000fb4c0000fb8a0000fbc60000fc080000fc3e0000fc7a
0000fcba0000fdc80000ff340000ff84000100e0000101360001016a0001
01b800010204000102460001027e000102b4000102fc0001039e0001053a
000107020001088400010a7600010bc800010d4c00010e2e00010fc80001
10320001105a000110f80001137a000113ba000113fa0001143a00011478
000114d600011534000115a2000115c2000116ac0001174c000117820001
17d00001181a00011864000118800001189c000118bc000118dc000118fc
0001191c00011942000119680001198e000119b4000119e400011a0c0001
1a3400011a6000011a8c00011ac000011aea00011b1600011b4c00011b76
00011ba200011bd800011c0200011c2c00011c6000011c9000011cc40001
1d0800011d3800011d6c00011dae00011de200011e1400011e5600011e8a
00011eba00011efc00011f4000011f8600011fe200011ffe0001201a0001
2036000120520001206e000121dc000124ac0001271c0001273800012752
0001276e0001278a000127a6000127c20001281e00012858000128c20001
298c00012a2c00012b0200012b8200012c0a00012c7a00012d1000012d6e
00012db400012e1200012e7400012f2c00012fea00013016000130720001
30b60001322200013316000133400001335c00013388000133c00001340c
0001344c00013480000134b0000134e00001351000013554000135840001
35b4000135f4000136240001365400013684000136c4000136f400013724
000137540001378200013986000139b6000139e600013b3600013cec0001
3d1c00013d4a00013d7a00013da800013dd800013e0600013f3400014062
00014092000142020001423a0001426a000143fc0001442a000144580001
4486000144ae0001460c000147a4000147dc0001481c0001485800014888
000148b6000148d2000149020001493200014a2200014b8a00014bba0001
4bf400014c3400014c6400014c9400014cd600014e760001505600015096
000150d6000151060001514600015230000152b000015394000153c40001
53f4000154240001545400015490000154c2000154f40001552400015554
0001559a000155cc000155fc00015632000156a4000156d8000158a60001
59a800015b3800015d6800015fb80001614a000161ae0001623800016248
000162d6000164d4000166000001676c0001685c000169e000016bfa0001
6e2600016f1800016f2800016f3800017050000170600001707000017080
00017090000170a0000171be000171ce000171de00017252000172620001
73320001734200017454000174640001747400017484000175e2000177c0
00017802000178380001786e0001789e000178ce000179220001794a0001
7ad400017c1c00017d7000017ed80001805c000180c0000182520001836e
0001837e0001838e00018514000185240001868a000187e4000189180001
8a7600018be400018daa00018dea00018e2200018e5800018e7e00018eae
00018ed40001904a0001907a000191b0000191c0000191d0000192120001
9222000193b600019562000196ec0001971400019744000198a0000198b0
000199e8000199f800019a9200019bf200019c0200019e6800019ff20001
a15a0001a18a0001a3000001a4320001a4420001a4520001a4620001a53c
0001a54c0001a55c0001a56c0001a6640001a7de0001a7ee0001a9160001
aa4a0001ab9c0001ad300001ae4e0001afda0001b0ec0001b1220001b358
0001b3f80001b4080001b59e0001b7400001b7c40001b9460001b9560001
bbbe0001bd3e0001bebe0001beee0001c08e0001c2140001c3d80001c504
0001c5140001c6440001c6540001c6640001c7240001c7340001c91a0001
c92a0001ca600001cb6e0001cd1a0001ced00001d0120001d1820001d2ca
0001d31c0001d4fe0001d67a0001d6b80001d85e0001d8820001d9c20001
d9d20001d9e20001da1a0001da2a0001dbb60001dd240001de980001debc
0001deec0001e05a0001e10c0001e1ca0001e1f80001e3ae0001e4a60001
e5340001e6600001e7140001e7ee0001e8380001e8b60001e97c0001e9a4
0001e9ee0001ea440001eb300001eb7a0001ebae0001ebd60001ebfe0001
ec320001ec760001ecba0001ecf80001ee360001eeee0001f00e0001f084
0001f1520001f1a40001f2360001f2e60001f3da0001f42e0001f4c40001
f5820001f66c0001f71e0001f83e0001f8900001f93a0001fa700001fb48
0001fc2e0001fd340001fe1a0001fefc0001fff00002008e000201940002
028e000203060002037e000203f40002042a000204860002054e000205da
000206120002065800020688000206f2000207b2000207e6000208160002
084a0002087a000208aa000208da00020a7a00020ab200020af200020b2a
00020b6200020bfe00020cf800020d2800020dcc00020dfa00020e3a0002
0e8a00020eba00020f060002109e0002120400021364000213aa000213fe
00021436000215a8000215de00021670000216ae000216dc0002171a0002
184a00021872000219ae00021a3e00021ae800021b6a00021c2600021d3e
00021e4c00021e8000021f0600022062000220e40002212e000222380002
2280000223840002240000022458000224dc000225c6000226dc000227d8
000228820002297200022a4400022b2e00022c1600022cc600022d480002
2fa600022fd000022ffa000230b2000230dc0002321e000233240002340e
00023438000234620002348c000234b6000234e0000236600002368a0002
36b4000236de00023708000237320002375c00023786000237b0000237e4
0002380e0002383800023862000239dc000239ec00023b0600023b160002
3b4000023b6a00023b9400023bbe00023d6800023f84000240b2000240c2
0002423e0002424e000243940002456000024666000247e6000249860002
4baa00024d0400024ee60002502a0002515800025182000251ac000251d6
000252000002522a000252540002527e000252a8000252d2000252fc0002
5326000253500002537a000253a4000253ce000253f800025634000257b0
000258f400025adc00025c2400025c4e00025c7800025ca800025cd80002
5d2800025d7800025db800025e2a00025e7e00025edc00025f3200025f68
00025faa00025ff00002603a0002606a000260a2000260d20002620a0002
65500002657a000265a4000265ce000265f8000266220002664c00026676
000266a0000266ca000266f40002671e00026748000267720002679c0002
67c6000267f00002681a000268440002686e00026898000268c2000268ec
00026916000269400002696a00026994000269be000269e800026a860002
6a9c00026ac600026da600026db600026ed000026ff20002713000027272
00027418000274280002756a000276ba000278aa00027a7e00027b960002
7ba600027c2800027cb600027db600027dc600027e6600027e7600027f8c
000280de0002820e0002821e000282ec000282fc00028472000284820002
8596000285a6000286da000288700002892c0002893c00028a3a00028b94
00028c2000028c3000028d5a00028ee600028fa200028fb20002904e0002
905e0002912c0002913c00029214000292240002932c0002933c00029502
000295120002966a0002967a000298e4000298f400029aee00029afe0002
9c6800029c7800029d6800029d7800029f1000029f200002a03e0002a04e
0002a18e0002a19e0002a1ae0002a1be0002a3360002a3460002a3560002
a3660002a4b80002a6060002a6d40002a7b80002a9380002aaba0002abba
0002acce0002ae120002ae220002af100002afea0002b1860002b1960002
b2b40002b3ba0002b5b80002b5c80002b5d80002b5e80002b7320002b742
0002b7fa0002b80a0002b9180002b9280002ba140002ba240002bb420002
bb520002bbf00002bc000002bc100002bcfe0002be720002bf9e0002c098
0002c0a80002c0b80002c0c80002c2660002c4200002c4ee0002c4fe0002
c75e0002c9a40002cc2a0002ce8e0002d1120002d3840002d5540002d70a
0002d7340002d75e0002d76e0002d77e0002d7a80002d7d20002d7fc0002
d80c0002d81c0002d8460002d8700002d8800002d8900002d8ba0002d8e4
0002d90e0002d91e0002d92e0002d93e0002d94e0002d95e0002d96e0002
d9980002d9a80002d9b80002d9e20002da0c0002da360002da600002da8a
0002dab40002dade0002db080002db320002db5c0002db860002dbb00002
dbda0002dc040002dc2e0002dc580002dc820002dcac0002dcd60002dd00
0002dd2a0002dd540002dd7e0002dda80002ddd20002ddfc0002de260002
de500002de7a0002dea40002dece0002def80002df220002df4c0002df76
0002dfa00002dfca0002dff40002e01e0002e0480002e0720002e09c0002
e0c60002e0f00002e11a0002e1440002e16e0002e1980002e1c20002e1ec
0002e2160002e2400002e26a0002e2940002e3340002e3780002e3ee0002
e4180002e4420002e46c0002e4960002e4c00002e4ea0002e5140002e53e
0002e5680002e5920002e5bc0002e5e60002e6100002e63a0002e6640002
e68e0002e6b80002e6e20002e70c0002e7360002e7600002e78a0002e7b4
0002e7de0002e8120002e8460002e87a0002ea0c0002eba80002ed440002
eed00002ef160002ef5c0002efca0002f0260002f0780002f0e80002f1c0
0002f28c0002f3640002f4300002f4d00002f5ea0002f69e0002f7200002
f77a0002f7ba0002f8d80002fa220002fbba0002fc160002fc740002fcd0
0002fd2c0002fde00002fe960002ff420002ffee0003009a000301520003
020a000302c2000302d4000302e6000302f80003030a0003031c0003038a
000303f8000304b0000304c2000304d4000304e6000304f6000305080003
051a0003052c0003053e000305500003056200030610000306bc0003076a
00030816000308ae000308e8000309120003093c00030990000309e20003
0a5e00030aa800030b2400030b7800030bfc00030c4e00030cc400030d1c
00030d8200030dd800030e3200030eb000030efc00030f5a00030fbe0003
100c0003105a000310b2000310fa000311240003115200031178000311ac
000311dc0003120c0003125e000312cc0003132200031396000313ea0003
145e000314a40003150c00031552000315ae000315de000316180003163e
0003166e00031694000316ba000316ec0003171c0003176e000317d40003
182a00031890000318e40003195200031994000319f400031a3600031a82
00031abc00031af800031b3200031b6e00031ba200031bd400031c040003
1c3400031c5e00031c8400031cae00031cdc00031d0600031d5200031d96
00031dcc00031e0800031e3c00031e6a00031ea800031ed800031f120003
1f3c00031f6a00031f9000031fb600031fe20003203e0003206e0003209e
000320ce000321060003213a0003216800032198000321c8000321f80003
22280003225c000322b2000322e6000323460003237a000323d200032406
0003246200032500000325ce000326ee000327b600032846000328dc0003
2ac800032cc400032e3c00032fb80003316200033314000333fc00033532
0003362a0003373c0003385a0003399000033afa00033c6800033dfe0003
3f7a0003408a0003409a000341c60003430200034444000345c8000346a2
00034718000347ce00034874000349e400034a1c00034a9600034b580003
4c1200034c7a00034d8000034eb600034f84000350e20003515c000351d6
0003529e000353580003540c00035468000354c20003550a0003557a0003
55f6000356400003567a000356c00003570400035756000357a80003582a
000358ac000358ee0003592e000359640003599a000359c8000359f60003
5a2a00035a5e00035aa000035ae200035b1e00035b5a00035b9400035bce
00035c0000035c3200035c6400035c9600035cd000035d0a00035d4c0003
5d8e00035dd000035e1200035e6000035eae00035ef000035f3200035f72
00035fb200035fec0003602600036072000360be000360fc0003613c0003
6182000361c8000362040003625a00036296000362d20003631200036352
0003638e000363ca0003640a0003644a0003648e000364d2000365260003
65b4000365f600036638000366a0000367080003673a0003676c000367a4
000367dc0003687200036908000369520003699c000369d800036a140003
6a6a00036ac000036b0a00036b5400036bac00036c0400036c4400036c84
00036cbc00036cf400036d3e00036d8800036dc600036e0400036e460003
6e8800036edc00036f3000036f7600036fbc00037002000370480003709e
000370f40003714a000371a0000371ec0003723800037284000372d00003
7344000373b80003742c000374a0000374de0003751c0003755a00037598
000375d600037614000376580003769c000376e800037734000377940003
77e00003781e0003786c0003797c000379cc00037a1c00037a5400037a8c
00037ae200037b3800037bac00037c1000037c5200037c9400037cea0003
7d3800037d8400037dd000037e1000037e5000037e9800037ee000037f4c
00037fa600037fde000380160003805600038096000381b0000382f60003
83e6000384f60003854c000385a2000385f400038648000386ac00038710
00038766000387bc00038832000388a8000388ea0003892c0003896e0003
89b0000389f200038a3400038a8a00038ae000038b3200038b8600038c0e
00038c9000038d3000038dd200038e1000038e4e00038e8c00038ec80003
8f0600038f4400038f8200038fbe000390a20003918e000392a4000393c0
0003948a000395540003964e00039748000398460003994400039a620003
9b8000039ca600039dcc00039ece00039fd00003a0620003a0f40003a132
0003a1700003a1ca0003a2240003a25c0003a2940003a3a40003a3b40003
a3fc0003a4440003a49c0003a4f40003a5260003a5580003a59a0003a5dc
0003a6160003a6500003a6940003a6d80003a7500003a7ca0003a85a0003
a89e0003a8de0003a9600003a9e20003ab3a0003ab4a0003ab980003abe6
0003ac220003ac5e0003aca40003acea0003ad380003ad860003add60003
ae260003ae820003aede0003b0540003b1bc0003b1f40003b22e0003b27a
0003b2c60003b3180003b36a0003b3bc0003b4120003b44e0003b48a0003
b4e00003b5340003b66c0003b70c0003b75a0003b79a0003b7d40003b96a
0003bbd20003bc960003be2c0003bf8a0003c0580003c1fe0003c4520003
c68a0003c6d00003c7020003c7ac0003c8d00003c8f40003c98e0003ca9a
0003cbaa0003ccba0003cdc80003cf4e0003cf800003d0220003d04a0003
d0ac0003d10e0003d1700003d1d20003d2100003d24e0003d2880003d2c2
0003d2ee0003d33a0003d3740003d3ae0003d50a0003d65e0003d66e0003
d72c0003d8620003d8c00003d9d80003db660003dc0c0003dd520003dd90
0003ddce0003de0c0003de600003de880003dee20003df460003df8e0003
dff00003e0500003e0c20003e13e0003e1ba0003e23c0003e2c80003e354
0003e3de0003e45e0003e4980003e4d40003e6380003e7020003e7320003
e76200010000068a0100003f0076000700020010002f00560000040d0aff
0003000200000046034e000000030000000000fe00000000000300000001
000a013e0000000300000002000e05de0000000300000003005e05c00000
000300000004000a013e0000000300000005001805ee0000000300000006
000e061e000000030000000700c4062c00000003000000080026077c0000
000300000009008a0da4000000030000000a04c200fe000000030000000b
00620e2e000000030000000c00660e90000000030000000d06b406f00000
00030000000e005c0ef60001000000000000007f0f520001000000000001
00050ff10001000000000002000712410001000000000003002f12320001
00000000000400050ff10001000000000005000c12490001000000000006
000712610001000000000007006212680001000000000008001313100001
00000000000900451624000100000000000a02610fd1000100000000000b
00311669000100000000000c0033169a000100000000000d035a12ca0001
00000000000e002e16cd0003000104030002000c16fb0003000104050002
0010170b0003000104060002000c171b0003000104070002001017270003
00010408000200101737000300010409000000fe00000003000104090001
000a013e0003000104090002000e05de0003000104090003005e05c00003
000104090004000a013e0003000104090005001805ee0003000104090006
000e061e000300010409000700c4062c00030001040900080026077c0003
000104090009008a0da4000300010409000a04c200fe000300010409000b
00620e2e000300010409000c00660e90000300010409000d06b406f00003
00010409000e005c0ef600030001040a0002000c16fb00030001040b0002
0010174700030001040c0002000c16fb00030001040e0002000c17570003
000104100002000e17670003000104130002001217750003000104140002
000c16fb0003000104150002001016fb0003000104160002000c16fb0003
000104190002000e178700030001041b00020010175700030001041d0002
000c16fb00030001041f0002000c16fb0003000104240002000e17950003
0001042a0002000e17a300030001042d0002000e17b100030001080a0002
000c16fb0003000108160002000c16fb000300010c0a0002000c16fb0003
00010c0c0002000c16fb00540079007000650066006100630065002000a9
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200070006c0063002e
00200044006100740061002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002f005400790070006500200053006f006c
007500740069006f006e007300200049006e0063002e0020003100390039
0030002d0031003900390032002e00200041006c006c0020005200690067
0068007400730020005200650073006500720076006500640043006f006e
00740065006d0070006f0072006100720079002000730061006e00730020
00730065007200690066002000640065007300690067006e002c00200041
007200690061006c00200063006f006e007400610069006e00730020006d
006f00720065002000680075006d0061006e006900730074002000630068
006100720061006300740065007200690073007400690063007300200074
00680061006e0020006d0061006e00790020006f00660020006900740073
0020007000720065006400650063006500730073006f0072007300200061
006e0064002000610073002000730075006300680020006900730020006d
006f0072006500200069006e002000740075006e00650020007700690074
006800200074006800650020006d006f006f00640020006f006600200074
006800650020006c00610073007400200064006500630061006400650073
0020006f006600200074006800650020007400770065006e007400690065
00740068002000630065006e0074007500720079002e0020002000540068
00650020006f0076006500720061006c006c002000740072006500610074
006d0065006e00740020006f006600200063007500720076006500730020
0069007300200073006f006600740065007200200061006e006400200066
0075006c006c006500720020007400680061006e00200069006e0020006d
006f0073007400200069006e0064007500730074007200690061006c0020
007300740079006c0065002000730061006e007300200073006500720069
0066002000660061006300650073002e00200020005400650072006d0069
006e0061006c0020007300740072006f006b006500730020006100720065
00200063007500740020006f006e00200074006800650020006400690061
0067006f006e0061006c002000770068006900630068002000680065006c
0070007300200074006f0020006700690076006500200074006800650020
0066006100630065002000610020006c0065007300730020006d00650063
00680061006e006900630061006c00200061007000700065006100720061
006e00630065002e002000200041007200690061006c0020006900730020
0061006e002000650078007400720065006d0065006c0079002000760065
00720073006100740069006c0065002000660061006d0069006c00790020
006f00660020007400790070006500660061006300650073002000770068
006900630068002000630061006e00200062006500200075007300650064
0020007700690074006800200065007100750061006c0020007300750063
006300650073007300200066006f00720020007400650078007400200073
0065007400740069006e006700200069006e0020007200650070006f0072
00740073002c002000700072006500730065006e0074006100740069006f
006e0073002c0020006d006100670061007a0069006e0065007300200065
00740063002c00200061006e006400200066006f00720020006400690073
0070006c00610079002000750073006500200069006e0020006e00650077
0073007000610070006500720073002c0020006100640076006500720074
006900730069006e006700200061006e0064002000700072006f006d006f
00740069006f006e0073002e004d006f006e006f0074007900700065003a
0041007200690061006c00200052006500670075006c00610072003a0056
0065007200730069006f006e00200033002e0030003000200028004d0069
00630072006f0073006f0066007400290041007200690061006c004d0054
0041007200690061006c00ae002000540072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0070006c0063002000720065006700690073007400650072006500640020
0069006e0020007400680065002000550053002000500061007400200026
00200054004d0020004f00660066002e00200061006e006400200065006c
0073006500770068006500720065002e004e004f00540049004600490043
004100540049004f004e0020004f00460020004c004900430045004e0053
0045002000410047005200450045004d0045004e0054000d000a000d000a
005400680069007300200074007900700065006600610063006500200069
00730020007400680065002000700072006f007000650072007400790020
006f00660020004d006f006e006f00740079007000650020005400790070
006f00670072006100700068007900200061006e00640020006900740073
002000750073006500200062007900200079006f00750020006900730020
0063006f0076006500720065006400200075006e00640065007200200074
006800650020007400650072006d00730020006f0066002000610020006c
006900630065006e00730065002000610067007200650065006d0065006e
0074002e00200059006f0075002000680061007600650020006f00620074
00610069006e006500640020007400680069007300200074007900700065
006600610063006500200073006f00660074007700610072006500200065
006900740068006500720020006400690072006500630074006c00790020
00660072006f006d0020004d006f006e006f00740079007000650020006f
007200200074006f00670065007400680065007200200077006900740068
00200073006f006600740077006100720065002000640069007300740072
0069006200750074006500640020006200790020006f006e00650020006f
00660020004d006f006e006f0074007900700065002700730020006c0069
00630065006e0073006500650073002e000d000a000d000a005400680069
007300200073006f00660074007700610072006500200069007300200061
002000760061006c007500610062006c0065002000610073007300650074
0020006f00660020004d006f006e006f0074007900700065002e00200055
006e006c00650073007300200079006f0075002000680061007600650020
0065006e0074006500720065006400200069006e0074006f002000610020
007300700065006300690066006900630020006c006900630065006e0073
0065002000610067007200650065006d0065006e00740020006700720061
006e00740069006e006700200079006f0075002000610064006400690074
0069006f006e0061006c0020007200690067006800740073002c00200079
006f0075007200200075007300650020006f006600200074006800690073
00200073006f0066007400770061007200650020006900730020006c0069
006d006900740065006400200074006f00200079006f0075007200200077
006f0072006b00730074006100740069006f006e00200066006f00720020
0079006f007500720020006f0077006e0020007000750062006c00690073
00680069006e00670020007500730065002e00200059006f00750020006d
006100790020006e006f007400200063006f007000790020006f00720020
006400690073007400720069006200750074006500200074006800690073
00200073006f006600740077006100720065002e000d000a000d000a0049
006600200079006f00750020006800610076006500200061006e00790020
007100750065007300740069006f006e00200063006f006e006300650072
006e0069006e006700200079006f00750072002000720069006700680074
007300200079006f0075002000730068006f0075006c0064002000720065
007600690065007700200074006800650020006c006900630065006e0073
0065002000610067007200650065006d0065006e007400200079006f0075
002000720065006300650069007600650064002000770069007400680020
00740068006500200073006f0066007400770061007200650020006f0072
00200063006f006e00740061006300740020004d006f006e006f00740079
0070006500200066006f00720020006100200063006f007000790020006f
006600200074006800650020006c006900630065006e0073006500200061
0067007200650065006d0065006e0074002e000d000a000d000a004d006f
006e006f0074007900700065002000630061006e00200062006500200063
006f006e007400610063007400650064002000610074003a000d000a000d
000a0055005300410020002d002000280038003400370029002000370031
0038002d0030003400300030000900090055004b0020002d002000300031
003100340034002000300031003700330037002000370036003500390035
0039000d000a0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d004d006f006e006f
007400790070006500200054007900700065002000440072006100770069
006e00670020004f006600660069006300650020002d00200052006f0062
0069006e0020004e006900630068006f006c00610073002c002000500061
0074007200690063006900610020005300610075006e0064006500720073
002000310039003800320068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f006d0074006e0061006d0065002f006d0073005f0061
007200690061006c002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f006d0074006e0061006d0065002f
006d0073005f00770065006c0063006f006d0065002e00680074006d006c
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d002f00680074006d006c002f0074
007900700065002f006c006900630065006e00730065002e00680074006d
006c547970656661636520a920546865204d6f6e6f7479706520436f7270
6f726174696f6e20706c632e204461746120a920546865204d6f6e6f7479
706520436f72706f726174696f6e20706c632f5479706520536f6c757469
6f6e7320496e632e20313939302d313939322e20416c6c20526967687473
205265736572766564436f6e74656d706f726172792073616e7320736572
69662064657369676e2c20417269616c20636f6e7461696e73206d6f7265
2068756d616e69737420636861726163746572697374696373207468616e
206d616e79206f6620697473207072656465636573736f727320616e6420
61732073756368206973206d6f726520696e2074756e6520776974682074
6865206d6f6f64206f6620746865206c6173742064656361646573206f66
20746865207477656e74696574682063656e747572792e2020546865206f
766572616c6c2074726561746d656e74206f662063757276657320697320
736f6674657220616e642066756c6c6572207468616e20696e206d6f7374
20696e647573747269616c207374796c652073616e732073657269662066
616365732e20205465726d696e616c207374726f6b657320617265206375
74206f6e2074686520646961676f6e616c2077686963682068656c707320
746f20676976652074686520666163652061206c657373206d656368616e
6963616c20617070656172616e63652e2020417269616c20697320616e20
65787472656d656c7920766572736174696c652066616d696c79206f6620
7479706566616365732077686963682063616e2062652075736564207769
746820657175616c207375636365737320666f7220746578742073657474
696e6720696e207265706f7274732c2070726573656e746174696f6e732c
206d6167617a696e6573206574632c20616e6420666f7220646973706c61
792075736520696e206e6577737061706572732c20616476657274697369
6e6720616e642070726f6d6f74696f6e732e4d6f6e6f747970653a417269
616c20526567756c61723a56657273696f6e20332e303020284d6963726f
736f667429417269616c4d54417269616ca82054726164656d61726b206f
6620546865204d6f6e6f7479706520436f72706f726174696f6e20706c63
207265676973746572656420696e2074686520555320506174202620544d
204f66662e20616e6420656c736577686572652e4e4f5449464943415449
4f4e204f46204c4943454e53452041475245454d454e540d0a0d0a546869
73207479706566616365206973207468652070726f7065727479206f6620
4d6f6e6f74797065205479706f67726170687920616e6420697473207573
6520627920796f7520697320636f766572656420756e6465722074686520
7465726d73206f662061206c6963656e73652061677265656d656e742e20
596f752068617665206f627461696e656420746869732074797065666163
6520736f66747761726520656974686572206469726563746c792066726f
6d204d6f6e6f74797065206f7220746f676574686572207769746820736f
667477617265206469737472696275746564206279206f6e65206f66204d
6f6e6f747970652773206c6963656e736565732e0d0a0d0a546869732073
6f66747761726520697320612076616c7561626c65206173736574206f66
204d6f6e6f747970652e20556e6c65737320796f75206861766520656e74
6572656420696e746f2061207370656369666963206c6963656e73652061
677265656d656e74206772616e74696e6720796f75206164646974696f6e
616c207269676874732c20796f757220757365206f66207468697320736f
667477617265206973206c696d6974656420746f20796f757220776f726b
73746174696f6e20666f7220796f7572206f776e207075626c697368696e
67207573652e20596f75206d6179206e6f7420636f7079206f7220646973
74726962757465207468697320736f6674776172652e0d0a0d0a49662079
6f75206861766520616e79207175657374696f6e20636f6e6365726e696e
6720796f75722072696768747320796f752073686f756c64207265766965
7720746865206c6963656e73652061677265656d656e7420796f75207265
63656976656420776974682074686520736f667477617265206f7220636f
6e74616374204d6f6e6f7479706520666f72206120636f7079206f662074
6865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e6f74
7970652063616e20626520636f6e7461637465642061743a0d0a0d0a5553
41202d202838343729203731382d303430300909554b202d203031313434
203031373337203736353935390d0a687474703a2f2f7777772e6d6f6e6f
747970652e636f6d4d6f6e6f7479706520547970652044726177696e6720
4f6666696365202d20526f62696e204e6963686f6c61732c205061747269
636961205361756e646572732031393832687474703a2f2f7777772e6d6f
6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f61726961
6c2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f
68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c687474
703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f74797065
2f6c6963656e73652e68746d6c004e006f0072006d0061006c006e007900
6f00620079010d0065006a006e00e9006e006f0072006d0061006c005300
740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac00
4e006f0072006d00610061006c0069004e006f0072006d00e1006c006e00
65004e006f0072006d0061006c0065005300740061006e00640061006100
720064041e0431044b0447043d044b0439004e0061007600610064006e00
6f0074006801b001a10300006e00670041007200720075006e0074006100
0000b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[15785 15901 16277 16373 15369 15665 16261 15773 16185 15861 14953 15997 15693
15621 16237 17907 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2430 11 <0001007cfe51026005d30010003d400a270f0100101207081010b80133b3
009f0e08b801334011079f0e5e0003100320030303ac119d8c182b10f65d
fdf6ed10f6ed003f3c3f3c3130015d012602113437363733060706070615
100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd059
8a96bbbdfe1ffe20>ArialMT AddT42Char 
1 2558 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>ArialMT AddT42Char 
1 11032 42 <0001006dffe705b905d300250113401a1b141b15026027015e0813011203
2424002112170225001e0201b8ffc040200c0c0655010106171e0e03211e
06090101262725242003032002202760020302b8ffe4b40f0f025502b8ff
f2b40d0d025502b8ffdab40c0c025502b8fff4401b0c0c06550272802701
271d26200a010a100c0c06550a1926635b182b4e10f42b5d4ded4d105df6
2b2b2b2b5d3c4d10fd3c1112392f003fed3fed12392f2b3cfd3c11123911
123901111239123931304379404404231b1c1a1c191c03060c2610251526
1f26082504262325180d1d2100160f1321011112141320071d2100220525
21011c0b17210114111721011e092121002403212100002b2b2b2b012b2b
103c103c2b2b2b2b2b2b2b2b2b2a81015d005d0135251106042322240235
3412243332041617072e02232206060706151412043332363711034c026d
8ffed0a0d8fe9fb4b30150db9f01019226af2162b66f85c2772138870102
917ef03e023fac01fde07273b9015ed8d60173b467b8943070804d51844f
889fc4fef88061370111>ArialMT AddT42Char 
1 11432 43 <000100a40000052205ba000b00d8b9000dffc0401a13153404031e090aa0
0ad00a020a0502020b0808050820070706b8ffeeb40f0f025506b8fff240
0b0d0d025506100c0c025506b8ffe040180b0b065506010c0c0655065d80
0d010d020b200120000100b8ffc0400a13153400201010025500b8fff6b4
0f0f025500b8fff6b40d0d025500b8fffa400b0c0c025500080b0b065500
b8fff7b40c0c065500b8fff840160d0d0655005d0c200d01200d500d600d
700d043b59182b5d7110f62b2b2b2b2b2b2b2b5d3cfd3c105df62b2b2b2b
2b3c10fd3c003f3c3f3c395d2f3cfd3c3130012b33113311211133112311
2111a4c202fac2c2fd0605bafda6025afa4602b3fd4d>ArialMT AddT42Char 
2 5440 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>ArialMT AddT42Char 
2 6312 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>ArialMT AddT42Char 
2 6758 73 <000100130000028005d30017010d401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040281a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff134004172504000302920101
00b8ffc0b331383400b8ffc0402b1c1f3490000119400f0f025519400d0e
025500141010025500280f0f025500220e0e0255002c0d0d025500b8fff2
400b0c0c025500140b0b065500b8ffeab41010065500b8ffe6b40f0f0655
00b8fffab70c0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b
2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced10eded5d003f3f3c3c3cfd3c
3fed391139313043794014101106090706080602061009121b0011060f1b
012b012b2a8181012b715d00723311233533353437363633321707262322
06151533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b3446
57129d0a4660628cfc66>ArialMT AddT42Char 
2 10014 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>ArialMT AddT42Char 
2 11370 84 <00020048fe6903e0043e0010001c0136408e0b022b022a183b024b02790c
063f153f194b19901ea01e053413341b3f1e4413441b5313531b6313631b
601e801ed406d512e606e90cea18102902220c2b153902350c4902460c5a
026902d90cdb18e316e919e61bfc020f01040d141a1c0b070e06141c040b
000e170e3300251010d00f01100f400f600f800f041e400b0c02551e400d
0d02550f12101002550fb8fff440110f0f02550f060e0e02550f160d0d02
550fb8fffe400b0c0c02550f16101006550fb8ffe8b40c0c06550fb8fff4
403f0d0d06550f741124bf07cf07df07ff07041f073f074f070307240b0b
0255071a0c0c025507220d0d025507160c0c0655071a0d0d065507191d1e
74213450182b2b4ef42b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d
713c10fdf43c003f3fed3f3fed113912393130005d015d71007101110606
23220011343636333217353311011416333236353426232206032c2a9755
bdfeef6fd37ec571a2fd21ac7873a6af7675a3fe6902083b4e012e0107a0
fe83a68efa4303adcdcdc3c7d4d6c700>ArialMT AddT42Char 
2 11776 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>ArialMT AddT42Char 
2 13266 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>ArialMT AddT42Char 
3 0 92 <00010021fe5103ee0426001a01f7b10202435458401d0a140f030b031c19
0f12060b061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a
1910dd1a18cd003f3f3fed12173931301bb30f1c010fb8ffde406d1c3928
14560faf0a03400d400f020f202830341020283034070c0912160d181227
0b270c270d360c360d350e99110b28122813481659125913591569126913
69157906760d79117a147a15850d8a118c128c138914980aa80bbc10bb11
ba14ea0ae714f50dfd10f914ff1c1e12b106024354584016130b1c1b040f
440f840f030f190b031c190f12060b06003f3f3fed1112395d0111123939
1b40370f0f0c101112120a00031914131325120a1412120a0f0c0f110c25
0b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021cb802
3fb50f1340124014b80254400b3f124012025f12bf120212b80142b60f01
2200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020cb801
42b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a1910
ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c103c
87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c44bb0
0e534bb018515a58bb000cffe8000bffe80138385959313001435c58b900
14ffdeb637390a2237390eb8ffe8b51539112215392b2b2b2b595d712b2b
00715d2b015d591327163332363736373637013313161736371333010607
060623227f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c412430
7c5634fe67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300
>ArialMT AddT42Char 
3 600 93 <00010028000003d40426000e01af400d12b802c9080212013212173408b8
ffce4009121734013e1e213408b8ffc2404a1e2134290228092f10390139
0a49014602460849094f105c01540254085a0950106c01630263086a097b
0174087b098b0185088909f901f4021b1908260129082b093908a508d701
0710b8ffc0b7101534022c123909b8ffd44023123901023a090a02080a0a
25010214010102010d0e08060261052b0706060a610d000db8fff440090b
0b06550d2b0e0a02b8010fb40808070506bb025b00000007fff440160b0b
065507220da00e01000e400e600e800ef00e050eb8fff440240b0b06550e
74000a7e0101af00014f006f00ff000300180b0b065500190f1074217cc4
182b2b4ef42b5d713c4d10ed10fd2b5d713ce42b10f43c103c10fd003fed
2b3c10e53f3cfde5113911123987052e2b877dc4100ec42b3130012b2b2b
715d002b2b2b2b435c58b5290126080201b8ffce40091217340832121734
01b8ffc2b71e2134083e1e2134002b2b2b2b017159015d435c58b90008ff
deb20f3909b8ffdeb20f3909b8ffe8b71b390908161b3d09b8fff0b21739
09b8fff8400a163902141639021a16392b2b2b2b2b2b2b2b593335010623
213521150107363321152802a47358fe4f0364fdc16f796a01eb92030806
9277fd5e7b099b00>ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/G 42 def
/H 43 def
/c 70 def
/e 72 def
/f 73 def
/n 81 def
/q 84 def
/r 85 def
/u 88 def
/y 92 def
/z 93 def
end
ArialMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 71 /G put
dup 72 /H put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 113 /q put
dup 114 /r put
dup 117 /u put
dup 121 /y put
dup 122 /z put
pop
end
%ADOEndSubsetFont
/PZDYMA+ArialMT /ArialMT findfont ct_VMDictPut
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 29{/.notdef}rp /G /H 26{/.notdef}rp /c 
/.notdef /e /f 7{/.notdef}rp /n 2{/.notdef}rp /q /r 
2{/.notdef}rp /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [0 -14.04 -14.04 0 0 0 ]msf
76.9481 146.03 mo
(frequency)
[-3.95929 -4.67523 -7.80621 -7.79218 -7.80627 -7.80621 -7.79218 -6.96387 0 ]ysh
76.9481 80.9968 mo
(\(GHz)
[-4.67523 -10.9231 -10.0807 0 ]ysh
76.9481 48.2415 mo
(\))sh
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6872b8000000cc000000606376
7420af93b7f90000012c0000050a6670676df6f64d0c000006380000091a
676c79665472675000005bac0000014268656164e227154000000f540000
0036686865610dae0b3c00000f8c00000024686d74782d65e0e800000fb0
000011846c6f63610005820200002134000011886d6178702801030d0000
32bc000000206e616d650ef9fb3c000032dc000004c170726570ffeae6e0
000037a00000240b67646972000000000000000000000000000304070190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204a00002ef4000207b00000000000000004d53202000400020
fb040600fe0001c4079e02262000009f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
00004047645f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645
44434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411
100f0d0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c2045b00325456164b050
515845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445
b02b23442d2c4b525845441b2121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c452345
6023456023456023766818b08062202d2cb00426b00426b00425b0042545
234520b003266062636820b0032661658a2344442d2c2045b0005458b040
442045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b
5158b02f2370b01423421b2121592d2c4b515820b0032545695358441b21
21591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45
2320458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333
0034005944442d2cb0164358b00326458a586466b01f601b64b020606620
581b21b04059b001615923586559b02923442310b029e01b212121212159
2d2cb0164358b004254564b020606620581b21b04059b0016123586559b0
292344b00425b00725082058021b0359b0052510b004252046b004252342
3cb0072510b006252046b00425b0016023423c2058011b0059b0052510b0
0425b029e0b0072510b00625b029e0b00425b00725082058021b0359b004
25b003254348b00625b00325b0016043481b2159212121212121212d2cb0
164358b004254564b020606620581b21b04059b0016123581b6559b02923
44b00525b00825082058021b0359b0042510b005252046b0042523423cb0
0425b0072508b0072510b006252046b00425b0016023423c2058011b0059
b0042510b00525b029e0b02920456544b0072510b00625b029e0b00525b0
0825082058021b0359b00525b003254348b00425b0072508b00625b00325
b0016043481b2159212121212121212d2c02b00425202046b004252342b0
052508b003254548212121212d2c02b0032520b0042508b0022543482121
212d2c452320451820b00050205823652359236820b040505821b0405923
5865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2c204569442d0000000100000001
051fa43d06775f0f3cf50019080000000000bbeb7ccc00000000c1274845
fc31fe7309b6079e000000090002000100000000000100000600fe0001c4
0a4efc31fe8c09b6000100000000000000000000000000000461040e0000
000000000000000001cf000004a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a10023061bffcc
061bffcc045a00ac04440061044400610444006104440061044400610444
006104ec00ac04ec009704ff001b04ff001b03e800ac03e8004503e800ac
03e8004603e8004603e8006303e8005f03e8008103e800ac03e800ac03ad
00ac050c005b050c005b050c005b050c005b050c005b04fc00ac04fc00ac
05400020020400ac0204ff4a020400280204ff390204ff310204ff500204
ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9042800ac
042800ac035d00ac035d0081036200ac035d00ac0370001c045e00ac06d7
00ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054f0063054f006306ef0063042200ac042200ac05620063045800ac
045800ac04580053045800ac03ad004703ad004703ad001503ad001803ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa048a0022071e003d071e003d071e003d071e003d071e003d
0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf003b03bf
003b03bf001a03bf003b03f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f40010055cffe2055c
ffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d03cb006d
046500a10465006a0477003204770032038000a103800030038000a10380
0020038000200380002c0380002903800042038000a1038000a1035000a1
0482006c0482006c0482006c0482006c0482006c047800a10478008c049d
004001ec00a101ecff5801ec001901ecff4801ecff2701ecff5501ecff52
01ecff7101ec001101ec0018041b00a1023e0000023eff8c03c900a103c9
00a102e000a102e0008702e600a102e000a102f0003203d500a1060600a1
049100a1049100a10491009904910078049100a1046600a104aa006604aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04ba006604ba00660606006603c500a103c500a104b1006603ed00a103ed
00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6034f0049
034f00490359001c0359fffe0359001c0359001c048d009f048d009c048d
009f048d0097048d0075048d009f048d009f048d009f048d009f048d009f
048d009f03fd0021063e0037063e0037063e0037063e0037063e003703cc
003603830010038300100383001003830010038300100369004403690044
036900080369004403d5005c03d5005c03d5005c03d5005c03d5001e03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c062f005c
043400990362005a0362005a0362004e036200570362005a0362005a076f
005a06dd005a0601005a0601005a04340060048c0060046a006004340061
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d02710025069a002508d5002504ab0025069b0025
08d50025043c0025043c0025043c0025043c0025044f0025044f0025044f
0025044f0025043c0025043c002506760025067600250676002506760025
068900250689002506890025068900250676002506760025043c0025043c
0025067600250609002508430025043c0025043c002504830025043c0025
0676002504ed002504ed0025051300250728002503c4003503c4003503c4
003503c4003503c400350434006004340060043400600434006004340060
043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6ff5a01d6
ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085041e0088
01eaffd501eaffd501eaff6303a3009903a3009903a3009901d6009901d6
002a021c009901d6004b01fb001c02fd0099066400990434009904340099
043400990434004e0434009904a2ff9d043400990438005a0438005a0438
005a0438005a0438004f0438005a0438005a0438005a0438005a043c005a
043c005a06cc005a04340099043400990434006002ca009902ca009902ca
fff902ca006e03210051032100510321fffe0321fffd0321005103210051
05ae005105ae00510438009901f1009902ae002102c4002102ae002102bc
002604e60021047500210475002104750021047500210475002104750021
0475002104750021047500210475002105130021074b002106d9002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d90021043400940434008e04340094043400860434004d043400890434
008604340094043400940434009404340094039d002205b8003505b80035
05b8003505b8003505b8003503770029039f0022039f0022039f0022039f
0022039f0022032900590329005903290007032900590338007203610064
0378005d02ac004402e5006c024e004402e5004802b8004701c100240297
002a02e9006c01630061016dffd80297006c015e006c0456006c02e6006c
02e6004502e5006c02e5004801f6006c0230004201e3002302e9006c0285
001f03ef002c027e00280286001f02370042025400000275000002940000
0000fd080000fce80256000002750000029400000000fd080000fce80329
0000035f0000039400000000fc9f0000fc6703290000035f000003940000
0000fc9d0000fc6901ff0000039a000003a2000003a800000000fc650000
fc600324000002f5000003460000036700000000fca00000fc7e03270000
03490000036a00000000fc9d0000fc7d030c0000030f0000031100000000
fcac0000fca9029100000298000002a000000000fce90000fce202cf0000
02c2000002b5000003c1000003e10000040000000000fc520000fc3101ce
000001d6000001ce000001ce00000000fd4d0000fd4d027500840000fd7a
027f00840000fd7601f700840231000004a1002304a1ff89045a00ac0353
00ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e054c0063
020400ac0204feb20204ff52042800ac0495002406d700ac052a00ac03ef
0053054c0063054cff1604fc00ac042200ac03ab004603e6000f03e6001e
03e6fe6e03e6001e0613000004270030060000900550005e0550fef903f4
001003f4ff75040400a102fb00a103c90023038000a10380fed103690044
047800a10478fed404b4006601ec00a101ecfebd01ecff5403c900a103e1
0011060600a1049100a10387005e04aa006604aaff3b047800a103c500a1
035b004b0359001c038300100383fea2038300100552000003cc00360558
008704b1006604b1ff67048a0061048a0061044000990432006403920018
0430000003a5005903a5005902c8004e044c0099044c0099044100600478
0006023200940232ffec0232ff7a0232ff0f03a3009903b4000004660099
039700220302004d0303004d0438005a0438005a046c0028041200760441
00590349005c0319000304550090045500900455007d0455001605360055
053b00550369001205a900940592006405920064028900000000fd0a03f4
00000000fc360205009702050097020500970224004801ff006e01ff006e
04a10023044d00ad045a00ac037000ac037000ac037600ac0527000303e8
00ac03e8004503e800610668005503ca004b052200ac052200ac052200ac
020400ac0204ff50028d0007045800ac045800ac04e3000306fa000306d7
00ac04fc00ac070300ac054c0063054c006304f900ac042200ac04440061
03ad004703e6000f0438000f0438000f04b800220594000004270030051c
00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac044000ac
0462005d04610062070800ac0471005304ff000f04f2000f0504000003f4
001003ee00a2040400a1031400a1031400a1032700a10480000e038000a1
038000300380002c0578004403800057048900a1048900960489009501ec
00a101ecff55023e000003ca00a103ca00a104320001060600a1047800a1
04aa006604a90066046a00a103c500a103cb006d034f00490359001c039d
001e039d001b042f0022050a000003cc0036048e00a1046900a103fa006d
062300a1064500a1045f0017058300a103e800a103e4006b03f000660632
00a103ff005c045f001f0463001f044d000006010001063200a103d5005c
044300000430000003d5009902c4009902c4009902d50099034900490477
00170434006003fb005d03fb005d03fb005d0583003e0362004b04530099
045300780453008801d6008501d6ff7201eaffd503b6009903b600990415
0016060200130569005f04470099062800990438005a0431005a042a0099
04340099043400990362005a032100510319000a06640099039f0022039f
001803d2002204fe005103770029045500990433009903c0004205d40099
05fe0099044a000a0554009903c20099038b004d038d005d05c6009903cb
00380453fff90443fff904270018036e0000036e0000036e00000000fca5
0000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5005e03de
0064026000ed026000b10364007a0361005f01ff002a02240048022400bb
020500970586009601ff008c01ff002a01ff008c01ff002a035900880359
002b035900880359002b01ff002a0359002b02b6007402b600c002b60074
02b600c004190075041900ad04190075041900ad0317000102df001f03af
018a03fc01ae0317000b02df002d027300450273004503fcfff603fcfff6
073e0095073e0095073e0095073e009503fcfff903fc00c1020500970205
0097026d0085026d007a027400bf0274005a028400560284007502400084
0240007a024a00b0024a0067026d0085026d007a027400bf0274005a0284
00560284007503fc009e03fc007703fc007803fc007604b0006b043d006e
03fc006a03fc003d01c4008b0335008b057500000556000007f700000727
0000073c00000727000006ad00af06ad00af040e008005a4003f05ac004d
02b6000003fc003f04b30049040e002a03fc0057040e00600434005803fc
00b903fc004a040e005303fc006d0419002b040e003403f30035039f0061
03be005f039f0058039f002506210049083300ac03fc002406e300a10411
001d0494005f02cb002303ec006203ec00510455002203d700510436007e
03b20035043600630436005c040e0048040e00ae040e0072040e0067040e
0020040e0065040e006b040e0063040e0052040e005204430067028d0019
0381005c0373005903ac00260368006103b7006e0349002f03b5004b03bc
0052039f0050039f008d039f0065039f0062039f003a039f0067039f0061
039f005e039f0051039f00500494005f02cb002303ec006203ec00510428
002203d700510436007e03b20035043600630436005c040e0048040e00ae
040e0072040e0067040e0030040e0065040e006b040e0063040e0052040e
00520321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
00580321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
0058029d003801f500310252003c0249002d024a00140246003202510030
0238002202570025024d0023029d003801f500310252003c0249002d024a
001402460032025100300238002202570025024d002302b1ff4b03130044
055f0044056900440517004405690044052e00440553004405c9004e05c9
004e0567004705b7004705a2004705cd0027057d004505a20045052a0035
05b80048084e0048057d005c07c9005c03fc004603fc004c03fc006003fc
002b03fc005e03fc006003fc005903fc004503fc006503fc004c03fc0055
03fc005603fc003d05e9002c0405003506d300690443006102ed000703fc
00080484003a0550005e04660099066500660454005b0416004a073e009a
073e0096073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e
009a0638009f046600280000000000000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420001
0000046100ad000700ac000700020010002f006500002318018200040001
0000000e00ae000000030000000000640000000000030000000700fa0064
00010000000000000032015e0001000000000003000e0190000100000000
0004000e019e0001000000000006000e01ac0001000000000007007d01ba
0003000104090000006402370003000104090001001c029b000300010409
0002000e02b70003000104090003001c02c50003000104090004001c02e1
0003000104090006001c02fd000300010409000700fa031900a900200032
0030003000360020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000650069
007400680065007200200061002000720065006700690073007400650072
00650064002000740072006100640065006d00610072006b0020006f0072
00200061002000740072006100640065006d00610072006b0020006f0066
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea92032303036204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e4558435544462b43616c696272694558435544462b43616c6962
72694558435544462b43616c6962726943616c6962726920697320656974
686572206120726567697374657265642074726164656d61726b206f7220
612074726164656d61726b206f66204d6963726f736f667420436f72706f
726174696f6e20696e2074686520556e697465642053746174657320616e
642f6f72206f7468657220636f756e74726965732e00a900200032003000
3000360020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
2e004500580043005500440046002b00430061006c006900620072006900
52006500670075006c00610072004500580043005500440046002b004300
61006c0069006200720069004500580043005500440046002b0043006100
6c0069006200720069004500580043005500440046002b00430061006c00
6900620072006900430061006c0069006200720069002000690073002000
650069007400680065007200200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f007200200061002000740072006100640065006d00610072006b002000
6f00660020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e00200069006e00200074006800
6500200055006e0069007400650064002000530074006100740065007300
200061006e0064002f006f00720020006f00740068006500720020006300
6f0075006e00740072006900650073002e000000b2090320b80284b40918
014a20b80283b40918014a20b80282b40918014a20b80281b40918014a20
b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8027d
b40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab40918
014a20b80279b40918014a20b80278b40918014a20b80277b40918014a20
b80276b40918014a20b80275b40918014a20b80274b40918014a20b80273
b40918014a20b80271b40918014a20b80270b40918014a20b8026fb40918
014a20b8026eb40918014a20b8026db40918014a20b8026cb40918014a20
b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b80268
b40918014a20b80267b40918014a20b80266b40918014a20b80265b40918
014a20b80264b40918014a20b80263b40918014a20b80262b40918014a20
b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8025e
b40918014a20b8025db40918014a20b8025cb40918014a20b8025bb40918
014a20b8025ab40918014a20b80259b40918014a20b80258b40918014a20
b80257b40918014a20b80256b40918014a20b80255b40918014a20b80254
b40918014a20b80253b40918014a20b80252b40918014a20b80251b40918
014a20b80250b40918014a20b8024fb40918014a20b8024eb40918014a20
b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8024a
b40918014a20b80249b40918014a20b80248b40918014a20b80247b40918
014a20b80246b40918014a20b80245b40918014a20b80244b40918014a20
b80243b40918014a20b80242b40918014a20b80241b40918014a20b80240
b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db40918
014a20b8023cb40918014a20b8023bb40918014a20b8023ab40918014a20
b80239b40918014a20b80238b40918014a20b80237b40918014a20b80236
b40918014a20b80235b40918014a20b80234b40918014a20b80233b40918
014a20b80232b40918014a20b80231b40918014a20b80230b40918014a20
b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8022c
b40918014a20b8022bb40918014a20b8022ab40918014a20b80229b40918
014a20b80228b40918014a20b80227b40918014a20b80226b40918014a20
b80225b40918014a20b80224b40918014a20b80223b40918014a20b80222
b40918014a20b80221b40918014a20b80220b40918014a20b8021fb40918
014a20b8021eb40918014a20b8021db40918014a20b8021cb40918014a20
b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b80218
b40918014a20b80217b40918014a20b80216b40918014a20b80215b40918
014a20b80214b40918014a20b80213b40918014a20b80212b40918014a20
b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8020e
b40918014a20b8020db40918014a20b8020cb40918014a20b8020bb40918
014a20b8020ab40918014a20b80209b40918014a20b80208b40918014a20
b80207b40918014a20b80206b40918014a20b80205b40918014a20b80204
b40918014a20b80203b40918014a20b80202b40918014a20b80201b40918
014a20b80200b40918014a20b801ffb40918014a20b801feb40918014a20
b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f5b40918014a20b801f4b40918014a20
b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b801f0
b40918014a20b801efb40918014a20b801eeb40918014a20b801edb40918
014a20b801ecb40918014a20b801ebb40918014a20b801eab40918014a20
b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b801e6
b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b40918
014a20b801e2b40918014a20b801e1b40918014a20b801e0b40918014a20
b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b801dc
b40918014a20b801dbb40918014a20b801dab40918014a20b801d9b40918
014a20b801d8b40918014a20b801d7b40918014a20b801d6b40918014a20
b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b801d2
b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb40918
014a20b801ceb40918014a20b801cdb40918014a20b801ccb40918014a20
b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b801c8
b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b40918
014a20b801c4b40918014a20b801c3b40918014a20b801c2b40918014a20
b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b801be
b40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb40918
014a20b801bab40918014a20b801b9b40918014a20b801b8b40918014a20
b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b801b4
b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b40918
014a20b801b0b40918014a20b801afb40918014a20b801aeb40918014a20
b801adb40918014a20b801acb40918014a20b801abb40918014a20b801aa
b40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b40918
014a20b801a6b40918014a20b801a5b40918014a20b801a4b40918014a20
b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db40918
014a20b8019cb40918014a20b8019bb40918014a20b8019ab40918014a20
b80199b40918014a20b80198b40918014a20b80197b40918014a20b80196
b40918014a20b80195b40918014a20b80194b40918014a20b80193b40918
014a20b80192b40918014a20b80191b40918014a20b80190b40918014a20
b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8018c
b40918014a20b8018bb40918014a20b8018ab40918014a20b80189b40918
014a20b80188b40918014a20b80187b40918014a20b80186b40918014a20
b80185b40918014a20b80184b40918014a20b80183b40918014a20b80182
b40918014a20b80181b40918014a20b80180b40918014a20b8017fb40918
014a20b8017eb40918014a20b8017db40918014a20b8017cb40918014a20
b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b80178
b40918014a20b80177b40918014a20b80176b40918014a20b80175b40918
014a20b80174b40918014a20b80173b40918014a20b80172b40918014a20
b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8016e
b40918014a20b8016db40918014a20b8016cb40918014a20b8016bb40918
014a20b8016ab40918014a20b80169b40918014a20b80168b40918014a20
b80167b40918014a20b80166b40918014a20b80165b40918014a20b80164
b40918014a20b80163b40918014a20b80162b40918014a20b80161b40918
014a20b80160b40918014a20b8015fb40918014a20b8015eb40918014a20
b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8015a
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80153b40918014a20b80152b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80149b40918014a20b80148b40918014a20
b80147b40918014a20b80146b40918014a20b80145b40918014a20b80144
b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151fb802
82b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb2
1e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e
1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb8
0275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb80271
b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d
431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451f
b80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451fb802
64b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb80260b2
1c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c45
1fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb8
0257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80253
b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c
451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451f
b8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb802
46b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b2
1b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a
1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb8
0239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235
b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b
4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1f
b8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb802
28b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b2
1b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c
1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8
021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217
b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a
4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1f
b8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb802
0ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b2
19501fb80205b219511fb80204b219511fb80203b219501fb80202b21951
1fb80201b219511fb80200b219511fb801ffb219511fb801feb219501fb8
01fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb801f9
b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5b218
541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218541f
b801f0b218531fb801efb218541fb801eeb218541fb801edb218541fb801
ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801e8b2
18541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b21853
1fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b218531fb8
01dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb801db
b218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7b217
571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217571f
b801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561fb801
ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab2
17561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b21757
1fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b217571fb8
01c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb801bd
b217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9b217
571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217571f
b801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801
b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2
165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f
1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb8
01a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019f
b2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb216
5b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1f
b80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb801
92b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2
165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b
1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb8
0185b215621fb80184b215621fb80183b215661fb80182b215661fb80181
b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017db215
611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215661f
b80178b215661fb80177b215661fb80176b215661fb80175b215661fb801
74b215661fb80173b215451fb80172b215621fb80171b215621fb80170b2
15631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb21566
1fb8016bb215661fb8016ab215661fb80169b215621fb80168b215621fb8
0167b215611fb80166b215641fb80165b215641fb80164b215661fb80163
b215661fb80162b215661fb80161b215661fb80160b215661fb8015fb215
661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215361f
b8015ab215611fb80159b215621fb80158b215621fb80157b215631fb801
56b215641fb80155b215661fb80154b215661fb80153b215661fb80152b2
15661fb80151b214401fb80150b214551fb8014fb214561fb8014eb21483
1fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb8
0149b214401fb80148b214401fb80147b214411fb80146b2147e1fb80145
b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141b212
461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212461f
b8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb801
38b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2
115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b21157
1fb8012fb211571fb8012eb211581fb8012db211591fb8012cb211591fb8
012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127
b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123b211
571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb2115a1f
b8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb801
1ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2
105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d
1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8
010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109
b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b210
5e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1f
b8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f
621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621f
f20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f
631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681f
e30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e
681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1f
d40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d
6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681f
c50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311f
be0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c
711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741f
af0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b
7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1f
a00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b
7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f
910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403
381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b
7d7b7dab7ddb7d404d060a7c557a557bab7a557955775578ab775576ab75
5504751475747503f47501ab750144750130750102007510752075030c74
55725573ab7255007250728072b072043bb072e072020072010ab8ffc0b3
721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f69
38675568ab67556638645565ab645563386255613860555f385d555eab5d
555c385a555bab5a55593858555703251f5638545555ab54555338515552
ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855473846
554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401b
e01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f19
8f19030f18cf18024018292c460f17cf17df17ef1704134017292e460016
101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546
b8ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf
10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e0340
0e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054
460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001010001
100120010308b8ffc0b401151f4603bc01000100000500010190b154532b
2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59b101024354b0144b515a58b101018e59858d8d001d42
4bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2
0300001d42592b5e7375732b2b745e732b2b5e73742b73742b7374745e73
01755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73
002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b5e73755e732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002
43545841ff0284006402830064028200640281006402800064027f006402
7e0064027d0064027c0064027b0064027a00640279006402780064027700
64027600640275006402740064027300640271006402700064026f006402
6e0064026d0064026c0064026b0064026a00640269006402680064026700
640266006402650064026400640263006402620064026100640260006402
5f0064025e0064025d0064025c0064025b0064025a006402590064025800
640257006402560064025500640254006402530064025200640251006402
500064024f0064024e0064024d0064024c0064024b0064024a0064024900
640248006402470064024600640245006402440064024300640242006402
41006402400064023f0064023e0064023d0064023c0064023b0064023a00
640239006402380064023700640236006402350064023400640233006402
3200640231006402300064022f0064022e0064022d0064022c0064022b00
64022a006402290064022800640227006402260064022500640224006402
230064022200640221006402200064021f0064021e0064021d0064021c00
64021b0064021a0064021900640218006402170064021600640215006402
14006402130064021200640211006402100064020f0064020e0064020d00
64020c0064020b0064020a00640209006402080064020700640206006402
050064020441ff00640203006402020064020100640200006401ff006401
fe006401fd006401fc006401fb006401fa006401f9006401f8006401f700
6401f6006401f5006401f4006401f3006401f2006401f1006401f0006401
ef006401ee006401ed006401ec006401eb006401ea006401e9006401e800
6401e7006401e6006401e5006401e4006401e3006401e2006401e1006401
e0006401df006401de006401dd006401dc006401db006401da006401d900
6401d8006401d7006401d6006401d5006401d4006401d3006401d2006401
d1006401d0006401cf006401ce006401cd006401cc006401cb006401ca00
6401c9006401c8006401c7006401c6006401c5006401c4006401c3006401
c2006401c1006401c0006401bf006401be006401bd006401bc006401bb00
6401ba006401b9006401b8006401b7006401b6006401b5006401b4006401
b3006401b2006401b1006401b0006401af006401ae006401ad006401ac00
6401ab006401aa006401a9006401a8006401a7006401a6006401a5006401
a4006401a3006401a2006401a1006401a00064019f0064019e0064019d00
64019c0064019b0064019a00640199006401980064019700640196006401
9500640194006401930064019200640191006401900064018f0064018e00
64018d0064018c0064018b0064018a006401890064018800640187006401
860064018500644180018400640183006401820064018100640180006401
7f0064017e0064017d0064017c0064017b0064017a006401790064017800
640177006401760064017500640174006401730064017200640171006401
700064016f0064016e0064016d0064016c0064016b0064016a0064016900
640168006401670064016600640165006401640064016300640162006401
61006401600064015f0064015e0064015d0064015c0064015b0064015a00
640159006401580064015700640156006401550064015400640153006401
52006401500064014f0064014e0064014c0064014b0064014a0064014900
640148006401470064014600640145006401440064014300642b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b185f5e0000>
[323 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> PBAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/space 3 def
end
PBAAAA+Calibri /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/PZDYMB+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/PZDYMB+Calibri*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
PZDYMB+Calibri nf
PZDYMB+Calibri*1 [0 -9.36 -9.36 0 0 0 ]msf
80.3081 35.9901 mo
( )sh
3.0518e-5 .993988 1 3.0518e-5 cmyk
%ADOBeginSubsetFont: HIBBAA+SymbolMT Initial
ct_T42Dict begin
0 -0.219 1.109 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+SymbolMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3284f3e872000000cc000000566376
74202ac4fb8500000124000005046670676df530c471000006280000050f
676c7966e6fcda13000016580000041668656164c5ad5c6500000b380000
0036686865610f2d038100000b7000000024686d74787750493e00000b94
000002fc6c6f6361938291d800000e90000001826d617870020305a70000
1014000000206e616d65235ad51700001034000002ae707265707e0fc165
000012e40000037167646972000000000000000000000000000104cd0190
00050000059a053300000125059a0533000003a0006602120c0305050102
010706020507000000000000000000000000000000004d6f6e6f0040f020
f0ff058cfe460133080b01c280000000000000000000055d0031054c001f
054c001c0394001b0000ffe10000ffe10000ffe4fe59ffed056b0023fe6a
ffdc270f000000b4000000b4000000000000000000610025005e0029004a
00c200f000be012a005000c0ffd0006300580277002d004a008f00b700c0
00de004400640002001a017c0020ff9c008c0026008300a00039041affb5
004c00e8080f00160024003a016f000600150067009e01dc0049004b002d
003b00470089007200470051006700f7013801dc0001000a005d00610094
009b00be00ce00df00190026002e00d6010701f7ffbb004300530063007b
00b900de0542058b0013009100a700a900c100e5012e01a401ea03eeffb5
ffccffeb0026002900310036005b00620062009200a100a700a700cb0223
03a3ff1aff7bffa8ffc8001c004400ab00b400c100c500ce00f601200156
016302a60379fefaff6effab0000000c00150024003a003a0041004c004e
007400a500ce00d600fb0109010901820220023f0263fe11ff170007001f
0020002b00530055006d007e0088008d0094009a009f00af00e8013f0168
01cd01ee020d028002bf0550074e074e09bffdd5ff47fff6000c000c0021
00290057006b0078007e009200930096009a00a100a500c400c400f000fd
0136013b013e01490152018f018601a501f8022b02db02fb030e030f032c
03590360037c03e203f90805fd4ffe97fed0ff50ff78000100010006000a
0025004300440054005c007000730077007c00800088008e008e00900091
00ab00ab00b000b900bf00bf00c300dd00e300e300e600e800ec01020105
0109010a012a012a01300130013b0140014a0155015f01670173019701b6
01b801be01c501ea01f4023402360239024f0252026702700274029002b0
02b102bf02e402f302fb033a03450373037f03ab03c203c803d203da0400
044a046104690475049404b004d504f004f404fe050005230523052e0561
05a0fda2fe4bfe5bff26ff3bff62ff8dff90ff90ffe80007001e00250026
002700440050006200630066006700700070007100710079007e00850091
0096009e00a100a100a500b600b800bc00c000c200c500c600d000da00dd
00dd00e200f700f901000102010501150121012d01310136013d01470147
015a01680176017c0180018e019a01a501b101b501b501c001dc01ea01fe
023902560259025e0276027c028d0297029b02b902c002d602db02ff0306
030f03180347034b0357035b035e0374039603980399039e039f03b803c0
03c60402043a045004720483049004a204af04c704d304dc0530053b058a
058a05b005b505bd05e60612061b0634065306b80706087908e708fe00b3
00c700b100b5000000000000000000000000000000000188011001b100ad
01e70304038002cc0258020b02d6018204cf01270274023c0100058e006e
00f202c0021d01d2023701570363015a002500820166015b009d031c03a2
034a00cc056e0153035001640053049700fc05c30061058a02b20302058a
03fd01f902ab0068008e026bfda9ff59010e005301a402a600ab007d003c
0029041a00d6023904b90125022902bf07ae01b8003e07060339033a080f
07ae01a403e300000053080f01ea006103e2004c00e102a6035202a6080f
00e601dc074f006e00fd03af0000007d003e01a4fe1100a905590260011c
02a4014cfd83fdd8039bff9f011902e20000fd11fd41024301b60155ffaa
02be00ef0097fef904e000be02db005501dc0063006b007800f200530077
003a015600fc020d0029005300610070403f3f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b0042651582320b00d44235921212d2c20204518684420b001602045b0
4676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c
00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a23
4445b01923442d2c2045b00325456164b050515845441b2121592d2cb001
43632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d
2cb01243588745b0112bb0172344b0177ae41b038a45186920b01723448a
8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d
2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185592d
2c20b0032545b019234445b01a23444565234520b00325606a20b0092342
23688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a545823
21b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b
235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d432343
0b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143234365
0b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b000
525823b002253823b002256538008a63381b212121212159012d2c4bb064
51584569b00943608a103a1b212121592d2c01b005251023208af500b001
6023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f5
00edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb0
2b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b80241
23701020b802414520b0005058b00161593a2f182d2c21210c6423648bb8
4000622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d
2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423
648bb84000626023212d2cb4000100000015b00826b00826b00826b00826
0f10161345683ab001162d2cb4000100000015b00826b00826b00826b008
260f1016134568653ab001162d2c4b53234b515a5820458a60441b212159
2d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c
4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c
4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c64
23646164b807085158b00425b00425012046b01060482046b0106048590a
21211b2121592d2cb012435c580cb00425b00425060c6423646164b80708
5158b00425b00425012046b8fff060482046b8fff06048590a21211b2121
592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b
2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b0
0426024b545a8a8a0ab012435c5a58381b2121592d000001000000028000
2a16e22d5f0f3cf5081d080000000000a348bc3b00000000b24cd4e1ffff
fe3e08e7080b0000000b000100000000000000010000080bfe3e00000856
feabfc2e08740001000000000000000000000000000000be04cd00670000
000000fa00000200000002aa00e405b40061040000250464005106aa0047
063900480383003a02aa005402aa002d04000091046400250200006e0464
0025020000910239ffff0400004a040000f00400002c0400005304000020
04000062040000590400004c0400007c04000051023900ac0239008b0464
003c046400250464003c038d00580464002505c700140556002205c70012
04e5001a04e30027061b004804d3002305c7002602aa0033050c004e05c7
0025057d0014071d002505c7ffe805c7004c0625002305ee004a04730026
04bc003804e3003b05850016038300470625003805290042065c002504e3
001602aa00a706e7016a02aa004a054400250400ffef040003da050c0054
046400790464004603f4004503830049042b0047034affff04d3002d02a2
004304d300450464001504640031049c007c042b00280464005804640037
042b00590464006904d3004e0383002b049c004705b40041057d005003f2
005b057d002f03f4005b03d700d3019a00a403d700d60464003404f60013
01fa00790464003c0156feab05b4003604000000060600b9060601300606
00f7060600f60856002907e5004b04d3005d07e5004b04d3005d03330066
04640025034a00690464003c0464007905b4006603f4004103ae006a0464
0025046400250464002404640034080000e604d302390800ff8d05440020
069600e4057d002d065c005e07e501820625004e0625004e069600610625
004d0625004d05b4003805b4003705b4003b05b4003b05b4003a05b4010a
05b4010b0625005305b4004a0652006306520063071f00320696002e0464
00540200009105b4003004d3003004d300300856002907e5004c04d3005d
07e5004c04d3005d03f4002f02a200410652006306520063064a002a05b4
002b03120053031200530312005303120000031200000312000003f401a4
03f4001c03f401a403f401a40652007502a2003e02310000057d02a6057d
02a6057d00430312ff930312025d0312ff93031200230312028103120023
03f4001c01a4001c00000032003200320032003200320032003200320032
00320032003200320032003200320032006100f000f000f000f000f000f0
00f000f000f000f000f000f000f000f000f000f000f000f000f000f000f0
00f000f000f000f000f000f000f000f000f000f000f000f000f000f000f0
00f000f000f000f000f000f000f000f000f000f000f000f000f000f000f0
00f000f000f001820182018201820182018201820182020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b020b020b020b020b020b020b020b020b020b020b020b020b020b
020b020b00000001000000c0006700050000000000020010002f00400000
00ed050f000000000000000a007e0001000000000000007f000000010000
00000003000f007f0001000000000004000f008e0001000000000006000f
009d000300000409000000fe00ac0003000004090001001e01aa00030000
04090002000e01c80003000004090003001e01d60003000004090004001e
01f40003000004090006001e0212547970656661636520a920546865204d
6f6e6f7479706520436f72706f726174696f6e20706c632e204461746120
a920546865204d6f6e6f7479706520436f72706f726174696f6e20706c63
2f5479706520536f6c7574696f6e7320496e632e20313939302d31393932
2e20416c6c205269676874732052657365727665644558435544462b5379
6d626f6c4d544558435544462b53796d626f6c4d544558435544462b5379
6d626f6c4d5400540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
007300200052006500730065007200760065006400450058004300550044
0046002b00530079006d0062006f006c004d00540052006500670075006c
00610072004500580043005500440046002b00530079006d0062006f006c
004d0054004500580043005500440046002b00530079006d0062006f006c
004d0054004500580043005500440046002b00530079006d0062006f006c
004d00540000411500120227022702260226006f01160001005f01160001
004f01160001003f01160001002f01160001022fb22f1f1fb8022eb2a01f
1fb8022cb21d291fb80224400be11a1f3127121f3c27291fb80217403b6c
291fe0aa191fe1aa191fab27321f883c321f833c321f2f3c321f7627321f
3c27291f27aa291f6f276f6d6f866f87043700161600000012110840b801
e3b655140914093790b801bf40390790bd0790b307906707906407905707
904607903607902e07902b079025079024071408120810080e080c080a08
0808060804080208000814b8ffe0402b0000010014061000000100060400
0001000410000001001002000001000200000001000002010802004a00b0
13034b024b5342b0382b4bb807ff52b0372b4bb007505b58b101018e59b0
382bb00288b801005458b801ffb101018e851bb0124358b9000101ff858d
1bb9000101ff858d5959014bb0c063004b6220b0f65323b8010a515ab005
234201b0124b004b5442180016763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b182b2b2b2b2b2b2b2b2b2b2b2b2b4b5079bc001f01750007001f0174b3
071f93072b2b2b4b5379bc00900175000700900174b3079093072b2b2b18
1db0964b5358b0aa1d59b0324b5358b0ff1d5901b341b5407b4565234560
23456560234560b08b766818b080622020b140b54565234520b003266062
636820b003266165b0b5236544b040234420b1417b4565234520b0032660
62636820b003266165b07b236544b0412344b1007b455458b17b406544b2
4140414523614459b9004e0162b12a8e456523456023456560234560b089
766818b080622020b9002a01624565234520b003266062636820b0032661
65b80162236544b02a234420b14e8e4565234520b003266062636820b003
266165b08e236544b04e2344b1008e455458b18e406544b24e404e452361
445945695342014b5058b108004259435c58b108004259b3020b0a124358
601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
002b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7373737373001845694418
456944435c58b9ffc00280b2121f322b5900000000>
[1047 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 480 73 <00030000fe46039f058e001a002500300087403c570158075715551e6701
69076715651e081b250c26302b0b3026251b04000d190130d6001bd61818
000726d60a25d60d0d0a0b0c0f3217171a2b2f03be01ef001a000b028100
19000c01efb7202f1119312a68182b4e10f44dedf43cfd3cf4ed4e456544
e6003f3f3c4d10ed10ed3f3c10ed10ed3f11121739011112393912393931
30005d01161215140e0207060711231126272635343e0237363711330306
07060615141617161733363736363534262726270207c7d13251643c2a4b
70975da3325565392949707042233945513c1c3a703d223e443e37244803
af16fef2bc56a1794f150e09fe62019e0f508bf8629c764b130e0901dffd
e4101c2da78f9ec93319110e1a30aa988bc134221700>HIBBAA+SymbolMT AddT42Char 
1 100 18 <00010000ffe4023b058e0003003e401c0302022601001401010001030403
000102010b001a05031904055c21b80133b159182b2b194ee410e618003f
3c3f3c01111239874d2e2b7d10c4313001012301023bfe155001eb058efa
5605aa00>HIBBAA+SymbolMT AddT42Char 
1 194 19 <00020000ffe4036d05680011002500a24028941eaa0da724b602b703b604
ba0db61008630821a5060516a50e0d1b760a1a271276001926549f182b4e
10f44ded4e10f64ded003fed3fed31304379404e01252425232502060201
03010401030608251d1c1e1c1f1c0306142610250c26191a181a02062205
12460020071b4601150f124600170d1b460125012146011c092146011311
1646001a0b1646002b2b2b2b012b2b2b2b2a2b2b2b2a2b2a2a81015d1134
123736363332171611140206232227261310171633323637361134272627
2623220706024a4e3b9a4c9d7c9b88d362c2816dc45f3a5636741e2e3024
39293a44354735029b9d011f6950589fc6feaeecfeb495e6c2010cfe899c
5e6272ac013fe39b7130213d53fe9f00>HIBBAA+SymbolMT AddT42Char 
1 0 0 <0002010000000500050000030007003b401e06076302010005046303000a
0605630303021a09070463010019082938182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c3130211121112521112101000400fc2003
c0fc400500fb002004c0>HIBBAA+SymbolMT AddT42Char 
HIBBAA+SymbolMT /CharStrings get begin
/g73 73 def
/g18 18 def
/g19 19 def
end
HIBBAA+SymbolMT /Encoding get
dup 32 /g73 put
dup 33 /g18 put
dup 34 /g19 put
pop
end
%ADOEndSubsetFont
/PZDYMC+SymbolMT /HIBBAA+SymbolMT findfont ct_VMDictPut
/PZDYMC+SymbolMT*1 
[32{/.notdef}rp /g73 /g18 /g19 221{/.notdef}rp]
PZDYMC+SymbolMT nf
PZDYMC+SymbolMT*1 [14.04 0 0 -14.04 0 0 ]msf
160.656 188.278 mo
( )sh
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 3052 15 <000100aafede018300cd000a004eb50a030007ab06b80150402601033c02
02010a013c000a020301033c000638073a4f005f006f007f00a0000500a0
0ba198182b10f45df4e410ed3c103c003fed3c103c10ed10fded01111239
31303335331514060727363637b6cd505732393603cdcd718b264d19615b
>ArialMT AddT42Char 
1 11694 44 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/comma 15 def
/I 44 def
end
ArialMT /Encoding get
dup 44 /comma put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 26{/.notdef}rp /G /H 
/I 25{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n 
2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y /z 
133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [9.36 0 0 -9.36 0 0 ]msf
167.616 191.638 mo
(I,II)
[2.63951 2.63953 2.63953 0 ]xsh
PZDYMC+SymbolMT*1 [14.04 0 0 -14.04 0 0 ]msf
178.176 188.278 mo
(! )
[3.95924 0 ]xsh
PZDYMC+SymbolMT*1 [9.36 0 0 -9.36 0 0 ]msf
189.096 191.638 mo
(")sh
PZDYMB+Calibri*1 [9.36 0 0 -9.36 0 0 ]msf
193.776 191.638 mo
( )sh
.873014 .24213 1 .129183 cmyk
%ADOBeginSubsetFont: HIBBAA+SymbolMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+SymbolMT gcheck setglobal} if
1 772 81 <00010000ffe403c103b0002000a8b3201f1f00b8ffc04029001413201113
1369000114000001201514143c0020140000201d1e1f03201c1511012004
1d141bd61cb8027ab60a471e1e1d0700b8011e400914130b0d2f0790011c
b8012bb52013d6146a01410a011800200118002201f3000001f700210022
0149b3214e68182b2bf4e4e4e4fded10ed10f4ed003f3ced3f3c10e4f4ed
111217390111121739872e2b870e7dc487052e182b0e7d10c42b07100e3c
313025133635342726353436333216151407060703032301262726232207
35373316170231b72e0a0d36292e350a143393d829fefd3e1b2a310e17de
1e382dba014653451f32411a313b373227213d5efefefe82027b98223405
26416775>HIBBAA+SymbolMT AddT42Char 
HIBBAA+SymbolMT /CharStrings get begin
/g81 81 def
end
HIBBAA+SymbolMT /Encoding get
dup 35 /g81 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMC+SymbolMT*1 
[32{/.notdef}rp /g73 /g18 /g19 /g81 220{/.notdef}rp]
PZDYMC+SymbolMT nf
PZDYMC+SymbolMT*1 [15.96 0 0 -15.96 0 0 ]msf
146.71 38.0776 mo
(#)sh
PZDYMA+ArialMT*1 [10.68 0 0 -10.68 0 0 ]msf
155.23 41.9177 mo
(II)
[3.00108 0 ]xsh
PZDYMC+SymbolMT*1 [15.96 0 0 -15.96 0 0 ]msf
105.649 58.5657 mo
(#)sh
PZDYMA+ArialMT*1 [10.68 0 0 -10.68 0 0 ]msf
114.169 62.4057 mo
(I)sh
.883665 .769161 3.0518e-5 3.0518e-5 cmyk
PZDYMC+SymbolMT*1 [15.96 0 0 -15.96 0 0 ]msf
217.735 100.091 mo
(#)sh
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 15164 53 <000200a1000005ad05ba0018002201fc4021120b0e0112361c5a1f66086d
1f0409100d0d065508100d0d065507100d0d065524b8ffc0b40c0c02550d
b8fff4b40c0c02550cb8fff4b40c0c02550bb8fff4b40c0c025512b8ffe2
b3121a3412b8fff0b322273411b8ffe2b31d273410b8ffe2b31d27340fb8
ffe2b31d273412b8ffd8b31d263411b8ffe2b3121a3410b8ffe2b3121a34
0fb8ffe24049121a34250e4a1c4a20530b5c1c6d1c7209780e790f850a88
0f970da90fb80fe80ee70f100e0c0c20110f1411110f110f0c09121b0221
1a160a061211100d0c0518090916171a191e17b8ffc040190b0b06551717
0021221e0201020018180f0f0e081e260e9c06b8ffe8b40f0f025506b8ff
f6b40d0d025506b8ffe040220c0c025506060d0d0655065d202470248024
03242218200120000100201010025500b8fff6b40f0f025500b8fff6b40d
0d025500b8fffa400b0c0c025500060b0b065500b8fff7b40c0c065500b8
fff8400a0d0d0655005d233ba8182b4e10f42b2b2b2b2b2b2b5d3c4dfd3c
105df62b2b2b2b19e418ed003f3c103c103c3f3cfd3c12392f2bfd3c103c
392f12173901111739870e2e2b057d10c43130015d2b2b2b2b2b2b2b2b2b
2b2b2b2b002b2b2b5d435c58400a08400f390f103a11123a2b2b2b590171
435c58b9000effde401a193911221939122219390e401c39102214391022
1f39102215392b2b2b2b2b2b2b5933112132161615140607161716171323
032e02272623231111213236363534262321a1028ac4cc7acad34d28554c
fff4c2556e572d214be101a185964e97a3fe3005ba4fc8799cd61d25244e
75fe710131848c380b07fd750333377947688600>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/R 53 def
end
ArialMT /Encoding get
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 26{/.notdef}rp /G /H 
/I 8{/.notdef}rp /R 16{/.notdef}rp /c /.notdef /e /f 
7{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp 
/y /z 133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [10.68 0 0 -10.68 0 0 ]msf
226.255 103.931 mo
(R)sh
233.934 95.2913 mo
(II)
[3.00108 0 ]xsh
PZDYMC+SymbolMT*1 [15.96 0 0 -15.96 0 0 ]msf
216.547 73.1072 mo
(#)sh
PZDYMA+ArialMT*1 [10.68 0 0 -10.68 0 0 ]msf
225.067 76.9473 mo
(R)sh
232.746 68.3072 mo
(I)sh
.25 lw
0 lc
1 lj
[.75 .25 ] 0 dsh
193.278 139.138 mo
199.524 139.138 li
3.0518e-5 .993988 1 3.0518e-5 cmyk
@
gsave
274.12 12.592 mo
422.316 12.592 li
422.316 160.759 li
274.12 160.759 li
cp
clp
272.851 160.789 mo
423.467 160.789 li
423.467 12.3734 li
272.851 12.3734 li
cp
gsave
/0 /CSD get_res idxcs
clp
[1 0 0 -1 52.0492 201.257 ]ct
[150.617 0 0 148.416 220.801 40.4676 ]ct
snap_to_device
<<
/T 1
/W 61 
/H 452 
/M[61 0 0 -452 0 452 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
#o=Tu'HIl+*Yogr)ZC=4&ekch(C^rh((h)i&/Pco+<V7;*>9M:)&X.u)]BhA-QXoZ+<_jd-R'T[*?bk6
()I]''I"J:&JGlr'bhSc'.a_5*>B,*()7Z,*>oV<+Vc:<)^Q7:*[hmG-5.^L*$H@S-6"<[,p40D'GMU;
+!;.3&/?$!%1j3f'+u#d$Od[Y%hKa!,o@I4&/>s#+;?(>(`aPE+W_gQ*ZcUM,q(Ai,Us`T',VB))\X/0
)''D2'atN^'atWh((Ufl*"`c&%hfWo)&aG8*Z5Y5)AF#--7C&U+<MgS+u(Sn+X%mP*u6:A*?H7?)&jQE
(^q)j)%[\p&-i^V&/uB%(C(fq'cnJ7)]9M4)&F50)Aj_:+W_aB,TRjX-mfu[+tY8e&KDW1(EaD3'cA&-
(_dT$%hB9e'b:ri,nM"0(_di/)]fn8*u$"C*[W'I'I4qD)CH^O+<r!Q*[WKa)]Tb=(E+#'*Z#M-*#fE;
'GCfZ&JPus)&O+r#o+I"&KMf-)]KA1)]ft7(*F_9.OH)^.kVef1+"Fs*$>h4*YK#&*"s5)()[i%%1j6d
$P!ja%iQH'',VE*)\3W%(EFD5)]Bk5'H@f2+rVLN,98-Z+!r-W.5!%o(`OJ4(`=G/*Z5n5%j;l/%2TD$
%2KWm%hfHi%M9j!(D.>n)]0D6*uH">(F:+B*Zl@B,UY)d)(6LH-6Nd8*Z>D(%3HB('cdqt%hTNr$k<^b
&/?&n&eZ&p&/cB(+;>D0',qr0+XS*H/0Go`*$m-^-S-Mk*[;L;*>p+>+sJ*:)&O8+(E!em%2Tun%N#e,
)%@8q(E+D@*#ot2)&O82)_)jO(*XqG*%DgN*[2s[0,u5b%NcH5%jDi,+;Z",$lTfr&/,E^&.KHo&/c-%
'H%Vs(E45#)Aa;<)'1+B)B'S@,9e-S)]U@S,q0l[,p40C)]92!*>KA2$Pt!&(`X(u%h]?i%3-H!()Rs=
*#0S.)B:"B*Z>b4*$Q(<(E"PB)B9kA,:tB!+!_sL&J#j(*?Z7A)BKY0)]01r$k4$g*Y&\p(`<l&%j2o4
(F^79*$H7A(EaD2(E4M?,Ujr_*??LV0cV>`(`!f$'H7As*=3Pp&.]Wl%2'6W%Mo]t*Y/`#'c7l,*Z6#J
)&sY7',VN&(F(1P.4?/b+=&3M/1</(-QWm9',;i2(E+81*$6"2+;c(<&e,fg()7N((*3f")AF;4*Z6%7
(`Xe?(`XPI,U=Z]/KQ5b,pOBR+s/'N)%mo4',qc+)&O>9()Ru'#RD1Q%3-/t'-.c%('kKm+rM"2*$,`3
)B0\;(`jS;0Gu#X'Ik=K+!r3P-QO9K)]&i&'c.`-*YfM$%29'\&I/da(^1Nk$5XQm&el,l&/lW0&1A52
+X7jJ+=S0W*ZQIK-QXTY)^HC<+Vu+='d"D9*toG$(DdVk(((Eg*Yf>$((:m()u^ib'-884*ZZ7C+WDOP
'c88?-mKTU+ri?k,T.aM,n:b(+VPk6'c.W,'c@\q#S7L]&J,ij)?(7H'bh;u'G;?1*ZH+E&ecT$-6=$S
*$cLT*[2LZ.NTWQ)\Ec*)&jD*&0r>:)Boe2'Fu#h(EEr#%ODr0&/c5t'c@T''cRo*(`FM@'Gqf<,:,!Q
*ZcCD(G.$`,V(/`*#B;0(*")5*"a;4(DRMs$4RR^%MBTd$kWmZ*>oY-((_?,&KDu2%3$0(+<i!Q.NBob
,9/*X+<r9T()\,1)BKS,'c7r-(`+)%'c.Gm$5"!a&02T&rYZLl&eblr)Bg=I*Z>tG+rhgP/0l\`(*+0>
.Nfr[)]0D2',;E$((grg(`+&-$5XQq%L!:Y&.fWn&/QE"%iH,t)&sG9*?Ge9*??[Y)C?LO,V'i\,Tn<d
+Xe?N'cIr))&a;/)B9M)&Ju3*$P3UY'aYHX)%R2g'-7]!,T.=0*ZuXC(a(:Q-QOEK*Zc^S*?uaY*[DkW
,S:k0'c7f#)B]b8(Dmbh',Cld(`O5,'cR`,(D.;t&K)6+)AXM4*??CR(`O>?)(-7A,9%^T.O68Z.jQ&J
',_Go(`O/3()[bt&/uT*&/>oe#RhLb'GhK-%N??-)\Ef,*#'89*"j52,q:)k-5e$X.4?Si/KlA`(F18T
()7i,()n,-)A*So&f1Z\%hT<h$QU*"%i60$)\sM,&eu9(+V5M;+<;dF(*4PA.jH5g-6=*O*#]h0(`sV>
*?l:9+qYG%(E3Vi&eGTe'Fbfj%M9Bk&g8)5(`XP2)^5k;'Fu67,UFr].jQ;Y*[W<Z+!`9U)&Er*&g/>+
.2<U0((goi&-iXS%fR+F%29Kg,TQdrAK;^/+Wh^B(F'tB,U+c[+=STT,pFHQ,:4lh)Bg.F+rM(+(EFD5
+:Anu'G1ie'+bZ`'c7Q%&eGir'c.T)&K;o6*$?LC*$#tE+<;mX+s\QQ)B^(9+q>D((_[`'*?#_9()7=.
)\a/''H%Yn&.0$i((Lut%h]d)*$-FK'-S22(_mr-,:OWY.jcJe,:"`e,9S<M'+u61(`XJ3-6XEM(`+5(
%MB!U'+b`f)&s>%(E425)']t<((qH%(_n#.*$Q+9,9%aT/065k.3'<Q,8D"8'-/,2(D\/1((qDo()%()
('tcr'+kuj'G;9)%2'X+(+g72+!MXG*$ljX,pFib+>G/d,o7sR-lj6E(DRT!&KE&5*?-+@)\O,!#oEaW
(*+).'HR`#*#0A-,SCb+*Z#k;+rM[T-QEaA+!NB_+<MXR+=STR)B'8#'GM2s()mc()A!Vq%L3[W(D.[:
'+l5q&fMN)',Mc*(*O\='cS)7(`k(S*[i<Y*#pFU-7U;]-7']L',M0!(`O>0*u,Y,'+b`c&-iXW(`423
+;l.<(_n2*,T[aE)AO/6*Y984,pX`^+XS]b)]0\I(Et(F(E+DC()Ir1&g.i$'G:r_#o*sW((Con*Z,ZA
'IF\4(`jM,*?QI>+X%aE+rDIG,TnHU(EjnD0c;/\-l*m<'Hn,2%i?<0(D@N('+tZZ().N#'+,Kn(`=,-
(E"22'ce5-*Zc:C.30NM+<_aM*?QIS.OHAo+<)=9'c.Dt(EFD*()7Gh(DISq&-iRG*Xrl(*"X)/(DJ'B
%iZc:%O<M9)]K\=+<;XL+r;7D*%<$T,;1/c)BL(;*?Z7>*$H7G'd",!%h96g$kF0k&e,6b*#KS0()n&1
(_[Ss,:=HS)&a_G+X&6V+!W$X/f>i],T[UF(aL(<)A3i#(_.;n#n7.S&e>Kf&J5Qd%3-?,',hi3*?l[:
*>9b=+Vc=Q+=86W+!LV2"XY92-n$5;)Is^*'G;;t)&O&&*>fA!&IK!V%i#ol(DI]/()7Vs',_W)+rCq0
//fKS-Qji_.46Ja-RBQL,:4ff*[2dD,T%43*"j,1)\Wtu"VV=_&f_N('Gh>s(Dmo$(D.`2)&=52-R'R[
(`k.K-7U>d+t"K\+tFo_,U"*L+;c=A*uu(6)BBS-(_@8c&f_i1)B97u+UT8)*"Nc$'Gq]-+rMCB,p+-V
+=J*H-649Z)AOPA/1<b++;tY/)&*W$,7tk$&fM;d'+Gie'HRi'&/Z-(&eu0**>]b;(`O5%(CqK+*ZQd5
+rgM);C!D(.2sHI5oUsi'Gq?#&etud*>9&%*=3Z#%2BEf+;Y_*'cA/-)&F,.)B0P8)C?X?,oe!Q,9JH]
)''tP.OHPl,A8>L*to>-*u>t@*"<W%r=L4o%LsNq(aTV,&K;E-(E")&+rV:9)&FG@+<r*V,UXcc+sMI^
,p=]b)^okP//olT'bqT')&!u+*Z,;!$lfrl'bVB#%2]j$'b_Q&(`<i$+VYY//LM\W+WDpO/0uG`+=nc[
,TnOX-RTfQ(`4#+'-%hs&/Yi`$Q0?]',M2o(CV5i(_mDm*uu(9(`OJ<,SqF;,Uk>q-70i^-6sf^.2[LX
-_NL@*?cC6)&=&&(_d]('b;&l&.KHr$PO*e(DdPr'H7`"(a'k:',qu4+s.aC(*OVC,9\$O)]g7Q+X`mA
,oI:0,9RmI(`FA1+:o1u&ek]g*tf2'*#fS9*YJu!(_[l-%iZ6&*>'M:-6t&d+sA?W-lF0P.4QpE=!E)=
)&X8'+VYM*&ePZh'+P]l&/6&p'b1om)]TA1)]KS2+r2(<()Iu-*?cCH'I4h<-6t,Z*$6UN*hI6m)''D)
*$H+?(D@W&)&="s&J>]c)]B/%'+c0!((hDr)B0P8*>KqC*[2mI,9@gF-ljZ]-R0rY+XDek-64!R&L)ZC
)&=#"%hoiq'G;/j!Z27Y(E4&%+Vth8(EsqA&JZ9%(a]q6+t+i[*@r3N+"8KR*?H@DI!%_%+W2:9'c%l)
)%RQ))\ESr%MoZm'GMZ1,p+6A)]0Y8(Ddf,'H%Z10-Mbc-6+T_)AsD9*uu4@-[(P@*u,Y3*?Z%;%idMJ
+U&Ye%LX!\((^uo&J>rn*#Th<(`+59,TRF6,oe-Q-70rT*ZuLI,9eZf*[;n-O?t!/*>KLl*$$(3&K;l.
*"NMn#8%di%20Qm(`3u.(b-F?(_[PurZ!+#*uupS+<VjO*Zm$W+W`*V5bV4'-5da?)B9h3(D.,f'bu02
&IK9a'-.]$&euT1(E4/1)%I5s'HnD='d=hJ*@;RE+X\W_(a^:R*[*V;INp$S,p+6H'H7o2"VhOQ&I&XV
)Bp+9'b_-!(E<qt*YoS1+:fP:+<hRF*%!'P-7Kuc+sS0W/Lhu$K75Eh(`+;6(G-C?'H7`'%1WmY((Pd0
(DRMt'c.Jr)]KJ/'ceD=(*"G@&f`,>+Wi'N)CcUE+WqdQ*&EAG.OuPQ'HIl))B]b0)&Enp'G;/s&/c8t
$Q9Zq)&X82%OE,:(*"/4'GMo5+<_p`,oS!S,pFcU/0H!dXudpM,8;.@-mK-9&JYre%20Kh)&s2$(DVBA
*[;U>(`XA1)Bf_5'GDZ:,9%pF*>KqE*\AKW+W_XZ,##.5)]ok5'bq`$&/?#t'+P]i$5+*r!uMpd'bMQ!
(*"52(D%/t',hr9*ZH:I*[N'X+XS0S,:FNU/Kd'1=X5"'()7r/%hKQl',1]_$k!m[&ePir%gs!a)&c?t
*>&u#&0D>r/0Q&U-ljEX.j?,W*#g:V+<;aY12L8M//T'?*ZQ"1)%RPs%2B-Z'Gq2o*>]M0)\j/+(E+A-
)\=&2'-SAF+WMs]+Y"WX.fLP>,TA*N,pcuR//]'B'+klq(`XP5#n%=Q$jRUf()IK$&KMc/'IX\7(_.;o
'HnSE*?-@H*ucaU,palg-6k#_+=_ge.p7ub0,c&U*#T5*)&a,$$P<pY%3#ul*ubn-)A`nr+<;%3+!2L=
(a9t5,98?^.4$#a.j5rW+<2CJ-7E2_2&mSM(E<o*$k3X]'b_Dp(E!Z!&fVYt+VPG('H/87*>fn>(`sb5
)^?aZ*>Tb=*&&KT*@M^H/0#^$Rm8YR.N96A(a9b'&f),i(D$rm&Jkum&/>cs(_%B$(`jY6'bq]/*$HCB
+<MjD.46,er?=fU-m]o_307i!)&jY;&.oiu*YfA#'F>Ng"V)+X(`F;5'c%]/',)H3&f2<&'cS2;+t+Na
*?64D,pOH[-Rpu&,U/Iq/g))H&:PQ3'GVGl&JYWY'bD&c(_RMt%i6'''c%W+)'K\9)]'V2*[W!]-QjZ\
-mKih+rhgU,8_s\Q'a->)'0_;&JGs"+Vkh))\!,_(CV/q((hE")&XD7'IaG/+sS9]*?$=I,8VRQ*ZcOT
-mp8c)^usM*I=2E*ZZ4:*YK&')1EP?#R_1M'GVN1$Pj6j(`O>2'c.c()]Tn>)&4G7*$$7K.jcec.Np)W
+<_U?+r;M$Sm*Bf*Zc==(Ch&u(_df"(CCig$ksTn)]Aqq*u,b0)&O50+rDRG*Z6CL,:OoY+!`'S-QXWa
*uPq9;O(K))^$%:+rM=8)\*)c&q1i/)A<]%)B0S4&f;Ju+Vtn7+rqOB)BpCP-6=3F,8r!N-5mpL,9%^J
*%+=*H6a.K'H@u('c@]%%h]<b&JGZs)@dl/&/l`/*YTM7+W;.3$m$E,+X%sQ+=eKZ+tY>c.No`Z,oS9f
J"\)=+rhC9()%?')%-f\%hB9h++=k8*?#b/(EaG8(`aY>+WDgN'cS2B*$>eJ*?u^J.3C2h0d@DU,US8<
+"A0O()n)&'FYHW&JGui'H%;k%2fd"&eZ$"&fMSt+XJ0E*[M^L)'UIY*?QXP+Wr<V+rqsZ(a1)8PVX9q
&0Vr,(*")%'F5-T)%[Jq+;#G-*#T@t*uQ+>)^?LB(`OJ7*ZcjP'db1M*?QaTr?,Jn+<_XL:o,Nb*>p%=
'bM&p%hf-^#o+X!'FYZm"rJ3l'c7u0*@V[=(`4D>,TIIC*@3*L,U=9[*ZHCH+qYY6(d<=a-6!g<*>0&'
$O[^_#Rq+Y)]0_9*tfV0&/Q$#IMX(M'GV<&)&sk=*ZH=K+<r9Y(G-IN.hj6C)B:%]HWVFC+W)C?)]p%2
%2B3W&e?$#(_[_p,9dd<'GqQ)+<VF?.39?B)]BtC*$?1C,U+NU-mTWV*Z,h0.;<?6(_n&/(_dr"&I]Kd
'bq]$)\j2*(_[i+&fr#5(`jM1INf^T+VttL,Te<c+!_FN.30BN*[qsM&L\]:O=VY$,S^t*()%)m$jROa
%i>To&0DQ)+;u7A*#KM1'cS53(*4bK*#U1N*$?7D*@)mT.3olJ(E4PD7Z&];)BKh<(D%Gl'G2Du'bV8u
()7f'&0)<()\s5-)]g"=(*!l-INBgc-7L&h-6Xc^*[E$X-5[U9)]1)_4s:jb,Sq+/&J#?Z%h&sZ&J#Qf
+VYM#'d",9'cdo))''M5+sJ'T,Uao]-Qs][)'p:E-n?,N)BotUSSKSq*?,h'(`420$4mm]&J#Wm'GM;r
*#BG/*uPn8*#Kh=-l3jI-6X'JIO$!a,p"?T*Z5qC*YKA1,q,*u,Te'F'c[i$$4d[W&JZ6%(E!o%&KN#-
)'0t5*X<i6)^6"<,pXcc,q:/g*[DjQ-6XT_,SqU=.i]a`N%Q\**Y0/1',D#p(_[Mm*Z#b5'cn/0&Ju0"
(F0b0',Vf/'cS27-6"*L)^?7KIO#jY,U+ZT-6+!G*eTkN(DRc+)&Wqo%hTBf().>n(_IMo*#TA1)'0n9
*uP_:*Z5n;(*Xk>-7:8r-lXf_)]^1D(`jV:)'Nsj@4`<:*>8u((D.&d*#B/)&K1lg'H.i!%il</*Xrc'
*?5e.+<<!^,p4NQ*$ldS'br/?IO#mO*>BSJ:of'p*$>h7&Jtul'atT`"r8$r#8@sn,SVOB-l<mC*$Q%5
*$QmU,:OTX-63pI*[)dM,p+0C(F0n@+'"/d,oRmD(`",+(D%/l&/5cs%MKBb,pO$9)'0b?+X%gR%j`88
*?6OT+!i0U,U"EX*??FQ(*+V>8K8j:KW>q0(`=;$$QTN]%M9?f+W2.:)'B_:()7N"(EO;'*uZ:<)^HLD
,paTd*ZcRL,9S!J,TRj4)'p+>-#fS"/K>WC'+c&\%5AA*$O\!m)Bon()B0q:((_?!,9RjI,TA*Q*?m![
,onBb+sJNi-QaWR*?,k-*%bHcIMXIN)\!2h().T!$5!d^&g8,3'H/,6*=iu&*u>S*,U=HW*\&Z[,82FU
+!)IV.Np)T*Z,V/,oRFD;j&CO*ZZ"5)&*Vb)[Hoh()R\q()R\t%iuT+$5OR$)Aj5-*uZCJ.3TWZ*ucCI
+WM+8-mfcT+WD=5-pX.N)'9n;+:fJ$'ak9X',VQ"'c@`#',hl')AOM;)]'A8+!2LP'd<Pt80KE(.O-5]
+s7sP*ZZ4C(*"2SN\Mh!*>KS-(_mAq'G_W%(_mi&)AX83+;u4;-5R[7+WMC>,U=QY,palR,U=9P+!rEc
*YnVk%4!AIM('Df*u,.u%2B5!%gO'a&eYok'ce/7(*+,'()e/,*$-%@)BBbP,pXf\)^HXL,Ujoa-m9WL
',2E(+<uYC1E[tT',MK!&fD2r)A*f&%hoNl)AaG/(*+M1+Vu1G*>Ke=+t4fT,:4`](Ek(G.i]cN(*"2.
*ZuA7E%34Y(De#((CU]a%2TY+$m-;t*>]D,*ulF?,T7O8+!W$N*>TnK+=SW`,qC;g*Z$.H,p!jA(_[r6
,u9Rq.3/s>*>9+r&fMVu((;'"#S8's*>o_8(_IZ++<)IB+s80L-QOKR)'pUV+<r-T)C$"9+=7jH-72Br
80/fl*YoA#'G(rg$4dgc',2@6'-8#2()Rc*,9mg7-QF6N)'U7@)'L1A,p"$F*@VsN)^-@D'H%r:/W`L;
+W_:1)\a#%%2'<k',;8s%M9?g'b_T0+;l"=&fh`0,q:8_*ul1>,9S9Q0d%bl+<VL:*ulOF+X*"X(a0M/
(*!Vl&e>`m)B9Y-)%7&j()R^6,U+0>*$>t3)\a84*[2aQ+<W*V)C-X^*?cF;+;#S/(`=J9OHq75&eu,c
&.K<m&Iod(*YT&")'',.)BTh5)]9Y4)&XA6,UOTZ)^laN-R:)`)]^4C)]]b1(EFDC*dWtp+;YV(&K22g
&/H9$)]0>2*#f\6(E!o.+;GlF,8hF:(`4&:,q(5d*?lg\(`Y%V-RTlS()Ic**?lh[Ub!Q))]fb'#o*pc
%j2]*%M]Kf+rD+<'HJ)1+=7s<'IP(C+sS3W+rVOG*$$.D+"JKS,8_",*[)74?DKY9*=<Su%2'0W'c%Q-
*YK(q+r;%>*uu%8*>BV:,oe1Z+!_XF-6=Wc+;lUV*@2gM-Qia7'-@_r)CS[H;Bd=t(DmMn(DI3!+;Ph0
(D%\s'c\J<*>0A/*#fn7*>p+H-6sTO*@i3[*$6R\*@)aF*$67<*#p"lE).u"'Ftfb%1W@[(D[St(DIQ!
(Dn26(*ae=&J>s#+rD1<)CZn2-71#_,9S$S*ZlUG'bh<#)]ThA,"@334;neQ'+kfr&IfTn&J#Bd)]'>6
*?H7B+qb\,*#BP5*$-OX+W).9/KuVY-ljTW,T%C5'cRN%'-K&HOC\>1,nLJ#(_@;g&/,on'G_N$*Z,k/
*YTD+)]Tb<'c@]8*@N<X-7'`:*?lXW*r[<S&Jl)k*[;dO)I.u4*Yfh4&.8d]&.fZm*#KJ%)\j5'&f)6"
+rDUI+=8-O*?$7I,9n3U-m'`Y,:j`['HRo!&/,ck,:H]NG:<G,.1-.o&f2H&%i#`l(ap4>+W2I?)AXG#
+qu:;*#Tb8,paQa*??FI*?$DV)_N$P*uG\+()If>7?;mL+qk_#&.oBb(Ch#l'+YQi*$,e3(aTh4'cnA2
+<hXH*$uFA.NB]U,TS'W.O?>W',2]-*$HLK-7aq,0HqMJ%1a!W)%[9$(_dQ&)ANo"'HA,4*#oY6)'0nH
*$H@B,9/-Y*@;mP-6aKR(Dmo&)]'Y?*?lmWG^(PT',_Gp&If!^(_lr]+V#A)&K;E$)BBY6)AO/3(*FV>
*$u7;,qL/g-7BfS+<DF")aFrM)\jA=-X29i*?#Cr'+b`h&/l?0(`F&#)&FG5+WM+1)&OD<*?5q=*uc@K
+s@mK,T[gN.468I'H\8.'GDE^)'pb,K0L7k&J5Qg%1`p`%iQ#l'HnG+*tBD1(De2<(`!u"*$HCO-6X6H
/L;Mb.3fcW*?,e>%j2c5'Gho<20r@J)&=)0((Cfb'Fbuq*W?p+&/cW-)AO#5+!D^B*$QRK*#U(G/0l;W
,9\W_*[M[:*Y9>-',i#;-V.m!L+j2O$O7IV(E"#*'bh]'-6"-C(`",3*[`'D*$6.J-6j][+=eNR)^cpP
,pa]a(*"#.$lKd(+;#qEA#([r'c@5u&eZ#l)]/hq*"Nl+(_m`+*>9;)+;lIN,on-J+XAB\*$$IQ-QXEP
,Sq"2*"j52(EOkO,#>L.,T%=%',M2f(D.)T(N]p('H/#=)&+28(E!l"+<MjN)Bg7E*Zl=M+<W3Z+WqmK
%i$*)*ZuC@'d4V`PrTd''GVGs%1*po&J#Wl)BBV:+<).;(*X_C)BL"@*Zu7A.O6;c+u1r"/Kc>c*ulLD
(Dmi**$$(@0p#0H*"a,(%MoK`'+,Bc*=O&+&02Z.*#'hCrZ+0>&0E#9*Z?4H*$Hp\/1;ed*[V^F%N,lm
&elK3-6t-u@NZ`r&/>j!*Z6"8)&3o,*ZQ4=(`X>3(Ej_8(aK#%"<o?@,TQe0!?W`h+rhjE)AXG6&fi2@
*u#q<EdSoH)%.#b)[6ff(Dm[3)&F)&&KV`%)&sM1+<;OI.O-;f*$cRN*$HLU+tFlZ+<VgA'c\&2(*sS;
)^]ol.NK<4&IB6j(D[o**#oh2(_du'&fql2)&anB*$>h;)D2sK+X%mK'IY"K'cn)/'I=qC(`OJ5+WVb.
RPZ$!'GVAn(_df0*>]8&$5OA*(_IDr+<;XJ,SqIH,U+BY*$QRS-6b#h/h%qj(D@W+*#g"3,8VXI)+g8Y
+<24<$P<Uc&/c&j$kaBn)&O,-*uQ19(*4)6+;?+S+XnQ]*>p1L-6jTY+V5/#)'0b7$lpQ6-mD?H8gPSr
(`=2,*#TP)(_ml%(`j54+W;15*Z#tI,o[pI-7'rY,:+3Y+<r9W.j6Bk(`F8.()Rc+*u#b?,VkBn,T@C<
&f;*")\sh;&eu0$*#TP*,Tn!C+=/$I-QXN^+X8$M/0Z;e-70c\*uGn7(EaM?)]052)Bpn\G"<Yc&JYon
,o$t5)As51'cdl&)B'J3(EOe6+;c7E.4#oV+=8it,Tn<X-6O$4'Fbk-)]KS3*?5t?,%l-_*=iJq'b)-+
()IW"(E422)%[c-+rM7:+W_RE.O$#k*$,b8(a^7A/0#fY'GMQ$+qYV*)&X\=(`Zb>@20Ln'Fbuu'c%B!
*YT8*&/?$#)Aa>1)Bg4>(aBt;+<N-W+=A<K-la0X*uQ(6(EX;5+rDMQ'bME(;3#fP',Cf`)'Kh>&/#Wo
$5=I()\<r/*?H"7)]ft9-7BuR.4ZAc*$?[Z/0-DU'bDK,+;Z7@*YKG0,<h3<0,Fs*&/cT.*>95/*#fP9
&1/A;'-8#2,T.XF+!E$S)(?RF+=&<_+=8<U)_!$M'dXb=)A=#6)';7qR>r^3(_mVs,ng_&)B0M1*#fb;
+rq^F*Z61D*#oh?-7U5_+<DgT+seQ_)_W9G(`a5+.2X*D)]f\91k(Qd*?>h&'bV-$&Jl<')&X,/)]KV4
'-8;>)B]_:(EFkC)^6RQ,:4re+!)aF(`!l(()7Q(+!2aK+=h&V<#lZ9&e>Nf)]TY+(`+83,S^t0(`!o%
+<D^N,9\'O,p"*U*$QFQ-n6;a,8hC8&fVYu)]9J;&KrJIDO5Dd)@ufc$l9[$()@i*)&F;.)(,>*/K,HX
'IFY?*@MsO+#4lc+X\oT+t+*>(_RQ"(EsS5*#'>1+^9eI-Qrg/'c[s;()7W&&J,ln(E=;(*>oe<+<)7<
)AahE+WM@>.3^;o-n$Gd*Zkt?*ubn4)'U4K(*4D]Ef24Y'aG9l*#T:s'd"&%*$$43'HnY>+!M[G(*+bC
,pOiQ*@;m_*[MRF-Q*O:)\`f,(a9hC'cmu26!]*]',_T"'cRo0)BBQA*#fS2()\,;+;k\1'dXk?(`a\A
/0?Ph.5EJ%+s\*I*?,G&)(6IF*uH10()n,ZLd2so$5O-_(EO51)&XM>)^H:>(_m]((*"M,+WW!V*[N!Q
.4?M`,Te?W'H/#/'b_E-+rq@2()@f74GmGW+rUn3)'fq<$m$9/+W;YU*u>k2'G2H5+!_jX.O#fQ-7C,X
,U"]]*$?75)\<o-,TR^0'H8#8+s&\"L*[cU&Jb`h$5a^")&jSD*>B26',Vi1-lX-G(*=kK-6al_+X&-V
,TJ-D&JGop((V9"+<2FD(a:1IK8qu3&f2N")%@W#&df?o)(-:;*??8O,9%aI*@)mL,:=f\*?HOQ+X8!Q
+VkM*)&F27)'1(?)&X52)_,Hb5T(:O(_RJu(`3hn*uPS;*$QI>*#0A+'bhc(,paQS*ZHFV-Q=*S*@r6G
',_Q!)\j/#*u5S&+Vu&!OAQu2',M]$(Dn&3%2fm"+rq=2%Nlu;,o%=&)'CIP,8M@".<HRW,UFEc(a9\;
(_di2-5R[>'H/#6'M"11*"i\s*"EJu()S,0)&s;4(E=S<*>KVA*ZZ@G.NfQV,p=9T-laHL*YfS-)]Kb.
+!;.3(E"/0'-8lLE$,o.)AEi*$6']s'cIr(+<;CA*[MUI)%7Z?,:+I]+;?1L+tarP+Y=rQ',;Q0'bq`.
(_@f))Bg:B++LdI&el,n)]'D1)]]n-)&XD5'cIr<*@D[L(`+MF-m9T[*[W<[-6=0M'GMH%*#BG*)]^1F
*[)@I+Wj@X2B!MR)'0G0+WMIC(*FP:)A4/5&h"_C)''_?+WV^B+X8'm+rMIG,pF0G((_6#%ga6p&e,Zs
)&FVG7?^[o,o%";*>B/(&J,Zu(De,0+<`-M,9\*Q-RBfZ,p"'T-7'c5,s3Rn()Iu.*#B_?(`*Yt%hffq
&l+Ke&K;B$$lU64(`a>2+;,e1,TRdH,oe*O,T%pC-5e<S,q9rX)^6VX,oI[D(`=A1*uu%:'Ftot',(s=
I=rab)B'5&*uPh0&K23"()7i7)B9bA)^6%0.NpE!*$Q4B+!W$U+s@j>+rhL;+=&!C*u>_5+;#P(,]8&O
+!MC?&f)9))\j55*$6L:)]KM''HA2?)]L:P+s&*S-QaQ\-6scL(`4BE(Ek%F)&!i.((Lul((hU%NA2Xn
,8_@7)]oS,(+C:O(De,0+=J6N*uu:L,V18X.3KKO,9e'N,8M"5)]]h/(`3r$)^ZCD)[RAu@@9J#*u#V6
',h`%&Kqo)'I+>0&/cK8*$?OL+=8EW(a1"K-6OHY+se<R%i6'")&4'=)&sP<*#fV)'GbJeAK)j:'+>6`
*ZZ%>(DRr3&/#Nm,pF9Q)'Bq7*[2XS.39cX,:"Z\)BTY4)%mZ#)\O2+'HIc#&.BCMUPL-6(`a2"(_n,3
)&j;%*>oe:(*+&,.NKlc+s.^O-6=-J,9n?Y*uc"2'-&&#&eu*$)&=->&eYlk&3lVU0,YT9'b;5n',;Q-
*ZH.<%3-H9-P.%7-6jcb*%N'P.30EZ,Ut2`'d+D5%i$!**Z5D%'."G4'H&06NAD_%'H.i'*Zu+?(`X\>
*Zu77-6aQS-64?\+WVjZ.iTfY,oe6\*>TG.)&X#)*>',)(Cq;l)&*p:)f;9=)'0V/(C_5k'bhB#*[`3L
&02l6+=S<V+=8?Z/1N"k)(-US)^Q(?)\Er"'-.o$(EaS6&fV8k*"Yf,G8M>9)\<f%*>fe8*#&r')&jh?
*#KP:+=nl`,:Y,i-7'ud+tXcW(De80*%;sM+Vl.;'+c/s(E=PaN0,94*"s,'&KVJt*?-1I+WVI9+tOu^
*#p(H+s\<X)B0qM*[W$M+W(_+'Fl90()do1)AEi!&K)8k+=WAY1_(01(a'V6(a9t>*=s5*+=J<U+;>n<
//TuX+Y"QR)^HIE.k2YV(`=2-*Z>e9*YoA5+:f#!%j)sBW&,;2()IO2)&a;.*$5_3)]oY<*?HRN)^umX
-6ON[+WW$M+snKS()R\s*Yg(>()If%'bVW'&Jc!',CHda(EFM;(EXP>&e?3&,U+BI'GhW+)B^Lb+r24C
0.%ql+<VjR,o@UC&/kua(_dl))&F,*+;l"-,o^p'BI=uG*ul4=(*=?A-QO9E(*=P6*ZQ4B)]]t?,9n]g
/1)M\,9S-E&/5j"&Kr8/+!D[>+<2((!t#ka=G1oA'c.K%)'9t9'c7f**#ot<*$QRI*uHCD)^6RP,UFZ]
,9e<W,8D./',_N$+:]A/&f2W%%2B<n)`4(\,pF0B*?l.3+qGM'*#p8R)Aa82*uQ(@)^-FO/KH/d,9eQ^
/KYTD&JGcn*$H1:(D@K)&K)`%'cS8BH_="Q)^$%=(a'\,',hZ9*uu+?,9%^K+;uFD+!2mX3$]^n+<r3U
',_Q"*$H4?$n3&/'d4D/&Jc0'+a9kf)BfV')]02.(E4G9)''J=)^QAN)]g.K*?c1;*[i*T)C6aX+W1q+
+;Y\.()[o+)BKq0%2orp*"j,pYu!M+&0N>9+W;@G(E=,/(`4DA(`jt@.3L,d-QjQX/gVhc-RTKJ'-8#*
'-8/7(`3f'',:lk&JQ,t3O<rc,pXEO*>0,/*#]b>+<qmA*@2XT-S$-b-R0l\,9eTa,p4EU&.KZq%M9Nq
*#^"6%MBQh',_E'(aCZ'X@F<S*#]k='bhr6'Gq],*u6+B+!2UM,U+9I0-qhp-lXKR,S:k)*?H(8)]0J1
)%Rc3&J,Kc&L/DELp0`#*toS5*ZYq9%3cf4)]'G8)]BM7,o@U:/1;Zj*#p7K*[W!F%j`A@)]9e@',_Ju
%1O6f)%.5h,pA/XBdY#>(`se8'H%`(-m'KK+sddJ,9@RE+!)aP+!hpQ-5\$Q(Ch8t*Zc7?'d+J/&Ju9&
&JGlq+r_A8\"+QV(`FM>+r)4D)'0h@*?,t/*[DmQ,p"$E/0?/b-644$+se'I'-JD2%iQ9-)]TG%)&WPh
'GqW/+]G>G0HqDN*#9D0(De#-(a1:J,nh+@,on6T+"/-O+W_[J'.G@C&fD>s%Lj6o)&O@m)_`!;#8S6l
%4=62WBDFL,9%pL*%;dN*ZPh9(*">=,p=?Z,q'fR,:4cY-QjfY'GD0m%jE&0)\EYj+<;=6'FYHf&/-!,
.#65V-lX0D+VGk0+W_[9'dsn:*ZZ:@-7^)Z-mTrW+XA6X(b-OF)&3`#)]/hs+Vbq4(DRVr&IB-](+3RU
Gr6KT&ec!()&X5+,o7I?-lF<0*#'YA+<i6K,qLJs+=SiR'cS,.'dFiM*>]G%)]fV'$4md\+;c+<:m-Z*
,97I7,SqCB)'g1:-6F<I-6"<]-RC;q.Np5e))!'X,o%@<*#BJ2*?5k0(`!]$)\s;%'+PQp(eTLU=<Ah0
(Ese9(De59)]Tk<)''S7.3B`Y-RKiU,9nHQ)^Q@=*#BA3*?H.2*Y0&5&ec<#'cJ#'+r2:HDR*=i+XIaE
*>ot<*Z,G+*YoS</L;M^+s6e2<@'(=*[r<\(Dmi+(EjS4*?,k3)'9Y/'bq>j%icQ-+C(RO2]a"a'IOM4
+Vu+8*#0S4-70lT,Uk8c.3ToT,p4BL*ukq9+r;4='d+G9*=`Jl*>K<<%N#ij)Bg;#Sqf'E)^?+9*#g49
()e/A*#B_>,U"?X*[VpM-6=HR0-M8L#9"L&)]KD/)]9P0*=rc'(D$od*!mQ)0;l!8*YoY8)Aa5++r;%4
)''_F)\XP;)Cm!Z/06>h,9S9[)]g+8(Dder'bqi-)\ESn'+kWd#T",&(a:AaY>Z8V-64!N*?lRP)&=24
+snES,V'r^3%#a^*Zc(?-mo]@'G)B#)^Yt4(`a2.)&aD.&/>iq*tfhEO.pY>*>fn:+<)=M'ce,.*YfG9
*@DgJ.4?Ai,U=KP+!_mG(*4Y>&/ZK5*u#Y:'FbK_%ga'f%N$KA+&\p[N%,tn+Vu1:*[)=E'd+J8*>KbG
,TRmY,T7UF-QF-L,Sq@<rY\cM-QNm;,o@L3'+bNh&e#$\)&ObgBT"_o+WD@D'GqN&-64NW,o.[P+t+QR
+rVaI,U4QX.jGiD*>]V:)A<kp(DdT!(_dSr$PX!b,o@UM12`so2]O)6)Aj/.+WD.7+!VdK+sATW+YY5h
)CcaZ+rMjX&eZ-*'bqAp(`4,)',hSt)%[8l&f2/s)]1Y8V+``l+Wr0G-70]Q)'g:A)#bj;-m9f](aKt@
/KGuY+rM(,(Dn#)'GqW2&K)2r%hTB^'c%i$)&aJ;6_n*K(Et7B()nD4+=.d=*u5tC(F:.F,T\'Q-6aff
+=84[$lBfr'-nbB*"jM9'+u)p'+bum((h-$*AJKcL5nDI*[`6[(*+&-*?6=H,p"*V)^HFA-lsH].iTi[
*ubq,(D7W)(E4//)AX,0!>,kX%i-)t&18S;2fYg.2&m_Z)^-(?*$H%>+W27L-QO6M+s\3W+!;XH0.[tY
)\s-:*>p"A'c\5(%N#`j'+c,l(Dn#*+WD\?XaNAL,TRg;*Zc.8+rqO@*ZcCF,9.gJ*[W!W-n$8X&JcQ'
)]Tq6(`sY0*?5t<%20-g'H@r-&ec`?8#VPb+;Z.?+Vu7<,psEO)C$O]*@N0`+tbB#,o[mI&KMK-*t/Vs
*Z,H;&eu&s'H7eo(_R8c)B'P>+riPASpr13)B9q:*Z#tF*#U+@*@2mK*?cOS+>4ZT-RBWP'HJ/+().8r
(CqB$(`=)(+:/\r%20Ks+!).EKW((j(+L"9)]T\6'cdu/-5n6V*$lUF*?HUM*@E'^&ecH,)'BJ$+X@XA
'G2!c&0M`#(D@c-)]B_=*[cc'GWI'!)^$%7'Ik1K*$-4E,:4QQ,9.dG,:"ZZ.OuMY((qB'&K;`+&fVN+
+;l+5&/>Wf'b;9"&03$$K8rSf+<2CA(*"tG+<)XN,9%mSrZW:!-7^>m.4ZMX)&j5'*>BS9'G_],*=`Vs
&IJj_$PX<l&K2H4+$4%_<&Z-P-l<p;(EFeC-7&R:,:Olc+=A3N+"SHS+;P_0',q_t)BBS)*ubk3)&+&'
%1j9i*W6s<+tl]+DcoOR+;c@I/g)8U*>0P;,SqRG)\jS5-R^;\*uQ4@(Ch,l+rqO@&JQ5u(^LZ\)%7)n
%i]d8(F1.L8n<Wd6Sp,2',;T2)^$UM*$-aW-mg,U.jQDb,:+`Y*>B&%*Z-"?*$,Y#&/Q!!(^q#`',hl)
*"s;;,W@uL@S0!A*ZlCI-5m[C*[_mN-RKli,Te?Z-6"<[(E"&8'H7Z.'-/),)AO2-'G1We&JZ-)'`K-S
-7XI&3K%iF4Xhd*,qgMg.39T_+!iKb+sJ9O/h7q`+<hU@'H/,7(D.T+(_[]2$lU!"(CV#l'FbHb()J5E
-S9R`DF-$:/g)c#*ZHON)]U1?,p4<Y,9%[G,T8'O*#B;5',`,1&L&G:'+Y]i%M0Hn(`3hu)&Nr-+<r"0
EI*(:>r+3,.kMP^(aU1F-n6Jc+sJ?T)_<-X*?5nC&0D]$(`3i&&fDu5)Aa).(^Uol*>f_9*#^">.7[l[
@Qce(1+jh#)^?:F-6aWZ+=SKd.juG])^Z4.)'U+?*>ob8+Vtk6',q>g#nmmg&Jc*#)\jnP+<`gA@rt[,
4"Yn20JP++)]9_5*@`'U)^cFI-6+$J)%du+%ilN((E+>*(`<tp'G1ln'G_2o&KMQ/*ZuFF0N2@[9KbBl
/Mo(0,T\3N-Rg/`+t+WY,Tn-P*Zc(.*Y]S-)&XYA()RMm$k3pY%MTEf*[)dK+<;IE&1KJ:84#3q5<gYJ
,VOTo/1r4q0dRnp/L<"r-lF<F'c7N$)&a_=+!)CA)&3So%i#Nk'c7W"*#BA8+Vl.F.PX+f9K,:0-o*eB
1Fasu*ZZIM+t+W^,oS!^(_Rl$)[\&3*#KkG+r_C=(DQud(_mo/-5mX:*\/cd.3CW11J^5!5:S*C4<6(2
-RF3f,pFcj.300L/0u)V)\3c.'e1%;+<D=9*#f\<(_ISu(_IN))Bp1R/1E8$.kib@4#f2Q+t4rg1GCC8
,UP&h/1<"u)&Xe=)%di.+WqRD)^?.=)&O20'cRbt&JPrl,o@L<)]^@Q+Y=og3&icQ/2/\)-SdM-+uL5e
,q=?^)_<Ng,p*sG*[rHO+qkn@)&+#-(`jD6(a9\4$6UH9(Ea_I+<;OL0cW,.,r@>I3^P#A2)Z[;1E\>)
,VL\o,UsrP*"j)2*#B_5+"@jH+rV=@)^$(?'cn59%2'?p*uc(J/1)De0dSJ-0/Ft22)?m0/KZJt-7(#^
-PnBa+!)RH*?Z1N)B^:M(a((?*>Bq=-6=-M*>]b>'.=e;+<q[N,:"?E.PX44/MI)R$nO(\0.Rhi,qLGj
-6`@6%NQB,.3'<Z+"/N_+s\KarZWg;(*FV6'Gr24(a1:M'HnDA+Y5*(-7p\m,:"of1G1@6-ljo`.4cJR
-6ms_.1m:?'bql2+s%pM(`sP5*Z#t?%29Wt+W_FO*$ZXH,pt&`-or:i+uqY2.jHMh)_W`n-71;o+W_RB
*Zc=L.Ng,]-70`V+Y4l`.OI#"3@5do)\aG@/0>`Q.OZ5[-R1,i,X*q73A`!:0K'q&-S6u'*ZcCD'cSPK
-QmjX,TJ*N+s89c3B\iJ6oI(_*u6"I(*t:M,p=Z`&fhl).3'0O+XA]o*&B)s,VC\o-7^GZ)]9eF+<):J
-R'l`*[<!T+"elm1a>=d4X1j_+r_j]+;?1M*$H=D*@)gW(F:La*[r*W+"nlj-nQns*Z5kA)^#nG+t"ro
-nTlr.hj3T4t8Bh4'sX",V:A`,p"3J*$Q7:+WMCF+=RmB-mg)d+sJ9`+ri*Z+tjZH'c\A?*#U+P+!)UL
/K5oY,;V&=3`/(54=M'p0HMVc)%Ic(+s.dF)^ZON-n6hu,qC2k,pjo_,qL5Z+!2(+'GVH,*$Z7E/0GiO
*$6q!4>f>m8Rjn?2BF:g+t+oa*u?(E&h4A7*Y]S9-Q=E`,9JK^,paof.hNI.+<hg:(*<Gq,8_76*"j/-
1E\;@<`):R;EZ!<+!i0O+rqXG-mTiT,U"BX.fLUj.fgn5rZrF-0,PZD(`jhF*t]\;(**i+*ubS#,:t;q
9R^8m94g'u*$QmY,o@mK+WMgO,7l.H,UP,i,8qUO.jckj+XniU&JZ&t'+tro(*b=F)'BP%'FYm%/ON*=
AT2-P0-VVh.2jKQ-6=9M)B0b:+Z:bq+s%^M,:P,\+XAfd(De,2)&sG7*[2O2*[;42#mq@R)'U5(7oO&<
@OroQ*%3E[0d7JT(F]q@)CQUE-lscN+YO`X,q1#U*[VR6',MMt)\Nel+r:Xd(JY\T&K;Q.&LKeD>[i(;
-6suZ,ps]O+rM4?.OZ)U+=nNZ/f,`Z-n6Pm-57^J)ANo#'F5`s(De5,,Rk7l#SRm]'Ho4d5[\GX2)?g%
,^pja,p=$A*Z#b;*$m3V.3'KT*$upE,qC_k+<DOD(*45),9[s>)]]q2((Ccf%hop)*A(2rF*CG;-5[jH
,TS$Q(apLG*[N3R*%E*[*[<6^-6sWS-8-&E',VZ')C$4=(_[Mo(`3qu$5=?k)&4Mb<Ea[!=#rAh)]gCA
(k*2@*%N*Q+sAB]*ucdR,UFKW,p"9_,Sgt2'GhAl+WD+4)AF,+":,GT(aBb1.julPIu%N.)(lUY*%;[D
(`X/(,9eNj1En=u-RL&V.3]`O+<2.D'ceb<(`a>.'GqPu((Uib)'TS()]p+T=*0RE4!61"+"eZV(`FqO
*]ktp-S$Mg-nHqq,Uao\+Wi'K*>0A1*$$FM-5RI4%1jBj',:lj&Kq\t*\K<UXcu'p-P\0R+;bM8-mej6
5:.g")Bp:J,U+QZ*ZuRX*=s51%iQK*',_\t(`jY3'c%Q!'G2/r+W2C_<LJbc.P;_q/0#NK+rMXI+sImN
+@%.o,VCAi*Zu^O+t=39.30EQ+<2aK$Q'Zq%holu#mLhR*Z5\,(FDqQS9?V<*#^:J)&jn?+!_pO-6F$H
-mBf5,<?qi*$6FA(`!i")AF2@'c7Z$',;Dp&I]Kr%O<)5(ChBCPFm@f.i]BK*YfM;&L0%P,Tn*P/L)>d
)\*]<0Gc/W.2ij;+WM.-)ZCIf(^q)k&/?#e)AW_k(EO>$(G^Z!O&@b`'bhQ(*Z$+F()J/@0-q_X-QO9T
,TnQ^+WM(),TR^<*Yf>1&f2Z:$kO?n'Ftrr(`O2&*#^1mFIRY,*%)[G)''k>,pXHV0HhYj,9e0R+!MXO
+FY[^',V5q(_\&.,9@[@*#02-&J#KY'b_<**ZH+=,r0&7Ik2rf*$cLD.2XNP)BC4R+XSBd.i^)\+<W?`
0cLfD(*"/5(_R]/*=j57$4[[R&f2/u*"`o%+VlY1TR/pj/KcA[(a'e<,9.^9,Uafg+WMLJ+sn*S+=J3S
,^pOA(DRr3+qPD#((h/d#n7Ld#SIR\&K)Z'1/;bh?Ss5X0-VAY*ZH(;+WMgS(FgUY,UXZW,9e9P%iH<4
#TF[%*"s,&,Rb>''b:fi)%dPr'dt"B.Ocp$b@"C2.ifcS,9dp6*$lRJ,:+9T,U=cb,UjiW+r(V.+;>Is
*I\tL'bD/m&.T$_',1ob*#]&&(`=22.p^PD7kQ23,8M7;.OZYi,8i!X-R'ob+!VsZ)'(%9*#K\7',)9!
*>0,)&gA21%M0Hj&K;]6$5j['+XKq;T7J15,UOfU*>9S8*%)aH(Gm<T,p=NO*$-.8'ceD/*$$1>,TJ!A
*I\Y6*=*)Z&.96e(`X>2*Y]eF3PqhS-6FEZ,9S6P+;u4D,qgSi,q0fa,:+ZY,T[j<)'9G,*uGt7(`X2'
'F,9a'abcu&0Vc#*#B8/)_.e^OX_b,*?>tD*ZcIT.4?DY)BgFY.NfTS)^?gS&K;T,(_df$+;Y\4'd4)(
'.s_2#o"'b$kF-i*uQ7LFhFt>,q:)X)]Te9+=&*^)&FPL,Tmd9)^QFO,o[d9)#b=F,T.[9%g`g\)%d\q
)&*l'()S;6)^#tG+)n0q1,^:"*Z$+A,p4?U,Ut#X,9@mM+YFi^.OZ)T',VN,(a'J1)'TS&()du"'GqDo
%"8p)(C;,o+!Db)V86"T.MO-L)^-@P)'^^^0,u>d.46,a-6jWW(a9V%(E4;.(a0h++<)7?&.&g\&/Guo
'+bue)^-.95D6.M0d$lP+<i$S)]BbG*[;dS.5N.m-mBiX)&X5.(_dQ'(`+S;(a9k1$PO3m&e#<m'+l0,
)h&8A)](>DZ=bm8,T7[L*?H:?+;l@L+=S'O,:=QN+WVF:(E"#1)\3W#)%I;k)\35b&dSmX$On4!-5mIC
*$-CK8#(u=,:Xl\*$lOP0/"dq*@)g[/ghPa)^#kG&J??('bDT9*>9J4+VPk5*Y8tr%M]Hf((;E((*=\I
."4C>UJ;pX(EjhC(+(=J.3fWY+t"cY+<MdO*$Q+-*>]8%',MZ+(_R5j&/klh%gs6e'b)#h(E4>@)\jDG
A]J(",U+3K+X&$L)'(:Z*Z61K+"/6S*[)C@,9.@9-5@O<)&sM:*Y\tp&Iej[(D%B!%N-36+<_^M+>hMs
0GYoP-mg&N*Z?=M)C-R[&KMo7)&sbF+FXt<(E=/+"s"9m'c8#3'Ftod"q_OX*sj&:'c@l'&KW/C2:%17
(a0qG0-)5d+Wi$P-6sTQ.3U8h+t+iW(*=P@)C$.7+;tn)*$,4r#8%L_&eGd#(^h*&-l3XH,qH'g66e-(
,9A3O*$m'Y-Qaf^+"8-K-6scX'H7W''n.8C)\s(t()7Dp&/u5i$j[OW',qPo*#'D=)^Q[\I*Ge>+s\`e
-Pn0O(FLLO*#BVD+=Sc_.4HD\)AX)*(ag=A*Yfk7*t&Yp%13aZ'H@Mu'+bon+rDFG+a:V..30-F-Q!gL
+XeH^,pXZZ+Xncc+=&<M'c.Ap)&sS:)1E)8*#'"s'b(ro'H.Z.)A<i,'bME6*%`:B]RW6l,odpB+!`$S
,o\*R0dItf+=8Ta-lWg7*#9M5*uGS0)]0A0',M8t&.oQf*"`qu)BBb=-5dpW9$<;R.j?A]-6OBV*uZ1L
*?cmU*@N6Y+WqL5(D[`*'c%c'%N-3'%"8X%)A!>h',)-%(`3bl'c@r,*[O.kb>TQ+,T%XK)C-FH*$6IM
+tG#a,ps]M&JZB&',)-&&K2N0)\Wu%$P4*d&eP`e(DS,**Z#t?+!DUXM8i=<,UsrK(`=J<+sIj@0cMAX
+!E']-lNpC*Yf>+&/H?-',MN)%h&aQ&:P6((E!\s*#oYC&0)o2-7WERB/D+^-6XWV-7BoZ,:"io,q()e
+rW*K*>BG8(Dn,2',hVr(C^rk$54*['b(Qe&KhQ"*"a#)+<2jucug-X-R0lU*[WEf,U+9R+W2RR+!;ad
(F'b9+WCt0&f_]))\3Vm#T=<b*=<Jr&q10-&K;K%)&jGC+[*6M.k2_]-QXQW,9/*K,pt&Z/gqh`-lj*9
*#fn4()Io('-/A3&eGN\":bqV$PX'f+;>V/(Dml0-65+P]e1QR,8i$R-nQJ`*?6FS.4Zb`.30QE&LSS<
)B9D))&O)0%MKWf&fD/j%1O*i)]0J5+<_=0+s\$L1n)WP/0l2P-m^#^.j6&_+=8Kd+<DjT.Mid<rY8QT
)AsS-',qi+"VDI\',2E#'bV?!(`4#0)C-4J.4JiW9-Po7+!E$O(aCCI+rVpL+W`E^&KhZ0'G1ol(`=)*
(_df%&KD5k'GCl^%MTd#'GMH#)C-UO+=elf?Hd[D/gV_b,V:/])'ULT-7C/`+Xe]f*>02&',DH#$lU-)
%M]ci&K1QU:E'o[',2/n'cS;;*ZlIE-UZ%31GL=(+s\3U,U+ZZ.Ol_k.OQP[/K#*C+WM@;*#T2'+s7F9
(_IMo(DRu&'cA#.(D7i()B^+B,qgpE[P09_*uuLJ,:4N[+sJ0R+sS9Y*?-==&Khes,o7UC+WM+6)\3>c
&e#9o&eG]e(^ClV'IsY)+<;:J.X&!Z,qpYd/1E4k+=&*R-6X][,pFZ^)\a8/)^,\7((V;q'I<Yl)\<hq
'+tlo$m#ot&18#,(De5=.OK5N;CsLB*e#R`.3p;b+rVLC*\S``+rhF<)B0J+*<m&i)A=,/)?gZ[%h'$S
'G_E'',V`+(Dmo/(aLLS<8D=J1FO@c-7LJj)Cc[L*[)dQ/fPrH&/lN*&JlH'*Z#Y,'d*bj%h8jX&KVN"
)'Bt@(E*l1(EFkG*acaQ3ZTdk-Pn$K1k$Vd+t4WQ-QsHS,n:k:,T.C@$l9`p)[mDp&d]3f()di'&fhZ(
&LSJ;*#TG:+<E-f[@(/M1CtiQ.39WV-7:5b/LDte,pX98)]9J7*Z#h5(`O53'F5'Y$ORO\(Dn5.()7As
&/uW8)^?4P1;9Yt/LDeg*@N'T+s%^M++>X]+"&HZ(`OA7(+L@I&JPlm$lC!)$4[db'+k]i%M9Kl*?ZIB
)B'J6-R^XYf6Sbd+XeQ`+sA<W/fcMh,98$N,T.O=+<VI:+;5e;)&aV<$ks3^$5F6a&/l3$)B0;()''M8
)B9PDA'0ue1F"@e*[iW]0HVJZ*?QXT++>OS*ZY\*+<h:7)%[Q"%2TTk&eG`p*>0(t&/5]g(DIo2'H\P>
+"^U5P;Op8*Z6+M'-A;>-ncnk+XJ*Y'G_9$(_RZ+*#BA)()d`.',^uf'FG6])]0#"%i63),9@R8*?-Uj
YJ2Y>+XAH]/Lr4o,U+]a+XJ9U.30-;)aY2R*Y98*'bhDp)%[/j%M9?_)%[E"'bD&n*t]8-*>p1B.5n0Z
8L+rg+!`3`-Q"$O.2O!M/KH,P$QL*#)\j)4+8lp5)A!;l$l'3j'-@c#+;#,'(De#$*$#P0+Z+8qBJD(e
'-nk@*\AT\/KH/a.jc8S)]0A**"s"sIM`n<((M9'&I]?\'Fkci%i#ut+:B/.*$cRC+;lLb>.&`0,pji_
-6!pI.N9oc,TA!L+<VXD%icK+(E!r#)]0P/%i#H[#RVCa&JGs!'H\;4%iZ]-*#BA=+@<*".O?;f/MJ4i
*?caK-RpAe+t"BP*"i\t)]0A>(_m_lIM`V0,T7(%&e#Eg(_7<%*#0)4+Vc+:)BpU^Jql!.+t>&i-m'WY
+sA6Z+<i0V)\WSo(D[r/%N6-(*#oY.&/#Z`'c.E#)&<o*&fD?!*?>h9*"3W,-ZY1u-R(#`/1V\d*%30Y
/Ku;_-P7C=%3?6%(`XJ2(E+2,)&*Yt@MKFe',25t$P=6j)]0M/)\sD?'db#9W&#tJ,:Ofh*Y]V<-R^2b
,Tn0F&fqo1)&sY;&.K6j&K2Ml%LjL"'H%o3(DdW!(CqH*()\/4)BCOJDpr&F,pb#g*[;s]*%<!Tr[&I2
*??"1)\`u%)]Kb9'GV2p',:WV(_I>pIMWk>%iQ#p&gJ;2*?udH+<X+ZKd7f[+sn3S.j-5[.N'6W,TdR.
'HS2/-5[U<(Dn&2'G(NY&K;Di*#]A'%2p6$'aPKo*%DRG*\/6kZ'[3s-7^)T*\/6Z-mg)j,q:/V)BT\1
'-8;1)B'A,'G2)t&eu2j()S&%)A3et;ApMd)]BA*',MZ7-SV`u+tb,f/fH#^)^$F_.jH,\/.!@7%hfj&
(De&.'G)#t$ORO\$PjNp)%dAl*YfV4(E*u.,oR[B)D*C]Y:)(P,pa]arZ`g:.j?/_,Tmj>)%mDn)]Tt7
&f_N$'GV5h$k37P$l9a#(D.`+*$$1@8gGB%'GM9".ZDP>-n68^,paZc-QO0P+sn6M*>'%q)B0J3+<(b,
)BK5%&d8gX#Rham&Jc2p&L8&3*$>q6)AaM9+t%6^7P#E4rZNs>+t+cd+s8-O+<;1:'c%`**"j&#*YfD(
'bh5c$OdUX&/,in(CqE$)]KV1)ANr.+<VdP=2\Z&*\8EX+=eif/1)\b/Lhq])AsJ0(`XD0*>SPj=qMSb
%gigU%29fr)AjA))A!T#'He,-+!`<S,qu0A2^fsn+<MOJ+rMLN)B:"K(F1"5)BKS2+rDOC(`a;/'bCT[
'b;#o&JuH&(DIc0(aU.?)\!`*%376dI]G+W.4Qr$.i]f_+<i9^+XS-E)BKJ/)]Tk9'b_*#()[\t#mq:V
(Cq;q(D.2p+;Gb0,9IpH)AsbB/W6W!/0YuV+W_dR,UFK`,paWR*?Ye+%20m#*#0S3(_dPp&J50a+;5P%
+V>G*&/Q)s'c829+"JBT,r1;'7k>f.IO$9h-6t#h-5n<L+VbJ'%M^*#*>oV8()A&&#7q:W!"U"['+u/p
*$#t4*>9/$()nSA+X.aSF3n_]/h&(e-7U#d/LE"s,r#oM'bqo:*#TV1&JPig)%6ia)%[;o%i#W_'bqAu
&Jc/r(*4#.-Qa$>1-a!.1+a^q+Wi!YINC3i.N'KV*"s2$%j3)9(_dGm'GD5n%MfK]*X`Po(_7E#()n)+
'-%Z*'bh8s,T\Ng`M"t9,VCMp*?Qj[*$-CP/JB'8((VH+)B^47(_I5h%1EmS%N#ij(_@>u*?uRD%NH`=
)''P3*%<-]17c$41asOp+tXlW.jlkmIOluY)A!`'%iH?)()[Pp'cA&/)%I8n$ka3b'GDAp*#'2;(`"/1
',h`-+X&J3W@fe\/gVMb,p"0S*ZujX'ceD8&ePcn+q5G$'G_Mq(D@)e((h9!'d"&.)%mW'%36</+;Yn=
&0*)LB#mLm+s\EX.O6,\+X&3Z+;tq2GnUu-'b)&r(D.>p((;,p#n.7Z&/uQ$$kjHq&/?#s'-AA=+<)[K
*%XLpGq(]n0IeFp)]T_:*?cmD()S/+(`sS6'FYih(_$rd)%[Ao'+,N`',;Q'&/c)u*?5e8()%`8+seO%
d?Q%7*%E*]-nQ\k-6=?T)'9mu(B52")\3N"(`+.q(C^o`(C_'#(*"J8&eu&p'H8#/)]'D<)'^OT2T9el
1F*ta+<E!X+snQZ+VGS0)\E>i,pF'G+<2=2&J,Wb$P=*d&/5Zp&0Vc'*>';&*?-%I+<)UU,r1UU2(1"$
*ZQXT,U"'X+>+-A(_$s!(`aV-*#0S_(DR>r$6'Ef$5X?h(`*nj+;kn)*Z$(=*#o_6*ucOYO24(2-n-Ae
,pOoh+!2LQ*#9>%*?cFG+<;I4+W_@3(D[V^'K?=0&gA8-'+bWo+;>V8+sIp>)BTqG0h/EL,q^Vd-ncS^
*??FN(Ddc(*>fJ,)\X>-&/Z?*$69S)%h'0d)&j;(*>9&,%2fp*)]Ke++<hmM/0?3?[;[N>+!MgX-7()f
*[D^;'cRo+'I+A5'G_Pq%i5Zf&.00f%hT6_%M9Kt%3$K+*Z,_8&0Di2,p4Nb4jSR.,T7mR.O?5]-mKZR
'bhE)(E")2',hT,(^_*"!XT#=*Y8s5)@IJo*uH:3)]T_/)AX8:*#TqH-6GCgWB;gW*ucFH+Y=fQ+<2".
(^q9"'-\A2&f2<'*"WJn"VDFd'-[l$'c.f"+rM=2'GMQ3*?lUO.4HAnS\d$0+"\QX)_*<d+t4fQ'cRo(
+!_^A*"a),)B0h.&do?\(Cq2t'+PS&(_.B!'HeS?+;5_;)BBhA.k,\:6ma<1,Uk&c*#p">.2`g@)&*l'
*=a)%(`3o'&./[O%2Bj%(^q3)'bME!+r_==+Xe?M*sii-+sA:5Yurb%-6OTR,p=ik+t+WJ&KW&6(`4M/
&J>fj'FP]a'*o*f'GqPu&el*"%N,j7'd+G:)^$4=+r;^]-=tS72_6F*+snN[)'gOK%O)T/)%df/)AjA,
'+til()[Gu)\ic"rY%d2*$,h1*>K>5(E"89(aC@Q*%=;*GpXmb+>+rc,pXfS+r2"D',qT/'H.Sn'He)(
%M'?e&JGom'+bfn',2B*$QUB3,UOEF,Sh%=*Z6"K6e.tf,pOcc,p4Tb)]C/S*u>h1()[hs'bClm&fMK!
*>K.l#SS!b#8[md'-[i!+s7X4)^$^O+Vu">)^@2\[6u]%.Ma6P,Uk>a+r_"5&K2T,&K;Js',VAu%h]Q`
#n[jl)%dl.*>KD+'cn51)\j&)+!`-L+X&<jPK%&a.NL5m,VL2Z*$,h9*uZ)I*$H+:)A3Po'Ghc''+5Tm
#8.dd(a]h/)\io'+Vu4@+WM:9+Xe`[/LHRt?Rm<F+XA3V+snER(Dmr')'0;&(De)9)Bob+((:fl'+bcn
'G:s'()%W%)Aa81*??"B*$-.?+"Jsh]T=s20cVbi/L`4m-Q4*F%j`,1*#oZA',2B&(_@5`'FP$Q%i#oh
%NYrr'd+8/)]KD-()\;9)'gON,t67h-6ji\.4-)b(`+M6(D7`%%hfZq&K;Q%)A`Yc"q;(U'FY?c*>&\p
+rD1>+<_aT*$QLB+=&$P)_<YbY;I^\0d[qe+XJNj&Jts&(E+)($k4*d',M-I'F4jS%iG`b',;Ar$Q'^"
&Kh`)*$6.>+X/!S*?cRT1R,@N/2SY&+rr!Y*[)UK$Pj]j+Vb=s*uYk8&.K3Y&J>]c(_Zf`2%LNH%j;Q&
,o%RF'G)60+rD1B+=FM'D`&dY/0#rZ+<)gK*#o\-*=Wc&&.0=!'c.Ym&I]>%#Rq:^%2p-"%N6&k'GhT$
'ce#-&KMl5'dY4fP0@ep+>#5k-7p2Y*?HLC&JuK&*Zu1>*ul"3()%8i%hT<`$Q]Wi#ne'e(`4,.(E+J;
()@]$*[N-U.uDB'0I/(n,U=ZY-S#oI*#fP/(E=8&)]]P.&ebca$kW^W(DI.((_[;p'G_]&*>]e4(EX\B
+XJ!F,:tfuW2Vg3-7'ib,:4ZY)&F/4)[dPu+!;=C&Jl&h&e,6]&J>Ee'G(om'G_K%(_[Mu)\aSD,T7^H
,Uaon7$sZ02C'jq.P)bc+rD"2+;YM)*$QF?*>'/%&IT0f$PXBh*YTD**Z5]A&L&81*#fP(&g8G9+<r$I
,;2'(e8-Hb,p4Wc-mKlL+X%XB$PNsp*>KP+'c.Jr'bq#`(CM<$*?,k-*#9S<*#]V8)AX;.$m?90-lsp!
;8QQh/1Men+t=l])AO/7)]0>#+<27A*t8tu(D$`Z'+,<['c@]")ANu5$Q18m)&*kc'6kiE,p4NV/MhUs
E%`^n/g2kk+t4<J()[c#',MN%',Mc+&/H#t((M/u'+,Em*YfD"(Ddr,(De&5'H@i/+;c^W*$Qq+[#d:+
,9S3L.3frW*>KV<)A<W!'G1oi(CUip&.]]t&J5^'*"rbu(_e/3+rD4A(`FiP(`aG9(EP%R.PINm3[l7+
)C[9[-5@77$kO<s(D7c-'+5]h'b(f\(`!Vn$6']n()eJ,*Xrr*(`O8+*uu4C*[N-a+>GC2ZU?Ai+Xei`
,pa36'c.Mu,8h=;)]0P.&K),m'GClg%L4-o'G;>r%iQE-(*FD7,9\!I(*Y#Q/fQ/]/o@ji1aXCi-QjiS
&J#Kl(`F/4%i6!#$ka'c%Lj*_%h]E_)\`l$'GVQ$',Df0&KN&6*?5t;)^ljN1bW%L=ZRlL.46Da*uPP(
(E4&-)&sJ+)&"&/$5!aW$lBm"$4Rdh'GVQ*)&F5/*?-1D)B9kK+!)X?*[ELi<6o\>.jZGe.O68S*Y];"
(Dn/0)Aa8.)@mAo#RUnM().2k()%K!',Dc/*#Tq7)\<Ss*Zu1=-R1)g/P3F/.PW:r,T&'V(D.2q'G_B'
*YKD+'bVB!%M]]h'+>9f()RPt(E+>:(D.Ao.1R1A*Z,e3+<hmX+=f[XP;t:F.jQYi-mp)J'-.`"'Gh2l
*Zl%1)%R,c&Ju/s(*4)!(D%E$+:oD1&f_r--k7:1*ZH7B-8I"q3.ne12(g+$*[)[I)\s5))&3c-'c%c*
&K(l_&IK-`&J>Zk&fVW(&fD?-)AO;.)^$=A(`XA6-m^;s003Rh;_/h=,pFO^,Sh+&*>TM-)BoJ*'bM,u
$5X'T&K)<",97OC)@mi#()7f**>on=+Vtk8+W21A+=Sls5La[..4H8Z-laNO*>ok8'c7l'*Z,q7'bV5c
$4ILf'G_Gr)^#t3'cS)+)BT\0*#p+E+qu.>*?lRM.SR@-,:"Tc,q'iL'G;H0(_dZ'&/QK'*#0,''bCld
(`3u,*X`Gm%holu(Ea\=)?(RY()n;7+sSNf+sAX"]V[P1,:=WY0cV2K'-R`$&188;'H7r)((_)f#8@dc
%M]Qe%3$!")&s_B)AsS8+r2%6+<;[F0./A10pfU+1ajdr+!_dC)B]k0',ql_'-Iu')]T_*'ak`e&ITHh
)\ieq(^pum*u,k5(*X\I(F0tB)]'G@)_!>!^cF+l-QjQW',qr6$PsZt'GDSp%Mfln$k<g[&J#ZU'e^OA
)BBb5'H@`!(FBn;)'pOH+<h^R,p=Ru^e$4"/KuGb)\a2+'c[Z&)AaG4'c01T%giRK%1a?u'Fl!"$m$H)
(FC"8(EX\4)^6=F)\aYC-n-c#.pL"c2^9Ik,UaHC)'U(6'+l9*(EO5')\`_p#o<LS3"lrE*Y]D-'H@r+
'He2/+W_R;-Rg&V0-MSf.kaT:;_]mT+=A?H&K)W(%hfrs*[)4,)\<Vj$OqOk%1sHm+<D7/)@mZ*'HJ81
(EXA/*?,e9+rr9]*ZQX\3jO2g1a4+j+s.[=)A!Jt&J>p"(_%&e'bLZ\&.oWi&J5fm()n&$(*+,0()e#.
%h^$-*?QLH,TnB`,;ksI67XB'-n#Q?)]9M.)&jG3)'Tq9'-8&&%gs0c&ef^*+<)17(*"8;)AX&%(a'h=
'cnM9,UOoc+Wi?eO/QG;/0H5b+Wh.,&f2N%)\El''GqVp((M,i"s"Bt)\3`%%3??&(FBt:(E=;0*?,k2
)]'b@,q:&Z-^i4q.k2Jc.iB';+;>\7()7u1',MH%%3Q5e&/?,q(DIi")&I`:'IX\7)]otC)]f_5*$HUQ
-Q4*Q.Ou^&a^QkI-QjlV$P=X,'GVW0(*jV(*YT2&$l'Bb(Dmo%'-7]&*X`Q#,T@^A)BB\;*YTS8.OHSd
0H_5b:rmr;2^Te+',Vf+$l^-"+WqI<',;Aj$5O?e'GD/p&0M]!)&F&#)&l-i&JHB9*ZQ:F-m06J,p=?V
+<WnlKgdU4(aKq>&/cE)*ucIC'HS&-'Gqc!%hBEh*ul%+#oF?k)A`r&,o@XD)\jM2+X/0B,5r`?*$m6q
[AHMO+tOcS',VZ&&ebrr*YT2$'bUi_#n7@U$l'X#$5XBn)\F)!'c\,9(F=MM)^-OM+<2jT-7C;f.kd'a
>V79F-kd44'cdo"*uu11'H%f*'FkQh'G(s!&g&/,'bM5p$l9g$)BKkF(a'nG+WMpT2'4Fs0ePLiZt2'H
-7]]J(D.B!)BKh3$kO-e()%&j&/Q/k%ON&)'-%i!'bq>h*??1=*>9J<*ZohP,o@^P'dY=c-XYGZ4YJ9.
'cIr/+VPP2/05?F(D@Dt%h/gY#o4<p)&*kl*?6(;+;kk1+;,S++sS-C&0`PN)^6dg-n\!;HRp]n.2j-L
(*OD*)Aj2-)%[Vp'+klc&ebW]%hoZo()[r#*#]b8&JlB&)\XM5(E+;?-6Raa+s8*[1Vf27.NoiJ*>KG7
*"a#3%N,lk(E!Sh%1a0c',1ui*uPM*-kdRC'GqW7%M0`t)]Tn5*%!!V+=n][0/9TM8inaT*ZcFC'd"5*
+;bt9)]Tb;((V;t"V_CW)&Nhu%2'C".1d@8#9+^)'cIo.+>4f`,:=c]*&`6uU=`L$)(6L>(DJ&1'HIu'
&ec#s$lB]e',VAi)&3c()@IH+(Ch?)(a0V2+W_IF+sJ<W)]UCX.P3%s.@IhH/LhkZ&ecH!)\a#'+:]))
(_dDj'c.8c'+>]d)BTn2)%mT(',huA*u>e4+Y4NS+t=`d.4lYl1,W1QAg_ID,nh"1)\F/4+;5V2*>fG&
$k!OW"r.gf',VDi(*X_;)]p"A'ceG/+s%UF,9.dG,9S0V.j$,f<6g"H.OQ)O(`s2+(DRf5$Pscm*!mYo
'akZm$4I^d()\#1)''e:)&!f$(`O51)\aJ8+"R=7$n`nV-oJQ/.j?,R&KH65%ML*-+rM%-)AO)"%1j*c
().]*%1a6t)B0>-*uGeA)%m],+WqUF*?Q(@+=&?S/g;MsS]!B;.Mj'6'HA)-+VGM-(E*o&$O@:P#S7dc
(_dW*(D\,7'Gh`-+W;@7'-8G9-6XKL+r_dL*@<'Y0:9(,0I@SP)&!Ai'bl*;'c@`*&JGKi%2KWg(C(He
(`*l"#Sn7!'He\F(D%,n,p=-P-Q=-U+WMmV/L;uqXZeBg()\88'-8A7*uPe4'bM&j'+>?d&Jkrn(Ea4u
'GhQ$'cA&:)&*o0*ZlFF)]g"=)'KtF&gnbV:t/c)/.r:8*Y9,%(*=G6*Ya&<'cIJs&IoWl$kjEc#T"Ko
+;H%@(De#&)^?FI+XeBP+t=fW(`=VR/3#T:I4I,m(E!`-'b_K*(_RMk*$,S!$P!ge((V/q*Z5J)'c[u3
+Wqa;*>&qu%icf=(E"PL.O#cR0./#'^4\@$()mns,T%78-5@L8(`=8('bPm*$Pa9d&JQ?!%iH'#(`OA5
%j)Z)+Vu+:,on0V0,GrU,8VgY/1dp34#7Qg(E+/+(Ddo0%36,s$PEs[%hB3j(_n"t&f_c.$mli0-Oh(;
'Fu6+()nM<)(6gX,pFTa-n[,qa$VR)'c7`"'-\24,omL2#oXEg$P*XX(DqT;$Odjg'c%T)*t]Y7)&Eht
*ZcO8+r2(:0-M;R0-i%h+)\kS-Q3sD&elB&+Vc%9&.]9`%LWIN&ITE_'G_N!)&X>1(E=>9(*"89(E3W+
-R9BH.O->c+<E-\.5F`=@PJB7(`=#.(a^"@(`*Vp%35rg"VVaf&.oop'Gc-/(DdZ$(*=VA().>t)&X>5
*ZlRR+!hmP-ljHU7(In:((VAt)Bp"**#Te5*"NYe$k*[^$lfcl'+blj(_d`%(EjkG)]'S1)&jS;+rqdE
*[2^@+s&$Z/2i`N<>l\f&/#uq(EaP?*uG_3#nICQ$QK`e(Cq/l(Dmr,+WPP:+W)CK)&F8:-7TrR*ZZIF
,U=6O0.&)%MQ(%h*$5k/().c3)&3`#,Rk=m'b(c]$PO?n&f;Q-(D@c'*#p+?)''b8'H7l/)BK_<+r2UG
/Li+k12sR1',;8t%hfco'd+M9(Dn(s'+>9Y()Ri.$Q0WW'aGTq)]^"K*ZGk/'d4b<'cAAJ+=\6H0d.AZ
1+4VEa^8d((*"/-*Z-+@*#KG**sNl("9f2I)&*T#'cIT&*"*`,'Ghc2(E";/(G$RF+<_gF-lsl]*$cg]
.mqX8%2g-%((hQ+(_di1)\a,'$k3m\)%@9!$69j"'c@Z$+<DI=+WV=B+Vu.A+!pn.&/ZB4+!MpW+uW!?
V'?lq(D[]&'+l*$*>T>%((LHU%2]iq%i#]crY];b+;>\()''/,+<)+9*?-.C,U+Zc)_!0[)CHp`7*hkT
*ZQ@=&Ju)t(`+#0'G_Po&.]ls$l9Tl&el#m)%mT")BKS3)]p@?+!2CF*ZQ@K*?ZRP+!i-V/4@=f+;5\8
&J,]o'c_Z>&Jl/r(_[&Z$POKb'b_9"'HA)3,9.I8&Ki#6*$#q:,qKlO,:k&m)C6UM/12r%JBf,Y$Qg)p
'GVZ,)Aa2')A!/[%1<gd&J,Qi'HS20+X%[9(E4S7*Z5h8'bhc9)C?dT)]]b>/Lr+k11S9C)AF&")]^"=
'bM<"',GKq(_-od&JYp%&/Gfj)]KA3+!)C@+qk_**>p+</0,]P+<N'a)DNZh,Tn^7Y8eH$'d"55-5msM
&/,Wi#8S9h#7;+d*=if')]T\/*#TP1)^Gk3*$64K+W;@B)]BhK,V0c]/gW##:6QJ9$l:&c'akrr.2a*>
&Jc,n$4[:T%1jBk)'9Um(3:<,(a0A&)^-"3'd=bD,9@jE*?ZXK(aUFZ,VC9l(`aS5'+l,u)&X#'+qPOu
%LWma)\3T$&ec5u*>T;++Vc";+;tY%%im&B*@*'V,U=<H.46Pp+s&C#>T=Uu%2fp"(DRf*)]K7t',1f_
'b2,i();9&$kX1"'+G`r'c7l-*[M42(b-gO*@E-S-6aKQ,V:Mq.kP<X%MKQj*#';1+rhRG&/H3!%gs6o
(a'S1'GD0$&JPop%hp0+'G_B+*$lRL*[)RK(a'eA*?lXK*@ij/(_\86(EF;-*YK2'(`3u#%LE^c'Fkfj
(E*o*(DhN3(De#$)]'5;+WM@9*[2UR,pjc[+s\Ti+<iB[-pemf*=a#-&e#Qs&K),k$POQn&IT<c*#fe4
'GVPu+;Z%@)B9M-,8:e0,U+QY,pFi\+s8!V-RC&e/L`+e&f_c+(`s_;'H7er'-7Po$j?tP)B'=u'G;-"
'GV5s&f,p/+WVaJ+sA$M*ZcCM.3]cZ(`XYI-6=Kb3YWDE'b(us'+Yij((M#n(Bb'S&f;/h$5O6Z()[u$
*#T\8'c%l6&0N):'Gh`2,9.dE(b-p_+sJ'Y1,Tpg)@IN%&JuK*'-7nt%1j$T(Cq5p&JPum$kaBm%iH3$
'Fc0.*$0PP)]U"@,TA<\*?Q1P+=ABT)^$=U(**ku&K2H!)&j5*(`Nqm%hA^X%N?E%$l]j$)BKS),8M(<
*"a)4,U"0S*[DXL/1)>O+"J9X,Uaf]2Am/G)AO84)]BM,#SIse$jd=F$ks'c'+,Wt&K(ue&f2?"(_d?#
&gSb?)^p.M+<DjN*@!'_)C$IR-S$bk(EjY8&Khr#*$?F=$l'`m":5Vg)A*Yq'-7u%'H\20()RZ*'d+J?
+VZ%F)C6jN/0PuX-m'uZ.ip,n*$,t=&LS\?&KDl,)AX/,%h9-_%1Wj['c%T*'bqbu(EsY2)Aa/#&KMo-
+Xe0S)BjPJ//TZQ-m'o\-7KcL%iH;r,T7L<%iH)r,SpXr"qD=a$PNjT'GM2s)&Er1)%\#>)]BP)+W)"7
'HnS>-RKWV,:+HY,qCJb'HJ85$k4-k*uGk4'H.5f(C^]g$k3Ua$lU***>fY8'c%o3*@21=*?QCW-RKr^
-R0ZY-7F<b.39EQ,nV7;(D.N&(`*`"*#BP4&.99h%i>fp&Kqu.*Yf2#'G_Z*(E+5.)\No,)^HjQ(EjtK
/0Q;j+WM^U-m]WL)A*_t(E+8:*>oM'%LEXR%Lj?h%i6B.%i?*$)%[Z%(`j8-(D7]-(*4kD,pFHV/g;A\
+=8fk*@6.`(E=5%+r_I<'H&2+*"iqt'+b]l',V<$'bhE"(`!Gr'I"bM'GD9,*#BPA*#C.J+rDFH)(6R\
(a^m`1D^K9*Yf_B,Sq.6()S8'$P*=O$POI!)]0G1$lfco(`F55+r)"9&g/,;+rhCF,:F]V,pX`^,Usrb
+t=cZ()ME6)BTt6*"Nc!(_mf"()./h((hK!*ZGe3*Z>n:+Vb_2(EF//+W24A+se6G*[;RJ.5)kn+sA-[
+;Ph<&/Q2s-64$@'H8##&/c#s&JQ-$)A*Sm)'9M0*??CK'bD2q,SqFB+t4lW.39WW,U4'G*%2gK.i/pJ
(DR],)&[!)*#T>,'c%8p%M'*_(Ea\.(`F#,()n/5)&sV@'H88<*?-"C-nZ\i*$H@L*?5_6*#g.>(D[u,
+W2":'cIZ#&e>Kb&-idW%hBHp&KD8t&K;E#()n;.*YfA4*$HOJ(*"VG+oWc&(aC.C+sAEi',qr.(`4&'
(`skE()_Q-%h]6Y%3#is&J5um&Ju'"&Kr>?'H/>:(`j\5*>]tM.30Qa,9J'L+!r0W1En.\'-7l*'H/&9
'bhAj)\Wr#((Coq%N#co&.p0((EFJ4)&sA+)Asb>'db1I)]g:Q(apda*\Alh-mU)])&a;/*?Gn5*ZZ%,
&Jc/s&/ZW%'aYa"#p9s#)&*Vt'G)9.+;uFL(*G%M-n-Jd*[)dI+s%m+.T[oA-kR.,+;>S&,S_LD'-@c&
%i,H[)&3nt',D`'*Z#Y-)\a20',q]('bME+)^HaI(a(@I,Ru1C.46#M+=\'?'GhE"+s%O:)]0D0+;Y[n
'H7]&()hW>&/Gg&*ZQ1;(EXG/*>&u+*Zc4C-m'NZ.3p/V)BgFJ+XJ3Q)BKk:)AF,/()[r%&KMl'%LiXU
"rS-g*Z,S!(`*]&,U46M)B'G7*#'J=*[)dR,UOfa)]^.G+=e`i-la9D'H8#/-P@19'H7Pu&/>Zd$k3d]
'-/&-'GV,j&JH',(_nA?'HeS7)^H3u,Rkk=+!r<c.3'od,Uk&WrYer[(E";4(EF#+(_mhq%LWaT'G_Jo
'Ggon*Z5e3)]TP4(`XV8+<)IQ+sJ9Y-7KrU+WhmM+X&-]()IMs)&4#*(*FS7+Vt_-$k!sh'Fb]d%i>s"
%hoTr)]=)I&/uH0'ce,4,SqF;+t"`]+sA9Z.OHVd.jcAQ-Q3[?)&=81)&3]$'H7Gt%1jKr&fMGr,8hF<
%NuQ#*?c.6'H.o1*%)gL+;c:N,pF?P,p=9I-R1AY(a0P,(*",)*uGt5%i?9&&/,Hh',VAs)%R8s)\Ec'
)]]n9',<PB()e;>+W_dT*[i<c*[_dW-QXBV-k.1:'d4A1*#9V2*#fk<'+5Qa%h99q'c[i#(D[`.(F0h5
)\i8h5UIKc(_@Z)-Rp8^*$-CP.O,lW.if<H*Yfb.+WD16'c7Ps'bV)i()%Dp%j;Js%2BZl)&O5-()e55
)]'G0+<(>,*W@%(,pFBT.N9r`(+^LE',_`.(*+,,*>K)''b_T#&HrdY$l'6j)AEes(Cq#h'G;N,&JH)r
*>o_7,9A'T,:4lc+rqjS+=/0H.M<@1(_@T%)]C"@*Zkq-()@>^'G_Jq',;2t*ZP\%&JQ?2(E=\8)]Th:
+<_jL+=_gk(F^d`,9e9Q,UFWQ+;>V'$kaZt(*4A%'+Yrs!=BSN&fhE)&/H!"&/>in&fi,:+X%O@*[)XM
,U4HY,U=la+t"'E-QO]W'dOS+)&aM6*>0P2'H./q&.f?[%1j3g)''G-&eYQ`(*X_@+;Z%2*$6IC)&X_H
+sSQ]+<GtK-Qs`W1ER/H*uGP-&fDB%)]9M0+;"qd%hT6e%La<o)\Nu&%hoj"'G_K+,nh44)^H@R)C['_
,U"<Z,T[sQ)^H[?*[_jK'c7W)+VkRt&KMSs$4mj_%Mp3%'aG]n&Ju5r)B9q3*Z,S/*ZcFD)&aA;-RC/^
/gr+m+!Ue5."D~>

%%EndBinary
grestore
np
grestore
274.12 160.681 mo
274.12 156.685 li
.75021 .679683 .670222 .90164 cmyk
7 lw
2 lc
0 lj
[] 0 dsh
gsave
[.0783691 0 0 .0783539 274.12 160.681 ]ct
@
grestore newpath
298.806 160.681 mo
298.806 158.644 li
gsave
[.0783691 0 0 .0783539 298.806 160.681 ]ct
@
grestore newpath
323.493 160.681 mo
323.493 156.685 li
gsave
[.0783691 0 0 .0783539 323.493 160.681 ]ct
@
grestore newpath
348.179 160.681 mo
348.179 158.644 li
gsave
[.0783691 0 0 .0783539 348.179 160.681 ]ct
@
grestore newpath
372.865 160.681 mo
372.865 156.685 li
gsave
[.0783691 0 0 .0783539 372.865 160.681 ]ct
@
grestore newpath
397.552 160.681 mo
397.552 158.644 li
gsave
[.0783691 0 0 .0783539 397.552 160.681 ]ct
@
grestore newpath
422.238 160.681 mo
422.238 156.685 li
gsave
[.0783691 0 0 .0783539 422.238 160.681 ]ct
@
grestore newpath
274.12 160.681 mo
422.238 160.681 li
gsave
[.0783691 0 0 .0783539 274.12 160.681 ]ct
@
grestore newpath
274.12 144.227 mo
276.158 144.227 li
gsave
[.0783691 0 0 .0783539 274.12 144.227 ]ct
@
grestore newpath
274.12 127.773 mo
278.117 127.773 li
gsave
[.0783691 0 0 .0783539 274.12 127.773 ]ct
@
grestore newpath
274.12 111.319 mo
276.158 111.319 li
gsave
[.0783691 0 0 .0783539 274.12 111.319 ]ct
@
grestore newpath
274.12 94.8644 mo
278.117 94.8644 li
gsave
[.0783691 0 0 .0783539 274.12 94.8644 ]ct
@
grestore newpath
274.12 78.4102 mo
276.158 78.4102 li
gsave
[.0783691 0 0 .0783539 274.12 78.4102 ]ct
@
grestore newpath
274.12 61.9559 mo
278.117 61.9559 li
gsave
[.0783691 0 0 .0783539 274.12 61.9559 ]ct
@
grestore newpath
274.12 45.5016 mo
276.158 45.5016 li
gsave
[.0783691 0 0 .0783539 274.12 45.5016 ]ct
@
grestore newpath
274.12 29.0474 mo
278.117 29.0474 li
gsave
[.0783691 0 0 .0783539 274.12 29.0474 ]ct
@
grestore newpath
274.12 12.5931 mo
276.158 12.5931 li
gsave
[.0783691 0 0 .0783539 274.12 12.5931 ]ct
@
grestore newpath
274.12 160.682 mo
274.12 12.5931 li
gsave
[.0783691 0 0 .0783539 274.12 160.682 ]ct
@
grestore newpath
274.12 12.5932 mo
274.12 12.5932 li
gsave
[.0783691 0 0 .0783539 274.12 12.5932 ]ct
@
grestore newpath
298.806 12.5933 mo
298.806 12.5933 li
gsave
[.0783691 0 0 .0783539 298.806 12.5933 ]ct
@
grestore newpath
323.493 12.5933 mo
323.493 12.5933 li
gsave
[.0783691 0 0 .0783539 323.493 12.5933 ]ct
@
grestore newpath
348.179 12.5934 mo
348.179 12.5934 li
gsave
[.0783691 0 0 .0783539 348.179 12.5934 ]ct
@
grestore newpath
372.865 12.5934 mo
372.865 12.5934 li
gsave
[.0783691 0 0 .0783539 372.865 12.5934 ]ct
@
grestore newpath
397.552 12.5935 mo
397.552 12.5935 li
gsave
[.0783691 0 0 .0783539 397.552 12.5935 ]ct
@
grestore newpath
422.238 12.5936 mo
422.238 12.5936 li
gsave
[.0783691 0 0 .0783539 422.238 12.5936 ]ct
@
grestore newpath
274.12 12.5936 mo
422.238 12.5936 li
gsave
[.0783691 0 0 .0783539 274.12 12.5936 ]ct
@
grestore newpath
422.238 160.683 mo
418.241 160.683 li
gsave
[.0783691 0 0 .0783539 422.238 160.683 ]ct
@
grestore newpath
422.238 144.228 mo
420.2 144.228 li
gsave
[.0783691 0 0 .0783539 422.238 144.228 ]ct
@
grestore newpath
422.238 127.774 mo
418.241 127.774 li
gsave
[.0783691 0 0 .0783539 422.238 127.774 ]ct
@
grestore newpath
422.238 111.32 mo
420.2 111.32 li
gsave
[.0783691 0 0 .0783539 422.238 111.32 ]ct
@
grestore newpath
422.238 94.8655 mo
418.241 94.8655 li
gsave
[.0783691 0 0 .0783539 422.238 94.8655 ]ct
@
grestore newpath
422.238 78.4113 mo
420.2 78.4113 li
gsave
[.0783691 0 0 .0783539 422.238 78.4113 ]ct
@
grestore newpath
422.238 61.957 mo
418.241 61.957 li
gsave
[.0783691 0 0 .0783539 422.238 61.957 ]ct
@
grestore newpath
422.238 45.5028 mo
420.2 45.5028 li
gsave
[.0783691 0 0 .0783539 422.238 45.5028 ]ct
@
grestore newpath
422.238 29.0485 mo
418.241 29.0485 li
gsave
[.0783691 0 0 .0783539 422.238 29.0485 ]ct
@
grestore newpath
422.238 12.5942 mo
420.2 12.5942 li
gsave
[.0783691 0 0 .0783539 422.238 12.5942 ]ct
@
grestore newpath
422.238 160.683 mo
422.238 12.5943 li
gsave
[.0783691 0 0 .0783539 422.238 160.683 ]ct
@
grestore newpath
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 3242 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>ArialMT AddT42Char 
1 3414 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>ArialMT AddT42Char 
1 3858 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>ArialMT AddT42Char 
1 4078 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>ArialMT AddT42Char 
1 5106 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>ArialMT AddT42Char 
1 5458 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>ArialMT AddT42Char 
1 5900 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/period 17 def
/zero 19 def
/one 20 def
/two 21 def
/four 23 def
/five 24 def
/six 25 def
end
ArialMT /Encoding get
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /.notdef 
/zero /one /two /.notdef /four /five /six 16{/.notdef}rp 
/G /H /I 8{/.notdef}rp /R 16{/.notdef}rp /c /.notdef 
/e /f 7{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp 
/u 3{/.notdef}rp /y /z 133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [14.04 0 0 -14.04 0 0 ]msf
424.719 67.1609 mo
(5.14)
[7.80624 3.95926 7.80624 0 ]xsh
424.719 133.345 mo
(5.10)
[7.80624 3.95926 7.80624 0 ]xsh
424.719 101.039 mo
(5.12)
[7.80624 3.95926 7.80624 0 ]xsh
424.719 31.9907 mo
(5.16)
[7.80624 3.95926 7.80624 0 ]xsh
3.0518e-5 .993988 1 3.0518e-5 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 4632 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>ArialMT AddT42Char 
1 6370 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>ArialMT AddT42Char 
1 7202 28 <00020055ffe7041905c0001e002a01aeb10602435458b70b1f1801002511
18b8fff6b40f0f065518b8fff4b40d0d065518b8fff040280c0c06551811
0c0d0d065511100c0c06551118112c2b0b281e0f0e1f0e4f0e030e0e1400
50010101b8ffc0400d1011065501041e1c0d221e1405003fed3fedc42b5d
3212392f5ded3201111239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb1
0202435458b70b1f180100251118b8ffeab40f0f025518b8ffea402a0d0d
025518110c0c0c02551118112c2b0b281e0f0e1f0e4f0e030e0e14005001
0101041e1c0d221e1405003fed3fedc45d3212392f5ded3201111239392f
2b2f2b2b10cdd4cd10ddc531301b40343a1a4c1640235b16572366036c16
6d1a67237a1a7d1e8c1a8b1e9a16a91abc1aea16e620f620133d169e16ad
16033a2964060227baffe00023ffe0401821200620281e4f0e5f0e020e0e
1c221e140501d350000100b80268b4041e1c0d1fba0139000b0138401118
40212334301801001810180218902c01b80138b400b5257311b8ffc0400e
212334201140110211902bc78b182b10f65d2bedf4ed10f65d712beded00
3fedfd5de43fed12392f5ded31300138383838005d71015d595913371616
33323e023534270606232202353400333216121110020623222601342623
220615141633323670ad167c61537d50360136bb6db6fc0107c68fed7b7a
f1a2acda02cba57478b2a97c7da10153107a6e4c7fd8700c18566b0108d8
df01109afee3fef2fee7feb3aebf03349bb6c49c8cafaf00>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/three 22 def
/seven 26 def
/nine 28 def
end
ArialMT /Encoding get
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/.notdef /nine 13{/.notdef}rp /G /H /I 8{/.notdef}rp /R 
16{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n 2{/.notdef}rp 
/q /r 2{/.notdef}rp /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [14.04 0 0 -14.04 0 0 ]msf
304.606 175.129 mo
(0.376)
[7.80624 3.95926 7.80624 7.80624 0 ]xsh
354.406 175.129 mo
(0.379)
[7.80624 3.95926 7.80624 7.79221 0 ]xsh
.5 lw
0 lc
1 lj
[2 1.5 ] 0 dsh
274.15 160.716 mo
270.22 160.716 li
.75021 .679683 .670222 .90164 cmyk
@
254.503 137.925 mo
270.22 12.6667 li
@
254.503 137.722 mo
249.931 137.722 li
@
253.861 140.126 mo
249.932 140.126 li
@
254.503 140.532 mo
270.126 160.716 li
@
274.035 12.5834 mo
270.106 12.5834 li
@
3.0518e-5 .993988 1 3.0518e-5 cmyk
PZDYMA+ArialMT*1 [14.04 0 0 -14.04 0 0 ]msf
99.462 175.126 mo
(0.0)
[7.80624 3.95928 0 ]xsh
142.298 175.126 mo
(0.2)
[7.80624 3.95927 0 ]xsh
187.437 175.126 mo
(0.4)
[7.80624 3.95927 0 ]xsh
237.251 175.126 mo
(0.6)
[7.80624 3.95927 0 ]xsh
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 6542 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/eight 27 def
end
ArialMT /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine 13{/.notdef}rp /G /H /I 8{/.notdef}rp /R 
16{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n 2{/.notdef}rp 
/q /r 2{/.notdef}rp /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [14.04 0 0 -14.04 0 0 ]msf
86.4048 49.1876 mo
(8)sh
86.4048 78.9946 mo
(7)sh
86.4048 113.786 mo
(6)sh
86.4048 147.931 mo
(5)sh
3.0518e-5 .993988 1 3.0518e-5 cmyk
PZDYMC+SymbolMT*1 [14.04 0 0 -14.04 0 0 ]msf
335.39 188.282 mo
( )sh
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 10012 38 <00010066ffe7057605d3001d00d3b563026a1d0201b8ffe8b40b0b065500
b8ffe8405f0b0b06552000320d63007000741d8000841d90009a05ab03a5
0db903b40dc70dd000e41df31d110e121d111d1d032a0628112a1c201f47
0d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e13
0014001a1014101a0402b8ffdeb2283901b8ffc0402d2839100f0001041b
131e0c031b1e040910260f4a0026200101011a1f1726200801080c0b0b06
5508191e635c182b4e10f42b5d4ded4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b0172011706042322240235341224333204
17072626232206021514121633323604b4c23dfec3e5edfed79baf0143c2
dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155b1e0
cb2da092a2feef91bbfee98abc00>ArialMT AddT42Char 
1 12858 48 <000100980000060f05ba001002e4b10202435458b90008fff6400b0c0c02
55080e0d11025502b8ffeeb40d11025505b8ffee40280d1102550c120c0c
0255050f0c030900010208090b0e000809020a0b06101002550b100d0d02
550bb8fffab60c0c02550b1000b8ffe6b41010025500b8fff8b40f0f0255
00b8fffcb40d0d0255002f2b2b2bcd2f2b2b2bcd003f3fc0c010d0d0c011
1217392b2b3130012b2b2b001bb10602435458401f07200b0b065506200b
0b065503200b0b065504200b0b065505200b0b065508b8fff240230b0b06
55020c0b0b065503060c0c0655020e0c0c0655090c0c0c06550a0c0c0c06
5507b8fff8b40d0d065508b8fff8401f0d0d06552605010c200a12340f20
0a12340f050c0300010e0b00080801020ab8ffeeb40b0b06550ab8ffeeb4
0c0c06550abb0256001200100256400d000c0b0b065500060c0c065500b8
fff8b40d0d065500012f2b2b2bf42ff42b2b003f3c3f3c3c111217392b2b
5d3130012b2b2b2b2b2b2b2b002b2b2b2b2b1b407f00020f0814021b0804
760c860cc80c03090c490c490f032904250d2c0e58035b04760d780e870d
080b020508390d360e4f024b03440740084d0d420e0a9802990396079608
a803a7070612020f0e0e30050214050502080c0d0d300508140505080c52
0f5201400102020808090a0b0b0d0d0e0e1000080902601280120212ba02
a8000d0131b2052008b80131400a0c090a20400c7f0b010bba0256000e01
0bb2052002b8010b40090f0100200f70100110b80256b720056005800503
05b802a8b3113b59182b1910f45df45d3c18fd3c10ed1a1910edf45d3c1a
18fd3c10ed1a1910ede45d00183f3f3c3c103c103c103c103c103c103c1a
10eded87052e2b877dc4872e182b877dc43130004bb00b534bb01e515a58
bd000cfffb0008ffd60002ffd638383859014bb00c534bb028515a58b900
0dfff8b10e0a38385901435c58b9000dffd4b621390e2c21390db8ffd4b6
37390e3237390db8ffd4b52d390e2c2d392b2b2b2b2b2b5972715d00715d
015d59593311210116173637012111231101230111980124015b30161935
015f0105bbfe56affe5805bafbf29148509b03fcfa4604cbfb3504e0fb20
>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/C 38 def
/M 48 def
end
ArialMT /Encoding get
dup 67 /C put
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine 9{/.notdef}rp /C 3{/.notdef}rp /G /H /I 
3{/.notdef}rp /M 4{/.notdef}rp /R 16{/.notdef}rp /c /.notdef /e 
/f 7{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 
3{/.notdef}rp /y /z 133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [9.36 0 0 -9.36 0 0 ]msf
342.346 191.638 mo
(I)sh
PZDYMC+SymbolMT*1 [14.04 0 0 -14.04 0 0 ]msf
344.986 188.278 mo
(! )
[3.95926 0 ]xsh
PZDYMC+SymbolMT*1 [9.36 0 0 -9.36 0 0 ]msf
355.906 191.638 mo
(")sh
PZDYMB+Calibri*1 [9.36 0 0 -9.36 0 0 ]msf
360.586 191.638 mo
( )sh
PZDYMA+ArialMT*1 [12 0 0 -12 0 0 ]msf
160.613 139.534 mo
(M)sh
PZDYMA+ArialMT*1 [8.04 0 0 -8.04 0 0 ]msf
170.573 135.935 mo
(I)sh
PZDYMA+ArialMT*1 [12 0 0 -12 0 0 ]msf
174.46 143.673 mo
(C)sh
.883665 .769161 3.0518e-5 3.0518e-5 cmyk
PZDYMA+ArialMT*1 [12 0 0 -12 0 0 ]msf
197.596 116.265 mo
(R)sh
PZDYMA+ArialMT*1 [8.04 0 0 -8.04 0 0 ]msf
206.235 112.671 mo
(II)
[2.28336 0 ]xsh
PZDYMA+ArialMT*1 [12 0 0 -12 0 0 ]msf
158.055 120.723 mo
(R)sh
PZDYMA+ArialMT*1 [8.04 0 0 -8.04 0 0 ]msf
166.69 117.125 mo
(I)sh
3.0518e-5 .993988 1 3.0518e-5 cmyk
PZDYMA+ArialMT*1 [12 0 0 -12 0 0 ]msf
209.77 141.221 mo
(M)sh
PZDYMA+ArialMT*1 [8.04 0 0 -8.04 0 0 ]msf
219.736 137.619 mo
(II)
[2.28336 0 ]xsh
gsave
343.312 160.228 mo
393.999 160.228 li
393.999 12.858 li
343.312 12.858 li
cp
clp
347.857 160.501 mo
346.055 160.169 li
345.741 159.837 li
345.884 159.504 li
346.313 159.172 li
346.713 158.839 li
348.171 158.507 li
348.314 158.174 li
347.342 157.842 li
345.912 157.509 li
346.656 157.26 li
346.942 156.928 li
346.77 156.595 li
347.056 156.263 li
347.371 155.93 li
347.457 155.598 li
346.999 155.265 li
347.857 154.933 li
348.915 154.6 li
348.858 154.268 li
347.857 153.935 li
347.714 153.603 li
347.771 153.27 li
346.942 152.938 li
346.913 152.606 li
346.77 152.273 li
348.086 152.024 li
348.028 151.691 li
348.858 151.359 li
349.544 151.026 li
348.515 150.694 li
347.485 150.361 li
345.97 150.029 li
346.141 149.697 li
346.313 149.364 li
347.914 149.032 li
347.943 148.699 li
347.828 148.367 li
346.627 148.034 li
346.885 147.702 li
347.085 147.369 li
347.142 147.037 li
346.942 146.788 li
347.943 146.455 li
348.629 146.123 li
348.715 145.79 li
348.686 145.458 li
347.857 145.125 li
347.199 144.793 li
346.513 144.46 li
346.57 144.128 li
348.028 143.795 li
347.714 143.463 li
348.114 143.131 li
348 142.798 li
348.086 142.466 li
346.97 142.133 li
347.228 141.801 li
347.742 141.551 li
349.63 141.219 li
349.172 140.886 li
348.572 140.554 li
348.4 140.221 li
348.028 139.889 li
348.314 139.557 li
348.028 139.224 li
347.971 138.892 li
347.8 138.559 li
347.285 138.227 li
347.399 137.894 li
346.713 137.562 li
347.428 137.229 li
347.628 136.897 li
347.8 136.564 li
346.713 136.315 li
347.142 135.983 li
347.485 135.65 li
346.942 135.318 li
346.341 134.985 li
346.513 134.653 li
348.114 134.32 li
347.742 133.988 li
347.828 133.655 li
347.056 133.323 li
347.628 132.991 li
348.028 132.658 li
347.285 132.326 li
347.714 131.993 li
347.399 131.661 li
348.257 131.328 li
347.428 131.079 li
347.457 130.746 li
348.457 130.414 li
349.687 130.082 li
349.372 129.749 li
348.801 129.417 li
348.429 129.084 li
347.714 128.752 li
346.313 128.419 li
345.655 128.087 li
346.484 127.754 li
347.399 127.422 li
347.599 127.089 li
347.056 126.757 li
347.285 126.424 li
347.342 126.092 li
347.256 125.843 li
347.085 125.51 li
346.341 125.178 li
347.314 124.845 li
347.542 124.513 li
348.2 124.18 li
348.257 123.848 li
347.943 123.515 li
347.943 123.183 li
346.456 122.851 li
347.113 122.518 li
347.028 122.186 li
347.228 121.853 li
346.398 121.521 li
346.713 121.188 li
348.658 120.856 li
347.943 120.606 li
348.229 120.274 li
346.256 119.942 li
346.513 119.609 li
346.284 119.277 li
347.056 118.944 li
347.542 118.612 li
347.542 118.279 li
346.999 117.947 li
347.056 117.614 li
346.627 117.282 li
347.657 116.949 li
348.086 116.617 li
347.742 116.284 li
347.113 115.952 li
346.97 115.62 li
348.457 115.37 li
349.029 115.038 li
348.429 114.705 li
347.628 114.373 li
346.999 114.04 li
348.086 113.708 li
348.343 113.375 li
349.172 113.043 li
348.543 112.711 li
348.086 112.378 li
346.799 112.046 li
347.314 111.713 li
347.056 111.381 li
347.628 111.048 li
347.542 110.716 li
348.4 110.383 li
348.543 110.134 li
349.086 109.802 li
349.058 109.469 li
348.801 109.137 li
347.857 108.804 li
348.314 108.472 li
347.943 108.139 li
348.743 107.807 li
348.114 107.474 li
348.801 107.142 li
347.571 106.809 li
346.97 106.477 li
346.599 106.145 li
348.229 105.812 li
348.801 105.48 li
349.83 105.147 li
348.314 104.898 li
348.086 104.565 li
347.428 104.233 li
347.399 103.9 li
346.713 103.568 li
347.657 103.236 li
348.457 102.903 li
349.887 102.571 li
349.43 102.238 li
350.23 101.906 li
350.659 101.573 li
350.116 101.241 li
348.572 100.908 li
348.286 100.576 li
348.629 100.243 li
350.116 99.9109 li
349.887 99.6616 li
349.916 99.3291 li
349.315 98.9967 li
349.63 98.6642 li
350.859 98.3317 li
351.603 97.9993 li
350.974 97.6668 li
350.745 97.3344 li
350.974 97.0019 li
352.575 96.6694 li
353.204 96.337 li
357.122 96.0045 li
361.182 95.6721 li
366.587 95.3396 li
370.247 95.0072 li
374.993 94.6747 li
380.57 94.4254 li
384.373 94.0929 li
384.716 93.7604 li
383.629 93.428 li
379.569 93.0955 li
375.565 92.7631 li
369.761 92.4306 li
363.927 92.0981 li
359.524 91.7657 li
354.863 91.4332 li
353.261 91.1008 li
351.574 90.7683 li
350.573 90.4359 li
349.658 90.1034 li
350.345 89.7709 li
352.26 89.4385 li
352.518 89.1891 li
351.202 88.8567 li
348.772 88.5242 li
349.229 88.1918 li
349.487 87.8593 li
349.372 87.5268 li
348.801 87.1944 li
348.915 86.8619 li
350.831 86.5295 li
351.031 86.197 li
352.175 85.8645 li
352.489 85.5321 li
351.774 85.1996 li
350.573 84.8672 li
348.972 84.5347 li
349.973 84.2023 li
349.544 83.8698 li
350.259 83.6205 li
350.888 83.288 li
353.576 82.9555 li
355.492 82.6231 li
358.809 82.2906 li
361.068 81.9582 li
365.471 81.6257 li
370.904 81.2932 li
376.938 80.9608 li
383.372 80.6283 li
386.031 80.2959 li
386.403 79.9634 li
382.285 79.631 li
376.738 79.2985 li
368.703 78.966 li
362.097 78.6336 li
357.551 78.3842 li
356.921 78.0518 li
355.12 77.7193 li
353.204 77.3869 li
350.774 77.0544 li
349.773 76.7219 li
348.743 76.3895 li
348.486 76.057 li
348.858 75.7246 li
350.23 75.3921 li
350.488 75.0597 li
349.544 74.7272 li
347.8 74.3947 li
347.314 74.0623 li
347.943 73.7298 li
348.858 73.3974 li
349.573 73.148 li
349.973 72.8156 li
350.001 72.4831 li
349.887 72.1506 li
349.687 71.8182 li
349.115 71.4857 li
348.543 71.1533 li
348.086 70.8208 li
347.742 70.4883 li
348.343 70.1559 li
348.572 69.8234 li
349.258 69.491 li
348.829 69.1585 li
348.858 68.8261 li
347.971 68.4936 li
348.2 68.1611 li
346.856 67.9118 li
348.343 67.5793 li
347.399 67.2469 li
349.115 66.9144 li
348.772 66.582 li
348.801 66.2495 li
347.314 65.917 li
347.171 65.5846 li
347.485 65.2521 li
348.772 64.9197 li
347.771 64.5872 li
348.343 64.2548 li
348.4 63.9223 li
349.086 63.5898 li
349.344 63.2574 li
347.828 62.9249 li
346.684 62.6756 li
344.626 62.3431 li
345.741 62.0107 li
346.97 61.6782 li
348.486 61.3457 li
348.743 61.0133 li
348.057 60.6808 li
347.171 60.3484 li
346.713 60.0159 li
348.028 59.6834 li
348.829 59.351 li
348.943 59.0185 li
348.543 58.6861 li
347.171 58.3536 li
346.913 58.0212 li
346.856 57.6887 li
348.715 57.4394 li
348.772 57.1069 li
348.171 56.7744 li
347.657 56.442 li
346.541 56.1095 li
346.627 55.7771 li
346.513 55.4446 li
348.486 55.1121 li
348.572 54.7797 li
349.115 54.4472 li
348.086 54.1148 li
348.2 53.7823 li
348 53.4499 li
348.515 53.1174 li
348.915 52.7849 li
348.772 52.4525 li
348.429 52.2031 li
347.8 51.8707 li
348 51.5382 li
348.314 51.2058 li
348.314 50.8733 li
347.742 50.5408 li
347.657 50.2084 li
347.857 49.8759 li
346.856 49.5435 li
346.827 49.211 li
347.857 48.8785 li
348.972 48.5461 li
349.458 48.2136 li
348.114 47.8812 li
347.8 47.5487 li
347.914 47.2163 li
348.543 46.9669 li
348.6 46.6345 li
348.229 46.302 li
348.743 45.9695 li
349.401 45.6371 li
349.401 45.3046 li
348.086 44.9722 li
348.686 44.6397 li
348.686 44.3073 li
349.801 43.9748 li
350.001 43.6423 li
350.917 43.3099 li
350.488 42.9774 li
349.515 42.645 li
348.6 42.3125 li
349.344 41.98 li
349.601 41.7307 li
348.772 41.3982 li
348.314 41.0658 li
348.715 40.7333 li
349.573 40.4009 li
350.116 40.0684 li
349.144 39.7359 li
349.029 39.4035 li
347.485 39.071 li
347.171 38.7386 li
346.627 38.4061 li
347.428 38.0737 li
347.399 37.7412 li
346.17 37.4087 li
346.198 37.0763 li
346.57 36.7438 li
348.2 36.4945 li
347.628 36.162 li
347.8 35.8296 li
347.171 35.4971 li
347.399 35.1646 li
347.628 34.8322 li
348.057 34.4997 li
347.714 34.1673 li
348.286 33.8348 li
349.573 33.5023 li
350.001 33.1699 li
348.658 32.8374 li
347.571 32.505 li
347.971 32.1725 li
348.572 31.8401 li
349.001 31.5076 li
349.372 31.2583 li
349.258 30.9258 li
348.686 30.5933 li
347.028 30.2609 li
347.628 29.9284 li
347.628 29.596 li
348.171 29.2635 li
347.314 28.931 li
347.171 28.5986 li
348.314 28.2661 li
348.028 27.9337 li
348.057 27.6012 li
347.256 27.2688 li
347.657 26.9363 li
348.429 26.6038 li
348.4 26.2714 li
348.915 26.022 li
348.372 25.6896 li
349.744 25.3571 li
349.687 25.0247 li
349.63 24.6922 li
348.629 24.3597 li
348.972 24.0273 li
349.43 23.6948 li
348.171 23.3624 li
347.485 23.0299 li
347.628 22.6974 li
348.372 22.365 li
348.715 22.0325 li
347.399 21.7001 li
347.542 21.3676 li
347.914 21.0352 li
348.028 20.7858 li
348.086 20.4534 li
347.599 20.1209 li
348 19.7884 li
347.428 19.456 li
347.571 19.1235 li
347.428 18.7911 li
346.37 18.4586 li
346.284 18.1261 li
347.085 17.7937 li
349.401 17.4612 li
349.601 17.1288 li
349.115 16.7963 li
348.515 16.4639 li
347.599 16.1314 li
348.686 15.7989 li
348.801 15.5496 li
349.658 15.2171 li
348.4 14.8847 li
347.828 14.5522 li
347.171 14.2198 li
347.542 13.8873 li
348.314 13.5548 li
347.685 13.2224 li
347.457 12.8899 li
.873014 .24213 1 .129183 cmyk
9 lw
1 lc
0 lj
[] 0 dsh
gsave
[.028595 0 0 .0831146 347.857 160.501 ]ct
@
grestore newpath
grestore
1 lw
[] 0 dsh
387.514 83.406 mo
387.514 91.4641 li
.269902 .816403 3.0518e-5 3.0518e-5 cmyk
@
389.514 90.464 mo
387.514 94.464 li
385.514 90.464 li
cp
f
385.513 84.4058 mo
387.513 80.4058 li
389.513 84.4058 li
cp
f
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if

1 0 3 <> ArialMT AddT42Char 
1 8178 32 <0002007201a1043a04060003000700474027050601040709002503012503
020725040406253002019f02cf020202bf05001a09011908575a182b4e10
e410e6002f4ded5d71ed3c10ed103ced10ed011139391139393130012135
2111213521043afc3803c8fc3803c8035ea8fd9ba800>ArialMT AddT42Char 
2 7098 74 <00020042fe5103ea043e001e002a016f40600b0b05142c0b25144c0b4514
06091d191d2c0b26142c23390b36144a0b46145607580b680bfa0af5150e
2e232c273e233e274c27902ca02c07362136293f2c460b46214529542154
29690763216329602c802cda27e821ee23ef271117160615b802b1b4281c
130701b802aa401020003000600070008000c000d0000700b8027d403205
1c1c0f0a45221c0c0a16153325330a251818d01701101740176017801704
2c400b0c02552c400d0d025517121010025517b8fff440110f0f02551706
0e0e025517160d0d025517b8ffea400b0b0b065517121010065517b8ffee
b40c0c065517b8fffc404a0d0d065517740f012500221f24bf0fcf0fdf0f
ff0f041f0f3f0f4f0f030f200b0b02550f1a0c0c02550f220d0d02550f1c
0b0b06550f0c0d0d06550f1a0c0c06550f192b2c74213450182b2b4ef42b
2b2b2b2b2b5d714dedf4ed10fd2b2b2b2b2b2b2b2b2b2b5d713c10fde4f6
3c003fede43fedfd5de43fede43f3c3130015d71005d7117171617163332
363736270623220235341236333217353311140606232226131416333236
35342623220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0
beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880
fc6af8cf78ab032ad1c0bfccc3c6c300>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/space 3 def
/equal 32 def
/g 74 def
end
ArialMT /Encoding get
dup 32 /space put
dup 61 /equal put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PZDYMA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /.notdef /zero /one /two /three /four /five 
/six /seven /eight /nine 3{/.notdef}rp /equal 5{/.notdef}rp /C 
3{/.notdef}rp /G /H /I 3{/.notdef}rp /M 4{/.notdef}rp /R 
16{/.notdef}rp /c /.notdef /e /f /g 6{/.notdef}rp /n 
2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y /z 
133{/.notdef}rp]
PZDYMA+ArialMT nf
PZDYMA+ArialMT*1 [14.04 0 0 -14.04 0 0 ]msf
363.158 54.8967 mo
(2g =)
[7.80624 7.79218 3.59424 0 ]xsh
363.158 71.7026 mo
(8.3 MHz)
[7.79221 3.95926 7.79221 3.59424 11.6391 10.0807 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/PZDYMB+Calibri*1 uf
/PZDYMB+Calibri uf
/PBAAAA+Calibri uf
/PZDYMC+SymbolMT*1 uf
/PZDYMC+SymbolMT uf
/HIBBAA+SymbolMT uf
/PZDYMA+ArialMT*1 uf
/PZDYMA+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
